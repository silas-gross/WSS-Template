(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    781134,      13915]
NotebookOptionsPosition[    763029,      13631]
NotebookOutlinePosition[    763370,      13646]
CellTagsIndexPosition[    763327,      13643]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Pattern", "[", 
  RowBox[{"addition", ",", " ", 
   RowBox[{"{", 
    RowBox[{"_", ",", "\"\<+\>\"", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7709911793368444`*^9, 3.7709912668424406`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d8080331-3884-41e3-a9b8-483a4eefee11"],

Cell[BoxData[
 RowBox[{"addition", ":", 
  RowBox[{"{", 
   RowBox[{"_", ",", "\<\"+\"\>", ",", "_"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.770991252444203*^9, 3.7709912674835777`*^9}, 
   3.7710829015422225`*^9, 3.7710832780223656`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"99ac3636-f538-4a0b-a2b3-4b4975ad4517"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"additionRules", "=", 
  RowBox[{"{", 
   RowBox[{"__", ",", " ", "\"\<+\>\"", ",", "__"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.770992790473785*^9, 3.770992825719166*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"379c9f38-0152-4658-9aaa-fb297370a64c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"__", ",", "\<\"+\"\>", ",", "__"}], "}"}]], "Output",
 CellChangeTimes->{3.770992826671591*^9, 3.771082901666232*^9, 
  3.771083278130372*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d1c614f9-308e-4455-9797-bd06c02e4bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "\"\<+\>\"", ",", " ", "2"}], "}"}], ",", " ", 
   "additionRules"}], "]"}]], "Input",
 CellChangeTimes->{{3.7709928308898954`*^9, 3.7709928767796574`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"57844fb0-228a-49b0-b92d-dc2d3e5913f9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.770992878227332*^9, 3.7710829017422543`*^9, 
  3.771083278215888*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"06a258e4-a32d-4ea1-829c-0814e153a265"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"commutativeGraph", "=", 
  RowBox[{
   RowBox[{"[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"RelationGraph", "[", 
      RowBox[{"commutativeAddition", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "x"}], "}"}]}], "]"}]}], "]"}], "[", 
   RowBox[{"Range", "[", "100", "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Want", " ", "to", " ", "be", " ", "able", " ", "to", " ", "define", " ", 
    "this", " ", "functionally"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.770992911428092*^9, 3.7709929368562984`*^9}, {
   3.770993022136916*^9, 3.7709931072953763`*^9}, {3.770993199099123*^9, 
   3.770993221490551*^9}, 3.7709932810526342`*^9, {3.770993329082049*^9, 
   3.7709933603328967`*^9}, {3.77099346402757*^9, 3.7709935632084007`*^9}, {
   3.770993762999999*^9, 3.7709937807946587`*^9}, {3.7709938147903724`*^9, 
   3.770993821237516*^9}, {3.770993858783887*^9, 3.770993947894869*^9}, {
   3.7709940389405856`*^9, 3.7709941562013664`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[4]:=",ExpressionUUID->"ca103606-2001-4c22-95d6-7f6812162636"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"commutativeGraph", " "}]], "Input",
 CellChangeTimes->{{3.7709931149551783`*^9, 3.7709931804253874`*^9}, {
   3.7709932975154576`*^9, 3.7709933111748667`*^9}, {3.770993789892692*^9, 
   3.7709937942546215`*^9}, {3.770993828768509*^9, 3.7709938403052235`*^9}, 
   3.770993891951488*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"327492a1-5562-407b-ad9f-9f3d81f65ef7"],

Cell[BoxData["commutativeGraph"], "Output",
 CellChangeTimes->{3.771082901842245*^9, 3.771083278333459*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"3166eba5-74c7-4118-9beb-1571cf9f1e6b"]
}, Open  ]],

Cell[BoxData[
 FormBox["", TraditionalForm]], "Input",
 CellChangeTimes->{{3.770994177470024*^9, 3.770994177493599*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c0d88217-4674-41ff-b96b-6296a8aa3712"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"1", "+", "2"}], ",", 
   RowBox[{"2", "+", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77099314253762*^9, 3.770993153813862*^9}, {
  3.770993243405223*^9, 3.770993245426115*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"fd86d2db-90e5-48aa-be3e-c2a178ae623f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.770993154294287*^9, 3.7709932461360345`*^9, 
  3.77108290191825*^9, 3.771083278425739*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b0df8974-4a35-41c1-b7c7-9541301ae2e1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.770993249806549*^9, 3.7709932758694115`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"be88db5b-6c33-4813-b4ef-96e5eba24bbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"commutativeAddition", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "+", "y"}], "\[Equal]", 
     RowBox[{"y", "+", "x"}]}], ",", " ", "True", ",", " ", "False"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770991275618235*^9, 3.770991276866707*^9}, {
   3.770993618465212*^9, 3.7709937519224043`*^9}, 3.7709941870885496`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"290df51f-42d1-453c-8405-7019b78ac303"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7709927851204185`*^9, 3.770992785752986*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e39348c0-d198-4de1-bacf-0f006e66bab1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSet", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\CK-12-Algebra-II-with-Trigonometry-Concepts_b_v78_eiy_s1.\
pdf\>\"", ",", " ", "\"\<Plaintext\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77099375583887*^9, 3.77099375736931*^9}, {
   3.7709987964463296`*^9, 3.7709988599210796`*^9}, 3.770998903194763*^9, {
   3.7710010287054644`*^9, 3.7710010331796556`*^9}, {3.771001138904239*^9, 
   3.771001178099668*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d5556197-0257-4b55-ac11-67cf3d84fa35"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1462420"},
          "OutputSizeLimit`Skeleton"],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 15900704727939038710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 15900704727939038710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 15900704727939038710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900704727939038710 === $SessionID, 
   Out[10], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771001146114941*^9, 3.7710012361196218`*^9, 
  3.7710829319006047`*^9, 3.7710833061206074`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"f1d8ddb4-aae4-4dd2-ae15-3187804f8393"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"introAlgebraPSet", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\scc_introductory_algebra_workbook_spring_2013.pdf\>\"", 
     ",", " ", "\"\<Plaintext\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7709989062874613`*^9, 3.7709989626550627`*^9}, {
  3.771001059542406*^9, 3.7710010670087366`*^9}, {3.7710012605077686`*^9, 
  3.771001264116997*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"36d4ada3-9de4-4fe8-9564-16b385821ace"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcPSet", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\CalcI_Complete_Problems.pdf\>\"", ",", " ", 
    "\"\<Plaintext\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7709990423991756`*^9, 3.77099907067227*^9}, {
  3.771001250738564*^9, 3.771001252973305*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"53b94c62-a924-4c28-8c9a-87e4eb51b9a0"],

Cell[BoxData[
 TemplateBox[{
  "Import","general",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Expected cross reference \
table\\\\\\\"\\\"}]\\)\"",2,12,2,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710012553433323`*^9, 3.77108294080303*^9, 
  3.771083314484872*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"4b97ee72-d1ca-46f9-9cf0-9a7419adf611"],

Cell[BoxData[
 TemplateBox[{
  "Import","general",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Expected cross reference \
table\\\\\\\"\\\"}]\\)\"",2,12,3,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710012553433323`*^9, 3.77108294080303*^9, 
  3.771083314540876*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"69680344-6e4f-4cf2-978c-e2d24c711e46"],

Cell[BoxData[
 TemplateBox[{
  "Import","general",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Could not find document \
trailer\\\\\\\"\\\"}]\\)\"",2,12,4,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710012553433323`*^9, 3.77108294080303*^9, 
  3.7710833145528765`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"1f53d58a-aa51-40cf-b99b-80633653da0a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Import\\\", \\\"::\\\", \
\\\"general\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,12,5,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710012553433323`*^9, 3.77108294080303*^9, 
  3.771083314560877*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"f91fad76-1fae-4bae-ab40-2a59823bc1b0"],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.7710012555154543`*^9, 3.771082940899037*^9, 
  3.7710833145768785`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"771e8ce5-1f08-43c3-ab04-f67d2089c772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsPEMDAS", "=", 
  RowBox[{"{", " ", 
   RowBox[{
   "\"\<What is 2+2\>\"", ",", " ", "\"\<2+3\>\"", ",", "\"\<What is 2+3\>\"",
     ",", " ", "\"\<What is 1+1\>\"", ",", " ", 
    "\"\<Simplify (2-5\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", " ", 
    "\"\<Simplify 2-\!\(\*SuperscriptBox[\(5\), \(2\)]\)\>\"", ",", " ", 
    "\"\<Simplify 10-7+1\>\"", ",", " ", "\"\<Simplify 10-(7+1)\>\"", ",", 
    " ", "\"\<Simplify 24/(4-2\!\(\*SuperscriptBox[\()\), \(3\)]\)\>\"", ",", 
    " ", "\"\<Simplify 4+5(1+12/6\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", 
    ",", " ", "\"\<Simplify (15-3)/(1+5)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710111217256823`*^9, 3.7710111540272284`*^9}, {
  3.7710111885866814`*^9, 3.7710113104444427`*^9}, {3.771011349072077*^9, 
  3.7710114614252415`*^9}, {3.7710717742904773`*^9, 3.7710717974684796`*^9}, {
  3.7710825794066696`*^9, 3.7710825944885254`*^9}, {3.7710828568271475`*^9, 
  3.7710828576980124`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"2333ef13-77fd-4cdf-b6bd-0173171dc2ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What is 2+2\"\>", ",", "\<\"2+3\"\>", 
   ",", "\<\"What is 2+3\"\>", ",", "\<\"What is 1+1\"\>", 
   ",", "\<\"Simplify (2-5\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 2-\\!\\(\\*SuperscriptBox[\\(5\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 10-7+1\"\>", ",", "\<\"Simplify 10-(7+1)\"\>", 
   ",", "\<\"Simplify 24/(4-2\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\"\>", 
   ",", "\<\"Simplify 4+5(1+12/6\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\"\>", ",", "\<\"Simplify (15-3)/(1+5)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771011462913172*^9, 3.7710717984327917`*^9, 
  3.771082596568629*^9, 3.771082859194113*^9, 3.7710829409590397`*^9, 
  3.7710833146248817`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"db1a8277-9de3-48bc-a1d2-061376a9de50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsFractions", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<express 3 2/7 as an improper fraction\>\"", ",", " ", 
    "\"\<express 12 1/3 as an improper fraction\>\"", ",", " ", 
    "\"\<Express 42/5 as a mixed number\>\"", ",", " ", 
    "\"\<Express 53/9 as a mixed number\>\"", ",", " ", 
    "\"\<write 3/18 in simplest form\>\"", ",", " ", 
    RowBox[{
    "\"\<write 42/54 in simplest form\>\"", " ", 
     "\"\<What is 3 2/7 as an improper fraction\>\""}], ",", 
    "\"\<What is 12 1/3 as an improper fraction\>\"", ",", 
    "\"\<What is 42/5 as a mixed number\>\"", ",", 
    "\"\<What is 53/9 as a mixed number\>\"", ",", 
    "\"\<What is 3/18 in simplest form\>\"", ",", 
    "\"\<What is 42/54 in simplest form\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710119043974237`*^9, 3.771012096049966*^9}, {
  3.771071582527122*^9, 3.77107158335518*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2d263997-c8cc-4cfe-a7ea-3727e1faf43b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"express 3 2/7 as an improper fraction\"\>", 
   ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"Express 42/5 as a mixed number\"\>", 
   ",", "\<\"Express 53/9 as a mixed number\"\>", 
   ",", "\<\"write 3/18 in simplest form\"\>", ",", 
   RowBox[{"\<\"What is 3 2/7 as an improper fraction\"\>", 
    " ", "\<\"write 42/54 in simplest form\"\>"}], 
   ",", "\<\"What is 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"What is 42/5 as a mixed number\"\>", 
   ",", "\<\"What is 53/9 as a mixed number\"\>", 
   ",", "\<\"What is 3/18 in simplest form\"\>", 
   ",", "\<\"What is 42/54 in simplest form\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.77107158435925*^9, 3.7710829410150623`*^9, 
  3.771083314672885*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"33fcc5d8-090b-4187-b660-d35494bec8c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "\"\<express 3 2/7 as an improper fraction\>\"", ",", 
   "\"\<express 12 1/3 as an improper fraction\>\"", ",", 
   "\"\<Express 42/5 as a mixed number\>\"", ",", 
   "\"\<Express 53/9 as a mixed number\>\"", ",", 
   "\"\<write 3/18 in simplest form\>\"", ",", 
   "\"\<write 42/54 in simplest form\>\""}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1QsOppFrac", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Multiply 24/3 and 27/8\>\"", ",", " ", "\"\<Multiply 8 and 3/24\>\"",
      ",", " ", "\"\<Add 1/2 and 1/3\>\"", ",", " ", 
     "\"\<What is  24/3 * 27/8\>\"", ",", " ", "\"\<What is  8 * 3/24\>\"", 
     ",", " ", "\"\<What is  1/2 + 1/3\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1QsAbsoluteVal", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<What is the absolute value of -1?\>\"", ",", " ", 
     "\"\<What is |1|\>\"", ",", " ", "\"\<What is |-30|\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1QsNegatice", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<What is 3-(-2)?\>\"", ",", " ", "\"\<What is -3+4\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a1QsIntovars", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Evaluate \!\(\*SuperscriptBox[\(a\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=5 and b=3\>\"", ",", 
    " ", "\"\<Evaluate a-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=4 and \
b=2\>\"", ",", " ", 
    "\"\<Evaluate \!\(\*SuperscriptBox[\(a\), \(2\)]\)+b when a=7 and \
b=1\>\""}], "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7710183957665844`*^9, 3.771018693615785*^9}, {
  3.7710715604288125`*^9, 3.7710715669824667`*^9}, {3.771071599899954*^9, 
  3.771071624993181*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"6c60326b-e42a-4217-9c4b-5a627cce92a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"express 3 2/7 as an improper fraction\"\>", 
   ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"Express 42/5 as a mixed number\"\>", 
   ",", "\<\"Express 53/9 as a mixed number\"\>", 
   ",", "\<\"write 3/18 in simplest form\"\>", 
   ",", "\<\"write 42/54 in simplest form\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710716296289744`*^9, 3.771082941095052*^9, 
  3.771083314720889*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"58d43feb-94c2-4021-9226-d133f795e416"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=5 and \
b=3\"\>", 
   ",", "\<\"Evaluate a-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=4 \
and b=2\"\>", 
   ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+b when a=7 \
and b=1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710716296289744`*^9, 3.771082941095052*^9, 
  3.7710833147248907`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2be9504e-33db-48ac-b35f-52e824b72a2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\"\<express 3 2/7 as an improper fraction\>\"", ",", 
   "\"\<express 12 1/3 as an improper fraction\>\"", ",", 
   "\"\<Express 42/5 as a mixed number\>\"", ",", 
   "\"\<Express 53/9 as a mixed number\>\"", ",", 
   "\"\<write 3/18 in simplest form\>\"", ",", 
   "\"\<write 42/54 in simplest form\>\"", ","}], " ", "}"}]], "Input",
 CellChangeTimes->{{3.771071389445044*^9, 3.7710714057846594`*^9}, {
   3.771071505249978*^9, 3.7710715347214036`*^9}, 3.7710715778464785`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"13a45433-da7c-48b3-b716-61b7e0f7a0b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"express 3 2/7 as an improper fraction\"\>", 
   ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"Express 42/5 as a mixed number\"\>", 
   ",", "\<\"Express 53/9 as a mixed number\"\>", 
   ",", "\<\"write 3/18 in simplest form\"\>", 
   ",", "\<\"write 42/54 in simplest form\"\>", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771018605464325*^9, 3.7710186960261207`*^9, 
  3.771082941155068*^9, 3.771083314768894*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2c91046c-d051-43fa-b322-4096603a793f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsCombineLikeTerms", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Combine like terms of 3a-6a+10a-a\>\"", ",", " ", 
    "\"\<Combine the like terms of 5x-10y+6z-3x\>\"", ",", " ", 
    "\"\<Combine like terms of 3n-5\!\(\*SuperscriptBox[\(n\), \(\(2\)\(\\\ \
\)\)]\)+6n-10+2\!\(\*SuperscriptBox[\(n\), \(2\)]\)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710187153865156`*^9, 3.7710188213954906`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"a7ae84c8-e77e-4163-a09b-03f6288de0b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Combine like terms of 3a-6a+10a-a\"\>", 
   ",", "\<\"Combine the like terms of 5x-10y+6z-3x\"\>", 
   ",", "\<\"Combine like terms of 3n-5\\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\\(2\\)\\(\\\\ \\)\\)]\\)+6n-10+2\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\
\\)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771018823308611*^9, 3.77108294121906*^9, 
  3.7710833148048954`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"e55fbc79-3667-4ea8-b5c7-257e2764b1c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsDistrbutive", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<5(2x+4)\>\"", ",", " ", 
    "\"\<-3(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-2x+7)\>\"", ",", " ", 
    "\"\<-(5\!\(\*SuperscriptBox[\(x\), \(4\)]\)-8)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710188742668247`*^9, 3.7710188984740705`*^9}, {
  3.771019155256483*^9, 3.7710192378708935`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"965f7365-78f2-4e84-8c81-fb88f95c8219"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"5(2x+4)\"\>", 
   ",", "\<\"-3(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-2x+7)\"\>", 
   ",", "\<\"-(5\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\)-8)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771019238729371*^9, 3.7710829412790766`*^9, 
  3.7710833148489027`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"674f73da-4a5a-4ee2-91d5-54d2bdeaf0e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsSolving", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<8x-2=22\>\"", ",", " ", "\"\<-x-2=12\>\"", ",", " ", 
    "\"\<2/3 x+3 =15\>\""}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.7710193041936626`*^9, 3.771019361406973*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"e9cacc85-48d6-4d31-ab94-5d755d539cc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8x-2=22\"\>", ",", "\<\"-x-2=12\"\>", 
   ",", "\<\"2/3 x+3 =15\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710193622781944`*^9, 3.7710829413430777`*^9, 
  3.7710833148929014`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"38508468-4f5f-49a0-b9b6-ccbdc537c13d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsPolynomials", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Factor 3\!\(\*SuperscriptBox[\(x\), \(2\)]\)+4x+1\>\"", ",", " ", 
    "\"\<Factor \!\(\*SuperscriptBox[\(n\), \(2\)]\)+5n+6\>\"", ",", " ", 
    "\"\<Factor \!\(\*SuperscriptBox[\(a\), \(2\)]\)+3a+2\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.771019367476872*^9, 3.7710193984622173`*^9}, {
  3.7710194762827587`*^9, 3.7710195744093504`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7421c56f-d5af-4df6-8034-ece5d5384058"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Factor 3\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)+4x+1\"\>",
    ",", "\<\"Factor \\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\\)+5n+6\"\>", 
   ",", "\<\"Factor \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+3a+2\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771019577320595*^9, 3.771082941403077*^9, 
  3.771083314936904*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"b56c9ee5-cbbe-47e4-b57e-b00b4bd61698"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsPercent", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<A $750 watch is on sale for 15% off. Find the sale price.\>\"", ",", 
    " ", "\"\<A salesman tells you that the $140 earrings are already marked \
20% off. What\nwas the original price?\>\"", ",", " ", 
    "\"\<Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to Toys R \
Us for his birthday.\nSales tax is currently 9%. Determine the price of the \
most expensive toy Tommy can buy with\nthe $50 gift card.\>\"", ",", " ", 
    "\"\<A salesman is paid a monthly salary of $2,300 plus 7% commission on \
his monthly sales.\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\>\"", ",", " ", "\[IndentingNewLine]", 
    "\"\<What is 10% of 100\>\"", ",", " ", "\"\<What is 4% of 16?\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.77101961019419*^9, 3.7710196924983225`*^9}, {
  3.77107136787315*^9, 3.7710713732095246`*^9}, {3.7710825303308954`*^9, 
  3.771082555173584*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e86a1b17-fc00-41b9-8941-ba78eb4e043a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A $750 watch is on sale for 15% off. Find the sale price.\"\>",
    ",", "\<\"A salesman tells you that the $140 earrings are already marked \
20% off. What\\nwas the original price?\"\>", 
   ",", "\<\"Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to \
Toys R Us for his birthday.\\nSales tax is currently 9%. Determine the price \
of the most expensive toy Tommy can buy with\\nthe $50 gift card.\"\>", 
   ",", "\<\"A salesman is paid a monthly salary of $2,300 plus 7% commission \
on his monthly sales.\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\"\>", ",", "\<\"What is 10% of 100\"\>", 
   ",", "\<\"What is 4% of 16?\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771019694683964*^9, 3.771082567117414*^9, 
  3.771082941463076*^9, 3.771083314984909*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"16476eb4-4b0f-4071-a8fd-e752b372148f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra1Questions", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
    "a1QsAbsoluteVal", ",", " ", "a1QsCombineLikeTerms", ",", " ", 
     "a1QsDistrbutive", ",", " ", "a1QsFractions", ",", " ", "a1QsIntovars", 
     ",", " ", "a1QsPEMDAS", ",", " ", "a1QsSolving", ",", " ", "a1QsOppFrac",
      ",", " ", "a1QsPercent", ",", " ", "a1QsNegatice"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710197639313936`*^9, 3.77101991115589*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5d0e39cd-11b1-4595-aeb9-0fdbd16ece9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What is the absolute value of -1?\"\>", 
   ",", "\<\"What is |1|\"\>", ",", "\<\"What is |-30|\"\>", 
   ",", "\<\"Combine like terms of 3a-6a+10a-a\"\>", 
   ",", "\<\"Combine the like terms of 5x-10y+6z-3x\"\>", 
   ",", "\<\"Combine like terms of 3n-5\\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\\(2\\)\\(\\\\ \\)\\)]\\)+6n-10+2\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\
\\)\"\>", ",", "\<\"5(2x+4)\"\>", 
   ",", "\<\"-3(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-2x+7)\"\>", 
   ",", "\<\"-(5\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\)-8)\"\>", 
   ",", "\<\"express 3 2/7 as an improper fraction\"\>", 
   ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"Express 42/5 as a mixed number\"\>", 
   ",", "\<\"Express 53/9 as a mixed number\"\>", 
   ",", "\<\"write 3/18 in simplest form\"\>", ",", 
   RowBox[{"\<\"What is 3 2/7 as an improper fraction\"\>", 
    " ", "\<\"write 42/54 in simplest form\"\>"}], 
   ",", "\<\"What is 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"What is 42/5 as a mixed number\"\>", 
   ",", "\<\"What is 53/9 as a mixed number\"\>", 
   ",", "\<\"What is 3/18 in simplest form\"\>", 
   ",", "\<\"What is 42/54 in simplest form\"\>", 
   ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=5 and \
b=3\"\>", 
   ",", "\<\"Evaluate a-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=4 \
and b=2\"\>", 
   ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+b when a=7 \
and b=1\"\>", ",", "\<\"What is 2+2\"\>", ",", "\<\"2+3\"\>", 
   ",", "\<\"What is 2+3\"\>", ",", "\<\"What is 1+1\"\>", 
   ",", "\<\"Simplify (2-5\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 2-\\!\\(\\*SuperscriptBox[\\(5\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 10-7+1\"\>", ",", "\<\"Simplify 10-(7+1)\"\>", 
   ",", "\<\"Simplify 24/(4-2\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\"\>", 
   ",", "\<\"Simplify 4+5(1+12/6\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\"\>", ",", "\<\"Simplify (15-3)/(1+5)\"\>", 
   ",", "\<\"8x-2=22\"\>", ",", "\<\"-x-2=12\"\>", ",", "\<\"2/3 x+3 =15\"\>",
    ",", "\<\"Multiply 24/3 and 27/8\"\>", ",", "\<\"Multiply 8 and 3/24\"\>",
    ",", "\<\"Add 1/2 and 1/3\"\>", ",", "\<\"What is  24/3 * 27/8\"\>", 
   ",", "\<\"What is  8 * 3/24\"\>", ",", "\<\"What is  1/2 + 1/3\"\>", 
   ",", "\<\"A $750 watch is on sale for 15% off. Find the sale price.\"\>", 
   ",", "\<\"A salesman tells you that the $140 earrings are already marked \
20% off. What\\nwas the original price?\"\>", 
   ",", "\<\"Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to \
Toys R Us for his birthday.\\nSales tax is currently 9%. Determine the price \
of the most expensive toy Tommy can buy with\\nthe $50 gift card.\"\>", 
   ",", "\<\"A salesman is paid a monthly salary of $2,300 plus 7% commission \
on his monthly sales.\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\"\>", ",", "\<\"What is 10% of 100\"\>", 
   ",", "\<\"What is 4% of 16?\"\>", ",", "\<\"What is 3-(-2)?\"\>", 
   ",", "\<\"What is -3+4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771019911996387*^9, 3.771071638666153*^9, 
  3.7710718061481595`*^9, 3.771082609664379*^9, 3.7710829415150795`*^9, 
  3.771083315024911*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"317e876d-b761-45fe-b735-aeb1b42d3ac8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra1Questionssubset", "=", 
  RowBox[{"{", 
   RowBox[{"#2", ",", " ", 
    RowBox[{
     RowBox[{"Tr", "@", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "All", "]"}], "]"}], ",", " ", 
        RowBox[{"StringMatchQ", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "All", "]"}], "]"}], ",", " ", 
          RowBox[{"#2", " ", "<>", "\"\<*\>\""}]}], "]"}]}], "]"}]}], "&"}]}],
    "}"}]}]], "Input",
 CellChangeTimes->{{3.771070745103877*^9, 3.771070921147477*^9}, {
  3.7710710191054063`*^9, 3.771071124523251*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"55418531-eb2f-4ce3-b5de-d405d37af7b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"#2", ",", 
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"Pick", "[", 
      RowBox[{
       RowBox[{"#1", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}],
        ",", 
       RowBox[{"StringMatchQ", "[", 
        RowBox[{
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], ",", 
         RowBox[{"#2", "<>", "\<\"*\"\>"}]}], "]"}]}], "]"}], "]"}], "&"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7710711252032967`*^9, 3.771082941579101*^9, 
  3.771083315072914*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"25f96a6c-d290-44be-921d-8dca07a60bfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1Whatselector", "=", 
  RowBox[{
   RowBox[{"StringMatchQ", "[", 
    RowBox[{
     RowBox[{"#", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], 
     ",", " ", "\"\<Evaluate\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.7710711295796533`*^9, 3.7710712154977584`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"69141ec0-ae4d-4df6-aeb8-ad4d030f5348"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringMatchQ", "[", 
   RowBox[{
    RowBox[{"#1", "\[LeftDoubleBracket]", "All", "\[RightDoubleBracket]"}], 
    ",", "\<\"Evaluate\"\>"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.7710712167117043`*^9, 3.7710829416390896`*^9, 
  3.7710833151209183`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"342ae51b-057d-48ea-8543-c084d9ac15fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"algebra1QuestionsWhat", ":=", 
  RowBox[{"a1Whatselector", "[", "algebra1Questions", "]"}]}]], "Input",
 CellChangeTimes->{{3.771071222152095*^9, 3.7710712764601483`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"f201e9fa-a6dd-4b18-b67d-f11e9d21e13f"],

Cell[CellGroupData[{

Cell[BoxData["algebra1QuestionsWhat"], "Input",
 CellChangeTimes->{{3.771071279809809*^9, 3.7710712847063313`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"ded583d0-6e0f-4eec-868b-b2134852c12e"],

Cell[BoxData[
 TemplateBox[{
  "StringMatchQ","strse",
   "\"String or list of strings expected at position \\!\\(\\*RowBox[{\\\"1\\\
\"}]\\) in \\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"\\\\\\\"What is the absolute value of -1?\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"What is |1|\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"What \
is |-30|\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Combine like terms of \
3a-6a+10a-a\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Combine the like terms of \
5x-10y+6z-3x\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Combine like terms of 3n-5\\\
\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(n\\\\\\\\), \
\\\\\\\\(\\\\\\\\(2\\\\\\\\)\\\\\\\\(\\\\\\\\\\\\\\\\ \\\\\\\\)\\\\\\\\)]\\\\\
\\\\)+6n-10+2\\\\\\\\!\\\\\\\\(\\\\\\\\*SuperscriptBox[\\\\\\\\(n\\\\\\\\), \
\\\\\\\\(2\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"5(2x+4)\\\\\
\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"38\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", \\\"\\\\\\\"Tommy\[CloseCurlyQuote]s \
grandma gave him a $50 gift card to Toys R Us for his birthday.\\\\\\\\nSales \
tax is currently 9%. Determine the price of the most expensive toy Tommy can \
buy with\\\\\\\\nthe $50 gift card.\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"A \
salesman is paid a monthly salary of $2,300 plus 7% commission on his monthly \
sales.\\\\\\\\nDetermine the amount of sales required for his total monthly \
income to be $3,000.\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"What is 10% of 100\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"What is 4% of 16?\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"What is 3-(-2)?\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", \\\"\\\\\\\"Evaluate\\\\\\\"\\\"}], \\\"]\\\"}]\\).\"",2,30,6,
   15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710829417030954`*^9, 3.771083315176922*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"410ca968-fe6b-423f-a026-13ed4cb14f28"],

Cell[BoxData[
 RowBox[{"StringMatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"What is the absolute value of -1?\"\>", 
     ",", "\<\"What is |1|\"\>", ",", "\<\"What is |-30|\"\>", 
     ",", "\<\"Combine like terms of 3a-6a+10a-a\"\>", 
     ",", "\<\"Combine the like terms of 5x-10y+6z-3x\"\>", 
     ",", "\<\"Combine like terms of 3n-5\\!\\(\\*SuperscriptBox[\\(n\\), \\(\
\\(2\\)\\(\\\\ \\)\\)]\\)+6n-10+2\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\\)\
\"\>", ",", "\<\"5(2x+4)\"\>", 
     ",", "\<\"-3(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-2x+7)\"\>", 
     ",", "\<\"-(5\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\)-8)\"\>", 
     ",", "\<\"express 3 2/7 as an improper fraction\"\>", 
     ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
     ",", "\<\"Express 42/5 as a mixed number\"\>", 
     ",", "\<\"Express 53/9 as a mixed number\"\>", 
     ",", "\<\"write 3/18 in simplest form\"\>", ",", 
     RowBox[{"\<\"What is 3 2/7 as an improper fraction\"\>", 
      " ", "\<\"write 42/54 in simplest form\"\>"}], 
     ",", "\<\"What is 12 1/3 as an improper fraction\"\>", 
     ",", "\<\"What is 42/5 as a mixed number\"\>", 
     ",", "\<\"What is 53/9 as a mixed number\"\>", 
     ",", "\<\"What is 3/18 in simplest form\"\>", 
     ",", "\<\"What is 42/54 in simplest form\"\>", 
     ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=5 and \
b=3\"\>", 
     ",", "\<\"Evaluate a-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when \
a=4 and b=2\"\>", 
     ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+b when \
a=7 and b=1\"\>", ",", "\<\"What is 2+2\"\>", ",", "\<\"2+3\"\>", 
     ",", "\<\"What is 2+3\"\>", ",", "\<\"What is 1+1\"\>", 
     ",", "\<\"Simplify (2-5\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>",
      ",", "\<\"Simplify 2-\\!\\(\\*SuperscriptBox[\\(5\\), \\(2\\)]\\)\"\>", 
     ",", "\<\"Simplify 10-7+1\"\>", ",", "\<\"Simplify 10-(7+1)\"\>", 
     ",", "\<\"Simplify 24/(4-2\\!\\(\\*SuperscriptBox[\\()\\), \\(3\\)]\\)\"\
\>", ",", "\<\"Simplify 4+5(1+12/6\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\"\>", ",", "\<\"Simplify (15-3)/(1+5)\"\>", 
     ",", "\<\"8x-2=22\"\>", ",", "\<\"-x-2=12\"\>", 
     ",", "\<\"2/3 x+3 =15\"\>", ",", "\<\"Multiply 24/3 and 27/8\"\>", 
     ",", "\<\"Multiply 8 and 3/24\"\>", ",", "\<\"Add 1/2 and 1/3\"\>", 
     ",", "\<\"What is  24/3 * 27/8\"\>", ",", "\<\"What is  8 * 3/24\"\>", 
     ",", "\<\"What is  1/2 + 1/3\"\>", 
     ",", "\<\"A $750 watch is on sale for 15% off. Find the sale price.\"\>",
      ",", "\<\"A salesman tells you that the $140 earrings are already \
marked 20% off. What\\nwas the original price?\"\>", 
     ",", "\<\"Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to \
Toys R Us for his birthday.\\nSales tax is currently 9%. Determine the price \
of the most expensive toy Tommy can buy with\\nthe $50 gift card.\"\>", 
     ",", "\<\"A salesman is paid a monthly salary of $2,300 plus 7% \
commission on his monthly sales.\\nDetermine the amount of sales required for \
his total monthly income to be $3,000.\"\>", 
     ",", "\<\"What is 10% of 100\"\>", ",", "\<\"What is 4% of 16?\"\>", 
     ",", "\<\"What is 3-(-2)?\"\>", ",", "\<\"What is -3+4\"\>"}], "}"}], 
   ",", "\<\"Evaluate\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.7710712850783033`*^9, 3.7710829417550955`*^9, 
  3.7710833151929216`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"0e03e21e-c7ab-401d-89a0-661cf5008a5f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771020335128747*^9, 3.7710203513826475`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"1760b367-3e57-4f97-81ef-1f5ac4d411d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSetList", "=", 
  RowBox[{"StringSplit", "[", "algebra2PSet", "]"}]}]], "Input",
 CellChangeTimes->{{3.77102049397332*^9, 3.771020557833073*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"2a472862-58b0-4b0f-803a-4e77b423fc29"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          
          RowBox[{"\<\"CK-12\"\>", ",", "\<\"Algebra\"\>", ",", "\<\"II\"\>", 
           ",", "\<\"with\"\>", ",", "\<\"Trigonometry\"\>", 
           ",", "\<\"Concepts\"\>", ",", "\<\"Lori\"\>", 
           ",", "\<\"Jordan\"\>", ",", "\<\"Kate\"\>", ",", "\<\"Dirga\"\>", 
           ",", "\<\"SayThanks\"\>", ",", "\<\"to\"\>", 
           ",", "\<\"theAuthors\"\>", ",", "\<\"Click\"\>", 
           ",", "\<\"http://www.ck12.org/saythanks\"\>", ",", "\<\"(No\"\>", 
           ",", "\<\"sign\"\>", ",", "\<\"in\"\>", ",", "\<\"required)\"\>", 
           ",", "\<\"www.ck12.org\"\>", ",", "\<\"AUTHORS\"\>", 
           ",", "\<\"Lori\"\>", ",", "\<\"Jordan\"\>", ",", "\<\"To\"\>", 
           ",", "\<\"access\"\>", ",", "\<\"a\"\>", 
           ",", "\<\"customizable\"\>", ",", "\<\"version\"\>", 
           ",", "\<\"of\"\>", ",", "\<\"this\"\>", ",", "\<\"book,\"\>", 
           ",", "\<\"as\"\>", ",", "\<\"well\"\>", ",", "\<\"as\"\>", 
           ",", "\<\"other\"\>", ",", "\<\"Kate\"\>", ",", "\<\"Dirga\"\>", 
           ",", "\<\"interactive\"\>", ",", "\<\"content,\"\>", 
           ",", "\<\"visitwww.ck12.org\"\>", ",", "\<\"CK-12\"\>", ",", 
           TemplateBox[{"201642"},
            "OutputSizeLimit`Skeleton"], ",", "\<\"cotx+tanx=2csc2x\"\>", 
           ",", "\<\"Summary\"\>", ",", "\<\"In\"\>", ",", "\<\"this\"\>", 
           ",", "\<\"chapter,\"\>", ",", "\<\"you\"\>", ",", "\<\"will\"\>", 
           ",", "\<\"learn\"\>", ",", "\<\"how\"\>", ",", "\<\"to\"\>", 
           ",", "\<\"graph\"\>", ",", "\<\"sine,\"\>", ",", "\<\"cosine,\"\>",
            ",", "\<\"and\"\>", ",", "\<\"tangent\"\>", ",", "\<\"as\"\>", 
           ",", "\<\"we\"\>", ",", "\<\"well\"\>", ",", "\<\"as\"\>", 
           ",", "\<\"what\"\>", ",", "\<\"a\"\>", 
           ",", "\<\"trigonometric\"\>", ",", "\<\"identity\"\>", 
           ",", "\<\"is.\"\>", ",", "\<\"You\"\>", ",", "\<\"will\"\>", 
           ",", "\<\"use\"\>", ",", "\<\"these\"\>", 
           ",", "\<\"identities\"\>", ",", "\<\"and\"\>", 
           ",", "\<\"formulas\"\>", ",", "\<\"to\"\>", 
           ",", "\<\"simplify\"\>", ",", "\<\"expressions,\"\>", 
           ",", "\<\"prove\"\>", ",", "\<\"trigonometric\"\>", 
           ",", "\<\"statements,\"\>", ",", "\<\"and\"\>", 
           ",", "\<\"solve\"\>", ",", "\<\"equations.\"\>", 
           ",", "\<\"983\"\>"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 32, 15900704727939038710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 32, 15900704727939038710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 32, 15900704727939038710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900704727939038710 === $SessionID, 
   Out[32], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7710205588911505`*^9, 3.771057793301521*^9, 
  3.771082942059119*^9, 3.771083315432938*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"51765e9b-b321-481d-aa1a-07c527a922e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSetList", "=", 
  RowBox[{"algebra2PSetList", "[", 
   RowBox[{"20", ";;", 
    RowBox[{
     RowBox[{"Length", "[", "algebra2PSetList", "]"}], "-", "10"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710205859087086`*^9, 3.771020630493934*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"3eb571b7-d401-4b9c-b389-6b9984e7cec4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"CK-12\"\>", ",", "\<\"Algebra\"\>", ",", "\<\"II\"\>",
             ",", "\<\"with\"\>", ",", "\<\"Trigonometry\"\>", 
            ",", "\<\"Concepts\"\>", ",", "\<\"Lori\"\>", 
            ",", "\<\"Jordan\"\>", ",", "\<\"Kate\"\>", ",", "\<\"Dirga\"\>", 
            ",", "\<\"SayThanks\"\>", ",", "\<\"to\"\>", 
            ",", "\<\"theAuthors\"\>", ",", "\<\"Click\"\>", 
            ",", "\<\"http://www.ck12.org/saythanks\"\>", ",", "\<\"(No\"\>", 
            ",", "\<\"sign\"\>", ",", "\<\"in\"\>", ",", "\<\"required)\"\>", 
            ",", "\<\"www.ck12.org\"\>", ",", "\<\"AUTHORS\"\>", 
            ",", "\<\"Lori\"\>", ",", "\<\"Jordan\"\>", ",", "\<\"To\"\>", 
            ",", "\<\"access\"\>", ",", "\<\"a\"\>", 
            ",", "\<\"customizable\"\>", ",", "\<\"version\"\>", 
            ",", "\<\"of\"\>", ",", "\<\"this\"\>", ",", "\<\"book,\"\>", 
            ",", "\<\"as\"\>", ",", "\<\"well\"\>", ",", "\<\"as\"\>", 
            ",", "\<\"other\"\>", ",", "\<\"Kate\"\>", ",", "\<\"Dirga\"\>", 
            ",", "\<\"interactive\"\>", ",", "\<\"content,\"\>", 
            ",", "\<\"visitwww.ck12.org\"\>", ",", "\<\"CK-12\"\>", ",", 
            TemplateBox[{"201642"},
             "OutputSizeLimit`Skeleton"], ",", "\<\"cotx+tanx=2csc2x\"\>", 
            ",", "\<\"Summary\"\>", ",", "\<\"In\"\>", ",", "\<\"this\"\>", 
            ",", "\<\"chapter,\"\>", ",", "\<\"you\"\>", ",", "\<\"will\"\>", 
            ",", "\<\"learn\"\>", ",", "\<\"how\"\>", ",", "\<\"to\"\>", 
            ",", "\<\"graph\"\>", ",", "\<\"sine,\"\>", 
            ",", "\<\"cosine,\"\>", ",", "\<\"and\"\>", 
            ",", "\<\"tangent\"\>", ",", "\<\"as\"\>", ",", "\<\"we\"\>", 
            ",", "\<\"well\"\>", ",", "\<\"as\"\>", ",", "\<\"what\"\>", 
            ",", "\<\"a\"\>", ",", "\<\"trigonometric\"\>", 
            ",", "\<\"identity\"\>", ",", "\<\"is.\"\>", ",", "\<\"You\"\>", 
            ",", "\<\"will\"\>", ",", "\<\"use\"\>", ",", "\<\"these\"\>", 
            ",", "\<\"identities\"\>", ",", "\<\"and\"\>", 
            ",", "\<\"formulas\"\>", ",", "\<\"to\"\>", 
            ",", "\<\"simplify\"\>", ",", "\<\"expressions,\"\>", 
            ",", "\<\"prove\"\>", ",", "\<\"trigonometric\"\>", 
            ",", "\<\"statements,\"\>", ",", "\<\"and\"\>", 
            ",", "\<\"solve\"\>", ",", "\<\"equations.\"\>", 
            ",", "\<\"983\"\>"}], "}"}], "[", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 15900704727939038710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 15900704727939038710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 15900704727939038710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900704727939038710 === $SessionID, 
   Out[33], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7710206396218257`*^9, 3.7710829421951294`*^9, 
  3.771083315612953*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"15cae407-c72a-4967-a61a-d49a7bb7434f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"algebra2PSetList", ",", " ", "\"\<ExampleA\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.771020470127348*^9, 3.7710204865296173`*^9}, {
   3.771057675347929*^9, 3.771057709112612*^9}, 3.7710579429814596`*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"d0dbf12a-c39a-4ca3-a5e6-bad8d5325af4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "7936"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "8501"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "9237"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10028"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10711"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "11398"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "12532"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "13214"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "14025"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "14987"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "15646"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "16295"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "17107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "17787"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "18422"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "19182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "20586"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "21564"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "22638"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "23556"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "24610"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "25532"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "26211"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "26999"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "27883"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "29054"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "29821"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "30959"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "31872"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "33035"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "34229"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "34694"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "35920"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "36621"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "37967"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "38805"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "39988"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "40705"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "41625"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "42666"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "43905"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "44913"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "45880"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "47545"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "48901"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "50084"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "51068"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "51982"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "53307"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "54444"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "56231"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "57164"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "58333"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "59319"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "61042"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "61985"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "62051"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "63256"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "64402"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "65816"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "66671"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "67729"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "68640"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "69264"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "70254"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "70937"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "71628"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "72157"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "73106"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "74602"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "75501"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "75558"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "76337"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "77409"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "78518"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "79405"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "80766"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "81694"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "82627"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "83641"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "84316"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "85290"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "86088"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "86833"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "87753"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "88808"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "89908"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "91234"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "92456"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "93662"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "94762"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "95937"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "96665"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "97744"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "98727"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "99384"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "100694"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "101504"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "102147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "102405"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "103414"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "105316"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "106371"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "107390"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "109035"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "110026"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "110854"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "111573"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "112222"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "112756"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "112896"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "113638"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "114153"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "115044"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "116060"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "117131"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "118305"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "119212"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "120583"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "121730"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "122435"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "123270"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "124276"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "125083"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "126010"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "126820"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "127853"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "128539"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "129903"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "130906"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "131897"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "132736"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "133937"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "134946"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "136199"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "137221"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "138242"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "139487"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "140399"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "141095"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "142613"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "143310"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "143853"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "144786"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "145855"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "146567"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "147272"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "147804"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "149169"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "150135"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "151617"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "152965"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "154326"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "155084"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "156042"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "156819"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "157821"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "158813"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "160040"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "160652"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "161107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "162140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "163471"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "164742"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "166766"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "167898"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "169062"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "169128"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "170501"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "171552"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "172415"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "173566"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "174285"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "175551"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "176444"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "177497"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "178515"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "179361"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "180787"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "181783"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "182776"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "183844"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "185238"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "186228"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "187019"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "187738"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "189396"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "190308"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "191047"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "192046"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "193219"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "193913"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "194617"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "194844"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "195615"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "196303"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "196927"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "197724"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "198418"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "199053"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "199462"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "200347"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "200881"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "201247"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7710577100003815`*^9, 3.7710577977638984`*^9, 
  3.7710579441253877`*^9, 3.771082942267133*^9, 3.7710833156689553`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"cfaf858c-339e-4a9a-bbed-61aca9559bc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "algebra2PSetList", "]"}]], "Input",
 CellChangeTimes->{{3.7710577164626236`*^9, 3.771057729677744*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"18ea2485-4bf9-4e7f-b32b-cee37ff6fa97"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.7710577305441217`*^9, 3.7710829423191357`*^9, 
  3.7710833157129602`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"8ecbbbca-544d-4cd7-99e9-2a3e81729399"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2Qs", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"algebra2PSetList", "[", 
      RowBox[{"[", 
       RowBox[{"7937", ";;", "7952"}], "]"}], "]"}], ",", " ", 
     RowBox[{"algebra2PSetList", "[", 
      RowBox[{"[", 
       RowBox[{"8502", ";;", "8510"}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710577350276003`*^9, 3.771057849938543*^9}, {
  3.7710579168623095`*^9, 3.7710579273036275`*^9}, {3.771057957470724*^9, 
  3.7710581301741076`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"9727eebb-e54d-4181-ac82-9062755a35c4"],

Cell[BoxData[
 TemplateBox[{
  "Part","take",
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"7937\\\"}]\\) through \\!\\(\
\\*RowBox[{\\\"7952\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"CK-12\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Algebra\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"II\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Trigonometry\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Concepts\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Lori\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Jordan\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Kate\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Dirga\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"SayThanks\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"to\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"theAuthors\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Click\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"http://www.ck12.org/saythanks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"(No\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"sign\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"in\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"required)\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"www.ck12.org\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AUTHORS\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Lori\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Jordan\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"To\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"access\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"customizable\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"version\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"of\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"this\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"book,\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"as\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"well\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"as\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"other\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"Kate\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Dirga\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"interactive\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"content,\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"visitwww.ck12.org\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"CK-12\\\\\\\
\"\\\", \\\",\\\", \\\"\\\\\\\"Foundation\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"is\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"non-pro\.02t\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"organization\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"a\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"mission\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\
\"to\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"201674\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"[\\\", RowBox[{\\\"20\\\", \
\\\";;\\\", \\\"201714\\\"}], \\\"]\\\"}]\\).\"",2,36,7,15900704727939038710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771082942467163*^9, 3.771083315856969*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"7c7c67f6-4a36-42a6-8aeb-7682efc300db"],

Cell[BoxData[
 TemplateBox[{
  "Part","take",
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"8502\\\"}]\\) through \\!\\(\
\\*RowBox[{\\\"8510\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"CK-12\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Algebra\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"II\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Trigonometry\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Concepts\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Lori\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Jordan\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Kate\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Dirga\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"SayThanks\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"to\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"theAuthors\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Click\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"http://www.ck12.org/saythanks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"(No\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"sign\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"in\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"required)\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"www.ck12.org\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AUTHORS\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Lori\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Jordan\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"To\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"access\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"customizable\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"version\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"of\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"this\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"book,\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"as\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"well\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"as\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"other\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"Kate\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Dirga\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"interactive\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"content,\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"visitwww.ck12.org\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"CK-12\\\\\\\
\"\\\", \\\",\\\", \\\"\\\\\\\"Foundation\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"is\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"non-pro\.02t\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"organization\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"a\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"mission\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\
\"to\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"201674\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"[\\\", RowBox[{\\\"20\\\", \
\\\";;\\\", \\\"201714\\\"}], \\\"]\\\"}]\\).\"",2,36,8,15900704727939038710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771082942467163*^9, 3.771083315992976*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"9c1c6fc8-d58f-4d12-9778-62128492147a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1"},
          "OutputSizeLimit`Skeleton"],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 15900704727939038710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 15900704727939038710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 36, 15900704727939038710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900704727939038710 === $SessionID, 
   Out[36], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.7710581139757175`*^9, 3.7710581311440864`*^9}, 
   3.7710829428151693`*^9, 3.7710833162009926`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"24db8482-d54c-49e2-89af-8b447019b70d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["algebra2Qs"], "Input",
 CellChangeTimes->{{3.771058064301793*^9, 3.77105807237717*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"ccc1bba4-6162-4c1a-9594-9a244047aa85"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1"},
          "OutputSizeLimit`Skeleton"],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 37, 15900704727939038710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 37, 15900704727939038710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 37, 15900704727939038710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900704727939038710 === $SessionID, 
   Out[37], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771058073839203*^9, 3.771082943087192*^9, 
  3.77108331644901*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"c67d886d-2483-49eb-9fe8-ede49641bd05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSetList", "[", 
  RowBox[{"[", 
   RowBox[{"8503", ";;", "8510"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7710581376943464`*^9, 3.7710581674301476`*^9}, {
  3.7710581977897487`*^9, 3.77105819797186*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"a315aa41-887f-4376-b5a7-9f6614771663"],

Cell[BoxData[
 TemplateBox[{
  "Part","take",
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"8503\\\"}]\\) through \\!\\(\
\\*RowBox[{\\\"8510\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"CK-12\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Algebra\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"II\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Trigonometry\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Concepts\\\\\\\"\
\\\", \\\",\\\", \\\"\\\\\\\"Lori\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Jordan\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Kate\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Dirga\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"SayThanks\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"to\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"theAuthors\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Click\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"http://www.ck12.org/saythanks\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"(No\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"sign\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"in\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"required)\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"www.ck12.org\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AUTHORS\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Lori\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"Jordan\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"To\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"access\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"customizable\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"version\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"of\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"this\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"book,\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"as\\\\\\\"\\\
\", \\\",\\\", \\\"\\\\\\\"well\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"as\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"other\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"Kate\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Dirga\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"interactive\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"content,\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"visitwww.ck12.org\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"CK-12\\\\\\\
\"\\\", \\\",\\\", \\\"\\\\\\\"Foundation\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"is\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"a\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"non-pro\.02t\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"organization\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"with\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"a\\\
\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"mission\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\
\"to\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"201674\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"[\\\", RowBox[{\\\"20\\\", \
\\\";;\\\", \\\"201714\\\"}], \\\"]\\\"}]\\).\"",2,38,9,15900704727939038710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710829432792063`*^9, 3.7710833166410227`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"9df41896-50ba-4059-b7b7-d3abd3b2a3cd"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"CK-12\"\>", ",", "\<\"Algebra\"\>", 
             ",", "\<\"II\"\>", ",", "\<\"with\"\>", 
             ",", "\<\"Trigonometry\"\>", ",", "\<\"Concepts\"\>", 
             ",", "\<\"Lori\"\>", ",", "\<\"Jordan\"\>", ",", "\<\"Kate\"\>", 
             ",", "\<\"Dirga\"\>", ",", "\<\"SayThanks\"\>", 
             ",", "\<\"to\"\>", ",", "\<\"theAuthors\"\>", 
             ",", "\<\"Click\"\>", 
             ",", "\<\"http://www.ck12.org/saythanks\"\>", ",", "\<\"(No\"\>",
              ",", "\<\"sign\"\>", ",", "\<\"in\"\>", 
             ",", "\<\"required)\"\>", ",", "\<\"www.ck12.org\"\>", 
             ",", "\<\"AUTHORS\"\>", ",", "\<\"Lori\"\>", 
             ",", "\<\"Jordan\"\>", ",", "\<\"To\"\>", ",", "\<\"access\"\>", 
             ",", "\<\"a\"\>", ",", "\<\"customizable\"\>", 
             ",", "\<\"version\"\>", ",", "\<\"of\"\>", ",", "\<\"this\"\>", 
             ",", "\<\"book,\"\>", ",", "\<\"as\"\>", ",", "\<\"well\"\>", 
             ",", "\<\"as\"\>", ",", "\<\"other\"\>", ",", "\<\"Kate\"\>", 
             ",", "\<\"Dirga\"\>", ",", "\<\"interactive\"\>", 
             ",", "\<\"content,\"\>", ",", "\<\"visitwww.ck12.org\"\>", ",", 
             TemplateBox[{"201644"},
              "OutputSizeLimit`Skeleton"], ",", "\<\"Summary\"\>", 
             ",", "\<\"In\"\>", ",", "\<\"this\"\>", ",", "\<\"chapter,\"\>", 
             ",", "\<\"you\"\>", ",", "\<\"will\"\>", ",", "\<\"learn\"\>", 
             ",", "\<\"how\"\>", ",", "\<\"to\"\>", ",", "\<\"graph\"\>", 
             ",", "\<\"sine,\"\>", ",", "\<\"cosine,\"\>", ",", "\<\"and\"\>",
              ",", "\<\"tangent\"\>", ",", "\<\"as\"\>", ",", "\<\"we\"\>", 
             ",", "\<\"well\"\>", ",", "\<\"as\"\>", ",", "\<\"what\"\>", 
             ",", "\<\"a\"\>", ",", "\<\"trigonometric\"\>", 
             ",", "\<\"identity\"\>", ",", "\<\"is.\"\>", ",", "\<\"You\"\>", 
             ",", "\<\"will\"\>", ",", "\<\"use\"\>", ",", "\<\"these\"\>", 
             ",", "\<\"identities\"\>", ",", "\<\"and\"\>", 
             ",", "\<\"formulas\"\>", ",", "\<\"to\"\>", 
             ",", "\<\"simplify\"\>", ",", "\<\"expressions,\"\>", 
             ",", "\<\"prove\"\>", ",", "\<\"trigonometric\"\>", 
             ",", "\<\"statements,\"\>", ",", "\<\"and\"\>", 
             ",", "\<\"solve\"\>", ",", "\<\"equations.\"\>", 
             ",", "\<\"983\"\>"}], "}"}], "[", 
           RowBox[{"20", ";;", "201714"}], "]"}], "\[LeftDoubleBracket]", 
          RowBox[{"8503", ";;", "8510"}], "\[RightDoubleBracket]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 38, 15900704727939038710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 38, 15900704727939038710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 38, 15900704727939038710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900704727939038710 === $SessionID, 
   Out[38], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771058169182247*^9, 3.771058201520108*^9, 
  3.7710829433912134`*^9, 3.7710833167570343`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fa696d60-f362-49d1-90eb-dbaa2f27e817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2Qs", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<What is the most specific subset of the real numbers that -7 is a \
part of?\>\"", ",", " ", "\"\<Plot 1.25, 2/3 and 2 on a number line\>\"", ",",
     " ", "\"\<Identify the property used in the equations below as \
distributive, inverse or associative\>\"", ",", " ", 
    "\"\<Evaluate 2\!\(\*SuperscriptBox[\(x\), \(2\)]\)-9 for x=-3\>\"", ",", 
    "  ", "\"\<Expand (a+b\!\(\*SuperscriptBox[\()\), \(3\)]\)\>\"", ",", 
    " ", "\"\<What is (a+b\!\(\*SuperscriptBox[\()\), \(n\)]\) (Hint: What \
theorem is this?)\>\"", ",", " ", "\"\<Solve 4x-9=11\>\"", ",", " ", 
    "\"\<Solve 3(x-5)+4=10\>\"", ",", " ", 
    "\"\<Use the law of sines to find the missing side of this triangle\>\"", 
    ",", " ", 
    "\"\<What is the largest value for the missing side of this triangle\>\"",
     ",", " ", "\"\<What is sin(60)\>\"", ",", " ", "\"\<What is tan(30)\>\"",
     ",", " ", "\"\<Write 30 degrees in radians\>\"", ",", " ", 
    "\"\<Write \[Pi]/4 in degrees\>\"", ",", " ", 
    "\"\<Is x=-8 a solution to 1/2x+6>3?\>\"", ",", "  ", 
    "\"\<Solve and graph the solution to 2x-3<7\>\"", ",", " ", 
    "\"\<Solve and graph the solution to |3x-1|\[GreaterEqual]10\>\"", ",", 
    "  ", "\"\<How many miutes are in a day?\>\"", ",", " ", 
    "\"\<Wrie the standard form of y=3/2 x+2\>\"", ",", " ", 
    "\"\<Write slope intercept form for a slope of 2 and y-intercept of \
12\>\"", ",", " ", 
    "\"\<Find a perpedicular line of y=3x+2 with y intercept of the \
origin\>\"", ",", 
    "\"\<What are the domain and range of the trigonometric functions?\>\"", 
    " ", ",", " ", "\"\<Graph the inequality y<3x+4\>\"", ",", " ", 
    "\"\<Find the equation of best fit for the below listed data\>\"", ",", 
    " ", "\"\<Graph the parabola give by \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+3x+2. Find the zeros, vertex and intercept\>\"", ",", " ", 
    "\"\<What is the sum from 1 to 5 of a=10n+3\>\"", ",", " ", 
    "\"\<What is the next term in the series \>\"", ",", " ", 
    "\"\<what is the sum of the geometric series from 1 to infinity of 9(1/10\
\!\(\*SuperscriptBox[\()\), \(n\)]\)?\>\"", ",", " ", 
    "\"\<What are the discontiuities in the function y=(x+2)/(x+3x+2). Which \
are fundamental and which are removable?\>\"", ",", " ", 
    "\"\<What is ln(1)?\>\"", ",", " ", 
    "\"\<What are the domain and range of \!\(\*SuperscriptBox[\(e\), \
\(x\)]\) and ln(x)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710582068470354`*^9, 3.771058864236945*^9}, {
  3.77105889644958*^9, 3.771059060194398*^9}, {3.771059094253581*^9, 
  3.7710591689725113`*^9}, {3.771059213441484*^9, 3.771059436664031*^9}, {
  3.771083696942418*^9, 3.7710837178362527`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"82a03de3-0e12-4c59-bb42-528749c4d97e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What is the most specific subset of the real numbers that -7 \
is a part of?\"\>", ",", "\<\"Plot 1.25, 2/3 and 2 on a number line\"\>", 
   ",", "\<\"Identify the property used in the equations below as \
distributive, inverse or associative\"\>", 
   ",", "\<\"Evaluate 2\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-9 for \
x=-3\"\>", 
   ",", "\<\"Expand (a+b\\!\\(\\*SuperscriptBox[\\()\\), \\(3\\)]\\)\"\>", 
   ",", "\<\"What is (a+b\\!\\(\\*SuperscriptBox[\\()\\), \\(n\\)]\\) (Hint: \
What theorem is this?)\"\>", ",", "\<\"Solve 4x-9=11\"\>", 
   ",", "\<\"Solve 3(x-5)+4=10\"\>", 
   ",", "\<\"Use the law of sines to find the missing side of this triangle\"\
\>", ",", "\<\"What is the largest value for the missing side of this \
triangle\"\>", ",", "\<\"What is sin(60)\"\>", ",", "\<\"What is tan(30)\"\>",
    ",", "\<\"Write 30 degrees in radians\"\>", 
   ",", "\<\"Write \[Pi]/4 in degrees\"\>", 
   ",", "\<\"Is x=-8 a solution to 1/2x+6>3?\"\>", 
   ",", "\<\"Solve and graph the solution to 2x-3<7\"\>", 
   ",", "\<\"Solve and graph the solution to |3x-1|\[GreaterEqual]10\"\>", 
   ",", "\<\"How many miutes are in a day?\"\>", 
   ",", "\<\"Wrie the standard form of y=3/2 x+2\"\>", 
   ",", "\<\"Write slope intercept form for a slope of 2 and y-intercept of \
12\"\>", ",", "\<\"Find a perpedicular line of y=3x+2 with y intercept of the \
origin\"\>", 
   ",", "\<\"What are the domain and range of the trigonometric \
functions?\"\>", ",", "\<\"Graph the inequality y<3x+4\"\>", 
   ",", "\<\"Find the equation of best fit for the below listed data\"\>", 
   ",", "\<\"Graph the parabola give by \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\
\\)]\\)+3x+2. Find the zeros, vertex and intercept\"\>", 
   ",", "\<\"What is the sum from 1 to 5 of a=10n+3\"\>", 
   ",", "\<\"What is the next term in the series \"\>", 
   ",", "\<\"what is the sum of the geometric series from 1 to infinity of \
9(1/10\\!\\(\\*SuperscriptBox[\\()\\), \\(n\\)]\\)?\"\>", 
   ",", "\<\"What are the discontiuities in the function y=(x+2)/(x+3x+2). \
Which are fundamental and which are removable?\"\>", 
   ",", "\<\"What is ln(1)?\"\>", 
   ",", "\<\"What are the domain and range of \
\\!\\(\\*SuperscriptBox[\\(e\\), \\(x\\)]\\) and ln(x)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771059437937356*^9, 3.771082943455229*^9, 
  3.771083316805049*^9, 3.7710837217632613`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"63273941-8aa2-4dca-9759-cec561ed68c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"calcQspcalc", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Evaluate f(x)=3-5x-2\!\(\*SuperscriptBox[\(x\), \(2\)]\) for the \
below values: f(0), f(x+h), f(6-t)\>\"", ",", " ", 
     "\"\<Compute  the difrence quotient for the given function\>\"", ",", 
     "  ", "\"\<Find the domain of (\!\(\*SuperscriptBox[\(w\), \
\(3\)]\)-3w+1)/(12 w-7)\>\"", ",", 
     "\"\<Find the inverse of f (x) = 6x +15\>\"", ",", " ", 
     "\"\<Find inverse of W (x) =  (9 \[Minus]11x\!\(\*SuperscriptBox[\()\), \
\(1/5\)]\)\>\"", ",", " ", 
     "\"\<Find the exact value of cos(5 \[Pi]/6) without using a calculator\>\
\"", ",", " ", 
     "\"\<Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator\>\"", ",", " ", "\"\<Solve  4sin (3t ) = 2\>\"", ",", " ", 
     "\"\<Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\!\(\*SuperscriptBox[\(2\), \(0.5\)]\) = 0 in [\[Minus]7\[Pi] ,7\[Pi] }\>\"",
      ",", " ", "\"\<Solve 4y sec(7 y) = \[Minus]21y\>\"", ",", " ", 
     "\"\<Solve 3\[Minus]14sin (12t + 7) =13\>\"", ",", " ", 
     "\"\<Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0\>\"", ",", " ", 
     "\"\<Sketch the graph of f(x)=\!\(\*SuperscriptBox[\(3\), \(1 + 2  \
x\)]\)\>\"", ",", " ", 
     "\"\<Sketch the graph of h(x)=8+3\!\(\*SuperscriptBox[\(e\), \(2  t - \
4\)]\)\>\"", ",", "  ", 
     "\"\<Determine ln(\!\(\*SuperscriptBox[\(e\), \(4\)]\))\>\"", ",", " ", 
     "\"\<Combine 2 \!\(\*SubscriptBox[\(log\), \(4\)]\)x +5 \
\!\(\*SubscriptBox[\(log\), \(4\)]\)y - 1/2 \!\(\*SubscriptBox[\(log\), \
\(4\)]\)x\>\"", " ", ",", " ", 
     "\"\<For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \(4\)]\)) \
and the point x=1, find the secants at point Q and the tangenet line\>\"", 
     ",", " ", 
     "\"\<For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), find the values at the \
below listed points and th limit as x aproaches 2\>\"", ",", "  ", ",", " ", 
     "\"\<For the function f(y)= sin(y)/y find the value at the below listed \
points and the limit as y approaches 0\>\""}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7710601633187313`*^9, 3.7710602840576377`*^9}, {
  3.7710603739809523`*^9, 3.7710610326160107`*^9}, {3.7710611060732737`*^9, 
  3.771061255410469*^9}, {3.7710613977488184`*^9, 3.771061607861419*^9}, {
  3.7710707202458553`*^9, 3.7710707343529253`*^9}, {3.771083528708667*^9, 
  3.7710835661734114`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"a376c96d-0f17-43df-a243-6359725f0331"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Evaluate f(x)=3-5x-2\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\) for the below values: f(0), f(x+h), f(6-t)\"\>", 
   ",", "\<\"Compute  the difrence quotient for the given function\"\>", 
   ",", "\<\"Find the domain of (\\!\\(\\*SuperscriptBox[\\(w\\), \
\\(3\\)]\\)-3w+1)/(12 w-7)\"\>", 
   ",", "\<\"Find the inverse of f (x) = 6x +15\"\>", 
   ",", "\<\"Find inverse of W (x) =  (9 \
\[Minus]11x\\!\\(\\*SuperscriptBox[\\()\\), \\(1/5\\)]\\)\"\>", 
   ",", "\<\"Find the exact value of cos(5 \[Pi]/6) without using a \
calculator\"\>", 
   ",", "\<\"Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator\"\>", ",", "\<\"Solve  4sin (3t ) = 2\"\>", 
   ",", "\<\"Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\\!\\(\\*SuperscriptBox[\\(2\\), \\(0.5\\)]\\) = 0 in [\[Minus]7\[Pi] \
,7\[Pi] }\"\>", ",", "\<\"Solve 4y sec(7 y) = \[Minus]21y\"\>", 
   ",", "\<\"Solve 3\[Minus]14sin (12t + 7) =13\"\>", 
   ",", "\<\"Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0\"\>", 
   ",", "\<\"Sketch the graph of f(x)=\\!\\(\\*SuperscriptBox[\\(3\\), \\(1 + \
2  x\\)]\\)\"\>", 
   ",", "\<\"Sketch the graph of h(x)=8+3\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2  t - 4\\)]\\)\"\>", 
   ",", "\<\"Determine ln(\\!\\(\\*SuperscriptBox[\\(e\\), \\(4\\)]\\))\"\>", 
   ",", "\<\"Combine 2 \\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)x +5 \
\\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)y - 1/2 \
\\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)x\"\>", 
   ",", "\<\"For the function W(x)=ln(1+\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\
\\)]\\)) and the point x=1, find the secants at point Q and the tangenet line\
\"\>", ",", "\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), find the \
values at the below listed points and th limit as x aproaches 2\"\>", ",", 
   "Null", ",", "\<\"For the function f(y)= sin(y)/y find the value at the \
below listed points and the limit as y approaches 0\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710835679775443`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ca489a86-d409-42d3-8179-180391086847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQsderivs", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), use L'Hoptial's rule to \
find the limit as x aproaches 2\>\"", ",", "  ", 
    "\"\<For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), L'Hoptial's rule to \
find the limit as x approaches -1\>\"", ",", " ", 
    "\"\<Use the definition of the derivative to find the derivative of \
f(x)=6\>\"", ",", " ", 
    "\"\<Use the definition of the derivative to find the derivative of V (t \
) = 3\[Minus]14t\>\"", ",", " ", "\[IndentingNewLine]", " ", 
    "\"\<Use the definition of the derivative to find the derivative of z(n)= \
(n+1)/(n+4)\>\"", ",", "\[IndentingNewLine]", 
    "\"\<Use the chain rule to find the derivative of \
Q(t)=(3\!\(\*SuperscriptBox[\(t\), \(3\)]\)-4\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)\>\"", ",", " ", 
    "\"\<Use the quotient rule to find the derivative of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)\>\"", ",", " ", 
    "\[IndentingNewLine]", 
    "\"\<Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + 3\>\"", 
    ",", " ", 
    "\"\<Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)\>\"", 
    ",", " ", "\"\<Find the deriviative of  tan (w)sec(w)\>\"", ",", " ", 
    "\"\<Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))\>\"", ",", " ", 
    "\"\<Find the derivative of f(x)=2\!\(\*SuperscriptBox[\(e\), \(x\)]\)-\!\
\(\*SuperscriptBox[\(8\), \(x\)]\)\>\"", ",", " ", 
    "\"\<Find the derivative of g(t)=4 \!\(\*SubscriptBox[\(log\), \
\(3\)]\)(t)-ln(t)\>\"", ",", " ", 
    "\"\<Find the derivative of 2 cos(x)+arccos(x)\>\"", " ", ",", " ", 
    "\"\<Find the derivative of \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(y\), \(3\)]\)=1\>\"", ",", " ", 
    "\"\<Find extrema of f(x)=12+6\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\"", ",", " ", 
    "\"\<Find extrema of g(w)=tan (w)sec(w)\>\"", ",", " ", 
    "\"\<find the taylor expanision of g(w)=tan (w)sec(w) at w=\[Pi]/4\>\"", 
    ",", " ", 
    "\"\<Find the MacLauren Expanision of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)\>\"", ",", " ", 
    "\"\<Find the Derivative\>\"", ",", " ", 
    "\"\<What is the Deriviative\>\"", ",", " ", 
    "\"\<Evaluate the derivative\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710613709186153`*^9, 3.771061384907164*^9}, {
   3.7710616124774094`*^9, 3.7710616655644417`*^9}, {3.7710617100829606`*^9, 
   3.7710618108407326`*^9}, {3.771061850599373*^9, 3.7710619681588216`*^9}, {
   3.771062006314955*^9, 3.7710621511121435`*^9}, {3.771062535101706*^9, 
   3.7710626530990715`*^9}, {3.771062685514902*^9, 3.771062905169672*^9}, {
   3.771083128947034*^9, 3.7710831451490726`*^9}, 3.7710834388275137`*^9, {
   3.771083811256686*^9, 3.7710838448272*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"222a3863-676a-4a91-8ed5-bf086815e19f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\
\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), use L'Hoptial's \
rule to find the limit as x aproaches 2\"\>", 
   ",", "\<\"For the function (2-(\\!\\(\\*SuperscriptBox[\\(t\\), \
\\(2\\)]\\)+3\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\))/(t+1), \
L'Hoptial's rule to find the limit as x approaches -1\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
f(x)=6\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of V \
(t ) = 3\[Minus]14t\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
z(n)= (n+1)/(n+4)\"\>", 
   ",", "\<\"Use the chain rule to find the derivative of \
Q(t)=(3\\!\\(\\*SuperscriptBox[\\(t\\), \\(3\\)]\\)-4\\!\\(\\*SuperscriptBox[\
\\()\\), \\(1/2\\)]\\)\"\>", 
   ",", "\<\"Use the quotient rule to find the derivative of z(n)= (z+1\\!\\(\
\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>", 
   ",", "\<\"Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3\"\>", ",", "\<\"Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)\
\"\>", ",", "\<\"Find the deriviative of  tan (w)sec(w)\"\>", 
   ",", "\<\"Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))\"\>", 
   ",", "\<\"Find the derivative of f(x)=2\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(x\\)]\\)-\\!\\(\\*SuperscriptBox[\\(8\\), \\(x\\)]\\)\"\>", 
   ",", "\<\"Find the derivative of g(t)=4 \\!\\(\\*SubscriptBox[\\(log\\), \
\\(3\\)]\\)(t)-ln(t)\"\>", 
   ",", "\<\"Find the derivative of 2 cos(x)+arccos(x)\"\>", 
   ",", "\<\"Find the derivative of \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\
\\)/\\!\\(\\*SuperscriptBox[\\(y\\), \\(3\\)]\\)=1\"\>", 
   ",", "\<\"Find extrema of f(x)=12+6\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", 
   ",", "\<\"Find extrema of g(w)=tan (w)sec(w)\"\>", 
   ",", "\<\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4\"\>", 
   ",", "\<\"Find the MacLauren Expanision of z(n)= \
(z+1\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>", 
   ",", "\<\"Find the Derivative\"\>", ",", "\<\"What is the Deriviative\"\>",
    ",", "\<\"Evaluate the derivative\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710629170946207`*^9, 3.7710829435832233`*^9, 
  3.7710833169050426`*^9, 3.7710834440126085`*^9, 3.771084011966262*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"84159903-7ae2-4247-850b-ac7f383494c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQsIntegral", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx\>\"", ",", " ", 
    "\"\<Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \[Minus]18x \
+ 7\>\"", ",", " ", "\"\<Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz\>\"", 
    " ", ",", 
    "\"\<Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + x^2 + \
9\>\"", ",", " ", 
    "\"\<Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw\>\"", ",", " ", 
    "\"\<Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\[Theta] \
)] d\[Theta]\>\"", ",", "\[IndentingNewLine]", 
    "\"\<What is \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx\>\"", ",", " ", 
    "\"\<Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \[Minus]18x \
+ 7\>\"", ",", "\[IndentingNewLine]", 
    "\"\<What is the integral of sin(2x)?\>\"", ",", " ", 
    "\"\<Find the area under the curve of |x| from -1 to 1\>\"", ",", " ", 
    "\"\<What is the area under the curve \!\(\*SuperscriptBox[\(sin\), \
\(2\)]\)x from 0 to \[Pi]/2\>\"", ",", " ", "\"\<Find the integral\>\"", ",", 
    " ", "\"\<What is the integral of x dx\>\"", ",", " ", 
    "\"\<Derivative of f(x)=\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7710629557064366`*^9, 3.771063175011337*^9}, {
  3.7710705208432536`*^9, 3.7710706472117586`*^9}, {3.771083157663864*^9, 
  3.7710831939580765`*^9}, {3.771083409161805*^9, 3.7710834215095205`*^9}, {
  3.7710838521801443`*^9, 3.771083899380905*^9}, {3.77108395416064*^9, 
  3.7710839612743645`*^9}, {3.7710840024611387`*^9, 3.7710840037268524`*^9}, {
  3.7710893022644253`*^9, 3.7710893039790277`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"82bd9a2c-9f48-402b-90c8-7cb9d90eee9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) \
\[Minus]18\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + 7 dx\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) dx \
\[Minus]18x + 7\"\>", 
   ",", "\<\"Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz\"\>", 
   ",", "\<\"Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + x^2 + 9\
\"\>", ",", "\<\"Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw\"\>", 
   ",", "\<\"Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\
\[Theta] )] d\[Theta]\"\>", 
   ",", "\<\"What is \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) \
\[Minus]18\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + 7 dx\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) dx \
\[Minus]18x + 7\"\>", ",", "\<\"What is the integral of sin(2x)?\"\>", 
   ",", "\<\"Find the area under the curve of |x| from -1 to 1\"\>", 
   ",", "\<\"What is the area under the curve \
\\!\\(\\*SuperscriptBox[\\(sin\\), \\(2\\)]\\)x from 0 to \[Pi]/2\"\>", 
   ",", "\<\"Find the integral\"\>", 
   ",", "\<\"What is the integral of x dx\"\>", 
   ",", "\<\"Derivative of f(x)=\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771063176028121*^9, 3.7710706515143023`*^9, 
  3.7710829436472282`*^9, 3.771083316957047*^9, 3.771083423135993*^9, 
  3.771083900684992*^9, 3.7710839632465096`*^9, 3.7710840149224677`*^9, 
  3.7710893065152063`*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"36a1e071-2c1a-46b2-ae97-45c50dbdd44f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQs", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
    "calcQspcalc", ",", " ", "calcQsIntegral", ",", " ", "calcQsderivs"}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771063178168848*^9, 3.771063202032632*^9}, {
  3.7710832208648396`*^9, 3.7710832477843122`*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"9c835307-f52b-4c42-8b0e-c58da6c73503"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Evaluate f(x)=3-5x-2\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\) for the below values: f(0), f(x+h), f(6-t)\"\>", 
   ",", "\<\"Compute  the difrence quotient for the given function\"\>", 
   ",", "\<\"Find the domain of (\\!\\(\\*SuperscriptBox[\\(w\\), \
\\(3\\)]\\)-3w+1)/(12 w-7)\"\>", 
   ",", "\<\"Find the inverse of f (x) = 6x +15\"\>", 
   ",", "\<\"Find inverse of W (x) =  (9 \
\[Minus]11x\\!\\(\\*SuperscriptBox[\\()\\), \\(1/5\\)]\\)\"\>", 
   ",", "\<\"Find the exact value of cos(5 \[Pi]/6) without using a \
calculator\"\>", 
   ",", "\<\"Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator\"\>", ",", "\<\"Solve  4sin (3t ) = 2\"\>", 
   ",", "\<\"Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\\!\\(\\*SuperscriptBox[\\(2\\), \\(0.5\\)]\\) = 0 in [\[Minus]7\[Pi] \
,7\[Pi] }\"\>", ",", "\<\"Solve 4y sec(7 y) = \[Minus]21y\"\>", 
   ",", "\<\"Solve 3\[Minus]14sin (12t + 7) =13\"\>", 
   ",", "\<\"Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0\"\>", 
   ",", "\<\"Sketch the graph of f(x)=\\!\\(\\*SuperscriptBox[\\(3\\), \\(1 + \
2  x\\)]\\)\"\>", 
   ",", "\<\"Sketch the graph of h(x)=8+3\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2  t - 4\\)]\\)\"\>", 
   ",", "\<\"Determine ln(\\!\\(\\*SuperscriptBox[\\(e\\), \\(4\\)]\\))\"\>", 
   ",", "\<\"Combine 2 \\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)x +5 \
\\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)y - 1/2 \
\\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)x\"\>", 
   ",", "\<\"For the function W(x)=ln(1+\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\
\\)]\\)) and the point x=1, find the secants at point Q and the tangenet line\
\"\>", ",", "\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), find the \
values at the below listed points and th limit as x aproaches 2\"\>", ",", 
   "Null", ",", "\<\"For the function f(y)= sin(y)/y find the value at the \
below listed points and the limit as y approaches 0\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) \
\[Minus]18\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + 7 dx\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) dx \
\[Minus]18x + 7\"\>", 
   ",", "\<\"Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz\"\>", 
   ",", "\<\"Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + x^2 + 9\
\"\>", ",", "\<\"Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw\"\>", 
   ",", "\<\"Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\
\[Theta] )] d\[Theta]\"\>", 
   ",", "\<\"What is \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) \
\[Minus]18\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + 7 dx\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) dx \
\[Minus]18x + 7\"\>", ",", "\<\"What is the integral of sin(2x)?\"\>", 
   ",", "\<\"Find the area under the curve of |x| from -1 to 1\"\>", 
   ",", "\<\"What is the area under the curve \
\\!\\(\\*SuperscriptBox[\\(sin\\), \\(2\\)]\\)x from 0 to \[Pi]/2\"\>", 
   ",", "\<\"Find the integral\"\>", 
   ",", "\<\"What is the integral of x dx\"\>", 
   ",", "\<\"Derivative of f(x)=\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\"\>", 
   ",", "\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), use \
L'Hoptial's rule to find the limit as x aproaches 2\"\>", 
   ",", "\<\"For the function (2-(\\!\\(\\*SuperscriptBox[\\(t\\), \
\\(2\\)]\\)+3\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\))/(t+1), \
L'Hoptial's rule to find the limit as x approaches -1\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
f(x)=6\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of V \
(t ) = 3\[Minus]14t\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
z(n)= (n+1)/(n+4)\"\>", 
   ",", "\<\"Use the chain rule to find the derivative of \
Q(t)=(3\\!\\(\\*SuperscriptBox[\\(t\\), \\(3\\)]\\)-4\\!\\(\\*SuperscriptBox[\
\\()\\), \\(1/2\\)]\\)\"\>", 
   ",", "\<\"Use the quotient rule to find the derivative of z(n)= (z+1\\!\\(\
\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>", 
   ",", "\<\"Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3\"\>", ",", "\<\"Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)\
\"\>", ",", "\<\"Find the deriviative of  tan (w)sec(w)\"\>", 
   ",", "\<\"Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))\"\>", 
   ",", "\<\"Find the derivative of f(x)=2\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(x\\)]\\)-\\!\\(\\*SuperscriptBox[\\(8\\), \\(x\\)]\\)\"\>", 
   ",", "\<\"Find the derivative of g(t)=4 \\!\\(\\*SubscriptBox[\\(log\\), \
\\(3\\)]\\)(t)-ln(t)\"\>", 
   ",", "\<\"Find the derivative of 2 cos(x)+arccos(x)\"\>", 
   ",", "\<\"Find the derivative of \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\
\\)/\\!\\(\\*SuperscriptBox[\\(y\\), \\(3\\)]\\)=1\"\>", 
   ",", "\<\"Find extrema of f(x)=12+6\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", 
   ",", "\<\"Find extrema of g(w)=tan (w)sec(w)\"\>", 
   ",", "\<\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4\"\>", 
   ",", "\<\"Find the MacLauren Expanision of z(n)= \
(z+1\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>", 
   ",", "\<\"Find the Derivative\"\>", ",", "\<\"What is the Deriviative\"\>",
    ",", "\<\"Evaluate the derivative\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7710632027441273`*^9, 3.7710706535510592`*^9, 3.7710829437392344`*^9, 
   3.771083248760399*^9, 3.771083317005049*^9, 3.7710834519842453`*^9, 
   3.7710835747583036`*^9, 3.7710839034784737`*^9, 3.7710839686875925`*^9, {
   3.7710840170505977`*^9, 3.77108402307029*^9}, 3.7710893086833553`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"0eb4dbc2-40c3-4fe9-8a56-9c219c46ebfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "questionClassifier", "]"}], "\[IndentingNewLine]", 
 RowBox[{"questionClassifier", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<algebra 1\>\"", "\[Rule]", "algebra1Questions"}], ",", " ", 
      RowBox[{"\"\<algebra 2\>\"", "\[Rule]", "algebra2Qs"}], ",", " ", 
      RowBox[{"\"\<calc\>\"", "\[Rule]", "calcQs"}]}], "|>"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<NaiveBayes\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.771063215443462*^9, 3.7710633502457542`*^9}, 
   3.771071823090603*^9, 3.7710828946484957`*^9, {3.771083581540978*^9, 
   3.7710835945884523`*^9}, {3.771084258837575*^9, 3.771084260138427*^9}, {
   3.771089106079487*^9, 3.771089118126458*^9}, {3.771089317703972*^9, 
   3.7710893251804914`*^9}, {3.771089589321455*^9, 3.7710895907860775`*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"4a6c27e2-f698-4942-9e0f-b4b815b04b6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Nominal\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Nominal\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NaiveBayes\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["138", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 138, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 1537627216228573037]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "VectorLength" -> 1, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Type" -> "NominalVector", "Version" -> {12., 0}, "ID" -> 
             4026204838636604962]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "2+3" -> 1, "2/3 x+3 =15" -> 2, 
                "-3(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-2x+7)" -> 3, 
                "5(2x+4)" -> 4, "-(5\!\(\*SuperscriptBox[\(x\), \(4\)]\)-8)" -> 
                5, "8x-2=22" -> 6, "Add 1/2 and 1/3" -> 7, 
                "A salesman is paid a monthly salary of $2,300 plus 7% \
commission on his monthly sales.\nDetermine the amount of sales required for \
his total monthly income to be $3,000." -> 8, 
                "A salesman tells you that the $140 earrings are already \
marked 20% off. What\nwas the original price?" -> 9, 
                "A $750 watch is on sale for 15% off. Find the sale price." -> 
                10, "Combine 2 \!\(\*SubscriptBox[\(log\), \(4\)]\)x +5 \
\!\(\*SubscriptBox[\(log\), \(4\)]\)y - 1/2 \!\(\*SubscriptBox[\(log\), \
\(4\)]\)x" -> 11, "Combine like terms of 3a-6a+10a-a" -> 12, 
                "Combine like terms of 3n-5\!\(\*SuperscriptBox[\(n\), \
\(\(2\)\(\\ \)\)]\)+6n-10+2\!\(\*SuperscriptBox[\(n\), \(2\)]\)" -> 13, 
                "Combine the like terms of 5x-10y+6z-3x" -> 14, 
                "Compute  the difrence quotient for the given function" -> 15,
                 "Derivative of f(x)=\!\(\*SuperscriptBox[\(x\), \(2\)]\)" -> 
                16, "Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + \
x^2 + 9" -> 17, "Determine ln(\!\(\*SuperscriptBox[\(e\), \(4\)]\))" -> 18, 
                "Evaluate 2\!\(\*SuperscriptBox[\(x\), \(2\)]\)-9 for x=-3" -> 
                19, "Evaluate a-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=4 \
and b=2" -> 20, 
                "Evaluate f(x)=3-5x-2\!\(\*SuperscriptBox[\(x\), \(2\)]\) for \
the below values: f(0), f(x+h), f(6-t)" -> 21, 
                "Evaluate \!\(\*SuperscriptBox[\(a\), \(2\)]\)+b when a=7 and \
b=1" -> 22, 
                "Evaluate \!\(\*SuperscriptBox[\(a\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=5 and b=3" -> 23, 
                "Evaluate the derivative" -> 24, 
                "Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz" -> 25, 
                "Expand (a+b\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 26, 
                "express 12 1/3 as an improper fraction" -> 27, 
                "express 3 2/7 as an improper fraction" -> 28, 
                "Express 42/5 as a mixed number" -> 29, 
                "Express 53/9 as a mixed number" -> 30, 
                "Find a perpedicular line of y=3x+2 with y intercept of the \
origin" -> 31, 
                "Find extrema of f(x)=12+6\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(x\), \(3\)]\)" -> 32, 
                "Find extrema of g(w)=tan (w)sec(w)" -> 33, 
                "Find inverse of W (x) =  (9 \[Minus]11x\!\(\*SuperscriptBox[\
\()\), \(1/5\)]\)" -> 34, "Find the area under the curve of |x| from -1 to 1" -> 
                35, "Find the Derivative" -> 36, 
                "Find the derivative of 2 cos(x)+arccos(x)" -> 37, 
                "Find the derivative of f(x)=2\!\(\*SuperscriptBox[\(e\), \(x\
\)]\)-\!\(\*SuperscriptBox[\(8\), \(x\)]\)" -> 38, 
                "Find the derivative of g(t)=4 \!\(\*SubscriptBox[\(log\), \
\(3\)]\)(t)-ln(t)" -> 39, 
                "Find the derivative of \!\(\*SuperscriptBox[\(x\), \(2\)]\)/\
\!\(\*SuperscriptBox[\(y\), \(3\)]\)=1" -> 40, 
                "Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3" -> 41, "Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)" -> 42,
                 "Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))" -> 43, 
                "Find the deriviative of  tan (w)sec(w)" -> 44, 
                "Find the domain of (\!\(\*SuperscriptBox[\(w\), \
\(3\)]\)-3w+1)/(12 w-7)" -> 45, 
                "Find the equation of best fit for the below listed data" -> 
                46, "Find the exact value of cos(5 \[Pi]/6) without using a \
calculator" -> 47, 
                "Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator" -> 48, "Find the integral" -> 49, 
                "Find the inverse of f (x) = 6x +15" -> 50, 
                "Find the MacLauren Expanision of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 51, 
                "find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4" -> 52, 
                "Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\
\[Theta] )] d\[Theta]" -> 53, 
                "Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw" -> 54, 
                "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \
\[Minus]18x + 7" -> 55, 
                "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 56, 
                "For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), L'Hoptial's rule to \
find the limit as x approaches -1" -> 57, 
                "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), find the values at the \
below listed points and th limit as x aproaches 2" -> 58, 
                "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), use L'Hoptial's rule to \
find the limit as x aproaches 2" -> 59, 
                "For the function f(y)= sin(y)/y find the value at the below \
listed points and the limit as y approaches 0" -> 60, 
                "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \
\(4\)]\)) and the point x=1, find the secants at point Q and the tangenet \
line" -> 61, "Graph the inequality y<3x+4" -> 62, 
                "Graph the parabola give by \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+3x+2. Find the zeros, vertex and intercept" -> 63, 
                "How many miutes are in a day?" -> 64, 
                "Identify the property used in the equations below as \
distributive, inverse or associative" -> 65, 
                "Is x=-8 a solution to 1/2x+6>3?" -> 66, 
                "Multiply 24/3 and 27/8" -> 67, "Multiply 8 and 3/24" -> 68, 
                "Plot 1.25, 2/3 and 2 on a number line" -> 69, 
                "Simplify 10-(7+1)" -> 70, "Simplify 10-7+1" -> 71, 
                "Simplify (15-3)/(1+5)" -> 72, 
                "Simplify 24/(4-2\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 73, 
                "Simplify (2-5\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 74, 
                "Simplify 2-\!\(\*SuperscriptBox[\(5\), \(2\)]\)" -> 75, 
                "Simplify 4+5(1+12/6\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 
                76, "Sketch the graph of f(x)=\!\(\*SuperscriptBox[\(3\), \(1 \
+ 2  x\)]\)" -> 77, 
                "Sketch the graph of h(x)=8+3\!\(\*SuperscriptBox[\(e\), \(2  \
t - 4\)]\)" -> 78, "Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0" -> 79, 
                "Solve 3(x-5)+4=10" -> 80, 
                "Solve 3\[Minus]14sin (12t + 7) =13" -> 81, 
                "Solve  4sin (3t ) = 2" -> 82, 
                "Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\!\(\*SuperscriptBox[\(2\), \(0.5\)]\) = 0 in [\[Minus]7\[Pi] ,7\[Pi] }" -> 
                83, "Solve 4x-9=11" -> 84, "Solve 4y sec(7 y) = \[Minus]21y" -> 
                85, "Solve and graph the solution to 2x-3<7" -> 86, 
                "Solve and graph the solution to |3x-1|\[GreaterEqual]10" -> 
                87, 
                "Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to \
Toys R Us for his birthday.\nSales tax is currently 9%. Determine the price \
of the most expensive toy Tommy can buy with\nthe $50 gift card." -> 88, 
                "Use the chain rule to find the derivative of \
Q(t)=(3\!\(\*SuperscriptBox[\(t\), \(3\)]\)-4\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)" -> 89, 
                "Use the definition of the derivative to find the derivative \
of f(x)=6" -> 90, 
                "Use the definition of the derivative to find the derivative \
of V (t ) = 3\[Minus]14t" -> 91, 
                "Use the definition of the derivative to find the derivative \
of z(n)= (n+1)/(n+4)" -> 92, 
                "Use the law of sines to find the missing side of this \
triangle" -> 93, 
                "Use the quotient rule to find the derivative of z(n)= (z+1\!\
\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 94, 
                "What are the discontiuities in the function \
y=(x+2)/(x+3x+2). Which are fundamental and which are removable?" -> 95, 
                "What are the domain and range of \!\(\*SuperscriptBox[\(e\), \
\(x\)]\) and ln(x)" -> 96, 
                "What are the domain and range of the trigonometric \
functions?" -> 97, "What is |1|" -> 98, "What is 10% of 100" -> 99, 
                "What is 1+1" -> 100, "What is  1/2 + 1/3" -> 101, 
                "What is 12 1/3 as an improper fraction" -> 102, 
                "What is 2+2" -> 103, "What is 2+3" -> 104, 
                "What is  24/3 * 27/8" -> 105, "What is |-30|" -> 106, 
                "What is 3/18 in simplest form" -> 107, "What is 3-(-2)?" -> 
                108, "What is -3+4" -> 109, "What is 42/54 in simplest form" -> 
                110, "What is 42/5 as a mixed number" -> 111, 
                "What is 4% of 16?" -> 112, "What is 53/9 as a mixed number" -> 
                113, "What is  8 * 3/24" -> 114, 
                "What is (a+b\!\(\*SuperscriptBox[\()\), \(n\)]\) (Hint: What \
theorem is this?)" -> 115, "What is ln(1)?" -> 116, "What is sin(60)" -> 117, 
                "What is tan(30)" -> 118, "What is the absolute value of -1?" -> 
                119, "What is the area under the curve \
\!\(\*SuperscriptBox[\(sin\), \(2\)]\)x from 0 to \[Pi]/2" -> 120, 
                "What is the Deriviative" -> 121, 
                "What is the integral of sin(2x)?" -> 122, 
                "What is the integral of x dx" -> 123, 
                "What is the largest value for the missing side of this \
triangle" -> 124, 
                "What is the most specific subset of the real numbers that -7 \
is a part of?" -> 125, "What is the next term in the series " -> 126, 
                "What is the sum from 1 to 5 of a=10n+3" -> 127, 
                "what is the sum of the geometric series from 1 to infinity \
of 9(1/10\!\(\*SuperscriptBox[\()\), \(n\)]\)?" -> 128, 
                "What is \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 129, 
                "Wrie the standard form of y=3/2 x+2" -> 130, 
                "Write 30 degrees in radians" -> 131, 
                "write 3/18 in simplest form" -> 132, 
                "What is 3 2/7 as an improper fraction" 
                 "write 42/54 in simplest form" -> 133, 
                "Write slope intercept form for a slope of 2 and y-intercept \
of 12" -> 134, "Write \[Pi]/4 in degrees" -> 135, "-x-2=12" -> 136, Null -> 
                137]}, "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
             8874348951581137712, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 7740907413418953510]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association["algebra 1" -> 1, "algebra 2" -> 2, "calc" -> 3]}, 
             "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
             3923291764372626615, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {3}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 689381485439722164]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "algebra 1" -> 0.36879432624113473`, "algebra 2" -> 
        0.22695035460992907`, "calc" -> 0.40425531914893614`]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "ClassNumber" -> 3, "ClassPriors" -> 
      Association[
       1 -> 0.36879432624113473`, 2 -> 0.22695035460992907`, 3 -> 
        0.40425531914893614`], "LogProbabilities" -> CompressedData["
1:eJxTTMoPSmVmYGBgBOJOIAaxpeKn6mVU8h9g4s4p7/ugfCDn8iHNe7KqB4ar
uNvd5zaa71Tg4jdmM3yUlRGgufnUFucUWybxt4mbbv6ltTupHf7o9tIrXkaa
+HAP56xrThma67gGjXuIDX9aiVMrPw62eoFe5Tmt8wup5lMa7wOdzmmVLwZb
OhwVH9jybaDTOa3FaVU+UCseSY0XAK22zl8=
       "], "FeatureNumber" -> 1, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association[
            "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {137}]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {137}]], "Index" -> {
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 21 -> 
                21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26, 27 -> 
                27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32, 33 -> 
                33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 38, 39 -> 
                39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 44, 45 -> 
                45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 50, 51 -> 
                51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 56, 57 -> 
                57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 62, 63 -> 
                63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 68, 69 -> 
                69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 74, 75 -> 
                75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 80, 81 -> 
                81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 86, 87 -> 
                87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 92, 93 -> 
                93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 98, 99 -> 
                99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 103, 104 -> 
                104, 105 -> 105, 106 -> 106, 107 -> 107, 108 -> 108, 109 -> 
                109, 110 -> 110, 111 -> 111, 112 -> 112, 113 -> 113, 114 -> 
                114, 115 -> 115, 116 -> 116, 117 -> 117, 118 -> 118, 119 -> 
                119, 120 -> 120, 121 -> 121, 122 -> 122, 123 -> 123, 124 -> 
                124, 125 -> 125, 126 -> 126, 127 -> 127, 128 -> 128, 129 -> 
                129, 130 -> 130, 131 -> 131, 132 -> 132, 133 -> 133, 134 -> 
                134, 135 -> 135, 136 -> 136, 137 -> 137]}, "MissingCode" -> 0,
              "Version" -> {12., 0}, "ID" -> 5323979056978998357, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {137}], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Method" -> "NaiveBayes", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "SmoothingParameter" -> 
        Association["Value" -> 0.2, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[287185], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.0720064`6.308916092165556, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[1.0735154805430043`, 0.06223126771104195], "Accuracy" -> 
         Around[0.42561402289548944`, 0.13159670857571198`], "EvaluationTime" -> 
         0.000028368865525867188`, "TestSize" -> 28, "ModelMemory" -> 31968, 
         "ModelUtility" -> -0.7756307394431505, "TrainingSize" -> 110, 
         "TrainingTime" -> 0.007943282347242814, "TrainingMemory" -> 56808, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.0735154805430043`, 0.0440041514003132]}, 
         "AccuracyHistory" -> {
           Around[0.42561402289548944`, 0.09305292501571583]}, 
         "Configuration" -> {"NaiveBayes", "SmoothingParameter" -> 0.2}, 
         "FinalTrainingSize" -> 138], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 273937482658168]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "NaiveBayes", "Options" -> 
           Association["SmoothingParameter" -> Association["Value" -> 0.2]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0948401983804612`, 0.037249647238314226`], "Accuracy" -> 
              Around[0.3697307590491998, 0.068134686612173], "EvaluationTime" -> 
              0.000012589254117941663`, "TestSize" -> 100, "ModelMemory" -> 
              15192, "ModelUtility" -> -0.7905507824261362, "TrainingSize" -> 
              15, "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
              48408, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.0948401983804612`, 0.026339478159018742`]}, 
              "AccuracyHistory" -> {
                Around[0.3697307590491998, 0.0481784989374878]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0735154805430043`, 0.06223126771104195], "Accuracy" -> 
              Around[0.42561402289548944`, 0.13159670857571198`], 
              "EvaluationTime" -> 0.000028368865525867188`, "TestSize" -> 28, 
              "ModelMemory" -> 31968, "ModelUtility" -> -0.7756307394431505, 
              "TrainingSize" -> 110, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 56808, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0735154805430043`, 0.0440041514003132]}, 
              "AccuracyHistory" -> {
                Around[0.42561402289548944`, 0.09305292501571583]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000028368865525867188`, "MeanCrossEntropy" -> 
             Around[1.0735154805430043`, 0.06223126771104195], "ModelMemory" -> 
             31968, "TrainingMemory" -> 56808, "TrainingTime" -> 
             0.01627478220770655], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 1], 1]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 273933187690872]], "MaxTrainingSize" -> 138, 
      "PreprocessorEvaluationTime" -> 4.7429914219185`2.*^-6, 
      "PreprocessorMemory" -> 43368, "InputDimension" -> 1, "OutputDimension" -> 
      1, "BaselineLogProbability" -> -1.0705886526306871`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.7710751917140887`17.329040181077893*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 15, "TimeBudgets" -> 0.0035804520856954417`, 
          "ElapsedTimes" -> 0.0119853, "ExperimentCounts" -> 1], 
         Association[
         "TrainingSizes" -> 110, "TimeBudgets" -> 0.01790226042847721, 
          "ElapsedTimes" -> 0.011999, "ExperimentCounts" -> 1]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[273941777625464]], "ID" -> 
         273946072592760]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Nominal", "Weight" -> 1, 
           "Values" -> {
            "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \(4\)]\)) \
and the point x=1, find the secants at point Q and the tangenet line"}, "ID" -> 
           4654099653526711133]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 0.34985244973730617`, 
      "MaxTrainingMemory" -> 423576, "DataMemory" -> 14552, "FunctionMemory" -> 
      139968, "LanguageVersion" -> {12., 0}, "Date" -> 
      DateObject[{2019, 7, 2, 16, 53, 11.9541104`8.830092221520557}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.77106336236709*^9, 3.771070659264723*^9, 3.7710716547715087`*^9, 
   3.7710718254747634`*^9, 3.771082623923913*^9, 3.7710826655701776`*^9, 
   3.7710829456153665`*^9, 3.771083255572774*^9, 3.771083320523201*^9, 
   3.7710833709450817`*^9, 3.771083458432695*^9, 3.771083597497714*^9, 
   3.7710837354379253`*^9, 3.7710839096387978`*^9, 3.7710839723278255`*^9, 
   3.771084037034997*^9, 3.771084243470064*^9, {3.7710890850536113`*^9, 
   3.7710891201042414`*^9}, {3.7710893141243935`*^9, 3.771089327039372*^9}, 
   3.7710895920141115`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"7fd6d8ab-4369-4901-8ed0-1dc64cdb3611"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equivilentFraction", "[", 
    RowBox[{"x_", ",", " ", "y_", ",", " ", "n_"}], "]"}], ":=", " ", 
   RowBox[{"n", "*", 
    RowBox[{"x", "/", "y"}]}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.7710690813754177`*^9, 3.7710691204935193`*^9}, 
   3.771069190433951*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"c7c8062e-a44d-44d6-9860-e4bb30b9612d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"turnOffEquivFrac", "[", "question_", "]"}], ":=", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"question", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "__", ",", " ", "\"\<Fraction\>\"", ",", "__", ",", 
      "\"\<implest form\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7710691462320576`*^9, 3.7710693308984632`*^9}, {
  3.7710694268978434`*^9, 3.7710694280764112`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"ffe598d9-2e62-453f-bf80-2e355ce20f82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"question", ",", 
   RowBox[{"MatchQ", "[", 
    RowBox[{"question", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Fraction\>\"", ",", "__", ",", "\"\<implest form\>\""}], 
      "}"}]}], "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[47]:=",ExpressionUUID->"d6e8e70f-1930-4c2a-950c-7644ca9f37a6"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"question", ",", 
   RowBox[{"MatchQ", "[", 
    RowBox[{"question", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Fraction\"\>", ",", "__", ",", "\<\"implest form\"\>"}], 
      "}"}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7710693350724354`*^9, 3.7710829458914022`*^9, 
  3.7710833209072304`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"eaad2f17-29e1-459c-aa9a-672fdb831a51"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"allpoints", "[", "question_", "]"}], ":=", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"question", ",", " ", 
    RowBox[{"{", 
     RowBox[{"__", ",", " ", "\"\<all points\>\"", ",", " ", "__"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710693704181857`*^9, 3.771069476171259*^9}, {
  3.7710696647325344`*^9, 3.7710696739750395`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"7be7aa86-af93-47b9-b972-8d4991397820"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eitherPointfirst", "[", 
   RowBox[{"a_", ",", " ", "b_", ",", "c_", ",", " ", "d_"}], "]"}], ":=", 
  " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<(\>\"", ",", "a", ",", " ", "b", ",", " ", "\"\<)\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<(\>\"", "c"}], ",", " ", 
       RowBox[{"d", "\"\<)\>\""}]}], "}"}]}], "}"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<(\>\"", "c"}], ",", " ", 
       RowBox[{"d", "\"\<)\>\""}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<(\>\"", ",", "a", ",", " ", "b", ",", " ", "\"\<)\>\""}], 
      "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7710695051199274`*^9, 3.771069630424241*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"f1b8e95c-f7a7-4e5f-9042-b8c41a06cf16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isPoint", "[", "answer_", "]"}], ":=", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"answer", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<(\>\"", "__", "\"\<)\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7710696434506283`*^9, 3.771069722847567*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"cf5243df-9a66-4949-b392-be01d5b85888"],

Cell[BoxData[
 RowBox[{
  RowBox[{"commutative", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"a", "+", "b"}], "\[Rule]", " ", 
   RowBox[{"b", "+", "a"}]}]}]], "Input",
 CellChangeTimes->{{3.7710697585959425`*^9, 3.771069793677631*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d978e4ff-0fbd-47c0-96b0-bdd7f16386c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"distributive", "[", 
   RowBox[{"a_", ",", "b_", ",", " ", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"(", 
     RowBox[{"b", "+", "c"}], ")"}]}], "\[Rule]", " ", 
   RowBox[{
    RowBox[{"a", "*", "b"}], "+", 
    RowBox[{"a", "*", "c"}]}]}]}]], "Input",
 CellChangeTimes->{{3.771069797383686*^9, 3.7710698606012144`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"935017ba-4976-4faf-b131-247609eb5a57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"commutativemulti", "[", 
    RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "*", "b"}], "\[Rule]", " ", 
    RowBox[{"b", "*", "a"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"associative", "[", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "+", 
     RowBox[{"(", 
      RowBox[{"b", "+", "c"}], ")"}]}], "\[Rule]", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "+", "c"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"associativemulti", "[", 
    RowBox[{"a_", ",", " ", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "*", 
     RowBox[{"(", 
      RowBox[{"b", "*", "c"}], ")"}]}], "\[Rule]", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "*", "b"}], ")"}], "*", "c"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7710698780822225`*^9, 3.771070003707766*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"e1deccb3-d248-4637-b277-3c9d353f90c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isMatrix", "[", "answer_", "]"}], ":=", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"answer", ",", " ", "MatrixForm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77107007140339*^9, 3.771070109584694*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ecc6eb26-7077-496d-aa11-d4049496a36a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"questionClassifier", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "algebra1Questions", ",", " ", "algebra2Qs", ",", " ", "calcQs"}], "}"}],
     "]"}], "]"}], " "}], "\n", 
 RowBox[{"{", 
  RowBox[{
  "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\""}], "}"}], "\n", 
 RowBox[{"questionClassifier", "[", "\"\<what is 1 plus 2\>\"", "]"}], "\n", 
 RowBox[{"\"\<algebra 1\>\"", "\n"}], "\n", 
 RowBox[{"questionClassifier", "[", "\"\<What is the integral of x dx\>\"", 
  "]"}], "\n", "\"\<algebra 1\>\"", "\n", 
 RowBox[{"questionClassifier", "[", "\"\<1+x dx\>\"", 
  "]"}], "\n", "\"\<algebra 1\>\"", "\n", 
 RowBox[{"questionClassifier", "[", "\"\<1+1\>\"", "]"}], "\n", 
 RowBox[{"\"\<algebra 1\>\"", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "What", " ", "causes", " ", "a", " ", "return", " ", "of", " ", "algebra", 
    " ", "2"}], "*)"}]}], "\n", 
 RowBox[{"questionClassifier", "[", "calcQs", "]"}], "\n", 
 RowBox[{"{", 
  RowBox[{
  "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\""}], "}"}], "\n", 
 RowBox[{"questionClassifier", "[", "algebra1Questions", "]"}], "\n", 
 RowBox[{"{", 
  RowBox[{
  "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\""}], "}"}], "\n", 
 RowBox[{"questionClassifier", "[", "\"\<Evaluate sin(\[Pi]/2)\>\"", 
  "]"}], "\n", 
 RowBox[{"\"\<algebra 1\>\"", "\n", 
  RowBox[{"(*", 
   RowBox[{"radians", " ", "returns", " ", "calc"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"questionClassifier", "[", "\"\<Evaluate is sin(2x)\>\"", 
  "]"}], "\n", "\"\<algebra 1\>\"", "\n", 
 RowBox[{"questionClassifier", "[", 
  "\"\<What is the derivative of sin(x)\>\"", "]"}], "\n", 
 RowBox[{"\"\<algebra 1\>\"", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "What", " ", "is", " ", "now", " ", "bound", " ", "to", " ", "algebra", 
     " ", "2"}], ",", " ", 
    RowBox[{
    "need", " ", "to", " ", "fix", " ", "the", " ", "training", " ", 
     "data"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "have", " ", "unbound", " ", "it", " ", "for", " ", "calc", " ", 
    "applications"}], "*)"}]}], "\n", 
 RowBox[{"questionClassifier", "[", "algebra2Qs", "]"}], "\n", 
 RowBox[{"{", 
  RowBox[{
  "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\""}], "}"}], "\n", 
 RowBox[{"questionClassifier", "[", "algebra1Questions", "]"}], "\n", 
 RowBox[{"{", 
  RowBox[{
  "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", 
   ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\"", ",", "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<algebra 1\>\"", ",", "\"\<calc\>\"", ",", "\"\<calc\>\"", ",", 
   "\"\<calc\>\""}], "}"}], "\n", 
 RowBox[{"questionClassifier", "[", "\"\<What is 1+1\>\"", 
  "]"}], "\n", "\"\<calc\>\"", "\n", 
 RowBox[{"questionClassifier", "[", "\"\<What is 1+7\>\"", "]"}], "\n", 
 RowBox[{"\"\<algebra 1\>\"", "\n"}], "\n", 
 RowBox[{"Classify", "[", 
  RowBox[{"questionClassifier", ",", " ", "\"\<What is 1+1\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.771070164008969*^9, 3.7710702178702955`*^9}, 
   3.771086327557584*^9, {3.7710887174112525`*^9, 3.771088731828258*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"8d9e2242-8d9a-48f7-acf8-2b1c5994aa2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771088733912402*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"a31d0526-3fab-4227-8ea2-e3a3d63cbb3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771088733924411*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"d5f82828-1bb8-440f-ade2-5ca309298811"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887339324045`*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"9d053158-a81e-45e7-b75b-2d8081102251"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088733936406*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"18e5cbca-eb72-4f81-ab7b-2b45dbdc2e9d"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088733940404*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"13cf98d7-07f4-4ce6-a3f4-02e7c8f43e94"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887339444046`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"e6588a40-412d-4e89-bd12-1e7cbe3f79ac"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887339484224`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"a47f18cc-e468-4e02-a3d6-e4e4aa6f686a"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088733952405*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"87cc3d60-1445-4dd1-9543-19f8f63e6ede"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887339564075`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"33e65e1a-0a52-4511-8308-2fbc13cbd8e8"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887339604073`*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"84228bad-c3a0-4c37-8acf-ff5911906412"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771088733964408*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"bee3d38a-63be-4892-a32b-90364fa4b363"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710887339684057`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"37c393a2-0f2b-4012-84c0-4e298f2d8e23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7710887339764085`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"69353170-8eab-49fb-9685-13593440d0fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710887339804063`*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"327a1bf9-122e-45c6-a364-b3de74e021c5"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088733988407*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"1f8662fe-9e51-4619-9bda-3744ce0f55ed"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088733992409*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"62258152-0a44-4dd0-9122-a6b38ab338fa"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.77108873399641*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"e54f0032-4fd6-44a4-8db4-d5c6f11a6c99"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088734000408*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"32003aba-8777-4dbc-8b2c-601c95588d44"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887340044265`*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"649a501c-227c-405c-8aa2-5ffb0a33a724"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887340084105`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"11a57aff-3dad-4c98-9699-0d8fadd9e6c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771088734012409*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"f1e9e882-f152-4720-9763-583bd201deb1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771088734016409*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"17b3238e-96ed-4237-b850-a85bf981e79f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771088734020409*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"d288c110-8b9c-4058-85d5-e6efc68e6c58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771088734024428*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"d7166bb4-45c4-49a3-8bf8-18acab3d06d7"],

Cell[BoxData["\<\"calc\"\>"], "Output",
 CellChangeTimes->{3.771088734032428*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"14e095c0-f0c3-4bb0-b686-219fab5be7b6"],

Cell[BoxData["\<\"calc\"\>"], "Output",
 CellChangeTimes->{3.7710887340364122`*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"31f5f5f8-6601-4a88-aa7a-7aea8c8e73ac"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.771088734040412*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"b23ff88e-bd10-487c-9369-002f2a9a2119"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710887340444117`*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"5a244283-fa1a-4b46-bf92-93f46e187185"],

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["ClassifierFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Nominal\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Nominal\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["137", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ClassifierFunction[
     Association[
     "ExampleNumber" -> 137, "ClassNumber" -> 3, "Input" -> 
      Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
          Association[
          "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
             Association["Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor["WrapMLDataset", 
                 Association[
                 "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                  "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                  Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
           True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
          Association[
          "Input" -> Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
           "Processors" -> {
             MachineLearning`MLProcessor["ToVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
               "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], 
               "Version" -> {12., 0}, "ID" -> 1537627216228573037]], 
             MachineLearning`MLProcessor["ImputeMissing", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "VectorLength" -> 
               1, "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "Type" -> 
               "NominalVector", "Version" -> {12., 0}, "ID" -> 
               4026204838636604962]], 
             MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                 Association[
                 "2+3" -> 1, "2/3 x+3 =15" -> 2, 
                  "-3(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-2x+7)" -> 3, 
                  "5(2x+4)" -> 4, 
                  "-(5\!\(\*SuperscriptBox[\(x\), \(4\)]\)-8)" -> 5, 
                  "8x-2=22" -> 6, "Add 1/2 and 1/3" -> 7, 
                  "A salesman is paid a monthly salary of $2,300 plus 7% \
commission on his monthly sales.\nDetermine the amount of sales required for \
his total monthly income to be $3,000." -> 8, 
                  "A salesman tells you that the $140 earrings are already \
marked 20% off. What\nwas the original price?" -> 9, 
                  "A $750 watch is on sale for 15% off. Find the sale price." -> 
                  10, "Combine 2 \!\(\*SubscriptBox[\(log\), \(4\)]\)x +5 \
\!\(\*SubscriptBox[\(log\), \(4\)]\)y - 1/2 \!\(\*SubscriptBox[\(log\), \
\(4\)]\)x" -> 11, "Combine like terms of 3a-6a+10a-a" -> 12, 
                  "Combine like terms of 3n-5\!\(\*SuperscriptBox[\(n\), \
\(\(2\)\(\\ \)\)]\)+6n-10+2\!\(\*SuperscriptBox[\(n\), \(2\)]\)" -> 13, 
                  "Combine the like terms of 5x-10y+6z-3x" -> 14, 
                  "Compute  the difrence quotient for the given function" -> 
                  15, "Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 \
+ x^2 + 9" -> 16, "Determine ln(\!\(\*SuperscriptBox[\(e\), \(4\)]\))" -> 17, 
                  "Evaluate 2\!\(\*SuperscriptBox[\(x\), \(2\)]\)-9 for x=-3" -> 
                  18, "Evaluate a-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when \
a=4 and b=2" -> 19, 
                  "Evaluate f(x)=3-5x-2\!\(\*SuperscriptBox[\(x\), \(2\)]\) \
for the below values: f(0), f(x+h), f(6-t)" -> 20, 
                  "Evaluate \!\(\*SuperscriptBox[\(a\), \(2\)]\)+b when a=7 \
and b=1" -> 21, 
                  "Evaluate \!\(\*SuperscriptBox[\(a\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=5 and b=3" -> 22, 
                  "Evaluate the derivative" -> 23, 
                  "Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz" -> 24, 
                  "Expand (a+b\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 25, 
                  "express 12 1/3 as an improper fraction" -> 26, 
                  "express 3 2/7 as an improper fraction" -> 27, 
                  "Express 42/5 as a mixed number" -> 28, 
                  "Express 53/9 as a mixed number" -> 29, 
                  "Find a perpedicular line of y=3x+2 with y intercept of the \
origin" -> 30, 
                  "Find extrema of f(x)=12+6\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(x\), \(3\)]\)" -> 31, 
                  "Find extrema of g(w)=tan (w)sec(w)" -> 32, 
                  "Find inverse of W (x) =  (9 \
\[Minus]11x\!\(\*SuperscriptBox[\()\), \(1/5\)]\)" -> 33, 
                  "Find the area under the curve of |x| from -1 to 1" -> 34, 
                  "Find the Derivative" -> 35, 
                  "Find the derivative of 2 cos(x)+arccos(x)" -> 36, 
                  "Find the derivative of f(x)=2\!\(\*SuperscriptBox[\(e\), \
\(x\)]\)-\!\(\*SuperscriptBox[\(8\), \(x\)]\)" -> 37, 
                  "Find the derivative of g(t)=4 \!\(\*SubscriptBox[\(log\), \
\(3\)]\)(t)-ln(t)" -> 38, 
                  "Find the derivative of \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(y\), \(3\)]\)=1" -> 39, 
                  "Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3" -> 40, "Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)" -> 41,
                   "Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))" -> 
                  42, "Find the deriviative of  tan (w)sec(w)" -> 43, 
                  "Find the domain of (\!\(\*SuperscriptBox[\(w\), \
\(3\)]\)-3w+1)/(12 w-7)" -> 44, 
                  "Find the equation of best fit for the below listed data" -> 
                  45, "Find the exact value of cos(5 \[Pi]/6) without using a \
calculator" -> 46, 
                  "Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator" -> 47, "Find the integral" -> 48, 
                  "Find the inverse of f (x) = 6x +15" -> 49, 
                  "Find the MacLauren Expanision of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 50, 
                  "find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4" -> 51, 
                  "Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + \
csc(\[Theta] )] d\[Theta]" -> 52, 
                  "Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw" -> 53,
                   "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \
\[Minus]18x + 7" -> 54, 
                  "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 55, 
                  "For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), L'Hoptial's rule to \
find the limit as x approaches -1" -> 56, 
                  "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), find the values at the \
below listed points and th limit as x aproaches 2" -> 57, 
                  "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), use L'Hoptial's rule to \
find the limit as x aproaches 2" -> 58, 
                  "For the function f(y)= sin(y)/y find the value at the \
below listed points and the limit as y approaches 0" -> 59, 
                  "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \(4\
\)]\)) and the point x=1, find the secants at point Q and the tangenet line" -> 
                  60, "Graph the inequality y<3x+4" -> 61, 
                  "Graph the parabola give by \!\(\*SuperscriptBox[\(x\), \(2\
\)]\)+3x+2. Find the zeros, vertex and intercept" -> 62, 
                  "How many miutes are in a day?" -> 63, 
                  "Identify the property used in the equations below as \
distributive, inverse or associative" -> 64, 
                  "Is x=-8 a solution to 1/2x+6>3?" -> 65, 
                  "Multiply 24/3 and 27/8" -> 66, "Multiply 8 and 3/24" -> 67,
                   "Plot 1.25, 2/3 and 2 on a number line" -> 68, 
                  "Simplify 10-(7+1)" -> 69, "Simplify 10-7+1" -> 70, 
                  "Simplify (15-3)/(1+5)" -> 71, 
                  "Simplify 24/(4-2\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 
                  72, "Simplify (2-5\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 
                  73, "Simplify 2-\!\(\*SuperscriptBox[\(5\), \(2\)]\)" -> 74,
                   "Simplify 4+5(1+12/6\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 
                  75, "Sketch the graph of f(x)=\!\(\*SuperscriptBox[\(3\), \
\(1 + 2  x\)]\)" -> 76, 
                  "Sketch the graph of h(x)=8+3\!\(\*SuperscriptBox[\(e\), \
\(2  t - 4\)]\)" -> 77, "Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0" -> 78, 
                  "Solve 3(x-5)+4=10" -> 79, 
                  "Solve 3\[Minus]14sin (12t + 7) =13" -> 80, 
                  "Solve  4sin (3t ) = 2" -> 81, 
                  "Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\!\(\*SuperscriptBox[\(2\), \(0.5\)]\) = 0 in [\[Minus]7\[Pi] ,7\[Pi] }" -> 
                  82, "Solve 4x-9=11" -> 83, 
                  "Solve 4y sec(7 y) = \[Minus]21y" -> 84, 
                  "Solve and graph the solution to 2x-3<7" -> 85, 
                  "Solve and graph the solution to |3x-1|\[GreaterEqual]10" -> 
                  86, "Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift \
card to Toys R Us for his birthday.\nSales tax is currently 9%. Determine the \
price of the most expensive toy Tommy can buy with\nthe $50 gift card." -> 87,
                   "Use the chain rule to find the derivative of \
Q(t)=(3\!\(\*SuperscriptBox[\(t\), \(3\)]\)-4\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)" -> 88, 
                  "Use the definition of the derivative to find the \
derivative of f(x)=6" -> 89, 
                  "Use the definition of the derivative to find the \
derivative of V (t ) = 3\[Minus]14t" -> 90, 
                  "Use the definition of the derivative to find the \
derivative of z(n)= (n+1)/(n+4)" -> 91, 
                  "Use the law of sines to find the missing side of this \
triangle" -> 92, 
                  "Use the quotient rule to find the derivative of z(n)= (z+1\
\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 93, 
                  "What are the discontiuities in the function \
y=(x+2)/(x+3x+2). Which are fundamental and which are removable?" -> 94, 
                  "What are the domain and range of \
\!\(\*SuperscriptBox[\(e\), \(x\)]\) and ln(x)" -> 95, 
                  "What are the domain and range of the trigonometric \
functions?" -> 96, "What is |1|" -> 97, "What is 10% of 100" -> 98, 
                  "What is 1+1" -> 99, "What is  1/2 + 1/3" -> 100, 
                  "What is 12 1/3 as an improper fraction" -> 101, 
                  "What is 2+2" -> 102, "What is 2+3" -> 103, 
                  "What is  24/3 * 27/8" -> 104, "What is |-30|" -> 105, 
                  "What is 3/18 in simplest form" -> 106, "What is 3-(-2)?" -> 
                  107, "What is -3+4" -> 108, 
                  "What is 42/54 in simplest form" -> 109, 
                  "What is 42/5 as a mixed number" -> 110, 
                  "What is 4% of 16?" -> 111, 
                  "What is 53/9 as a mixed number" -> 112, 
                  "What is  8 * 3/24" -> 113, 
                  "What is (a+b\!\(\*SuperscriptBox[\()\), \(n\)]\) (Hint: \
What theorem is this?)" -> 114, "What is ln(1)?" -> 115, "What is sin(60)" -> 
                  116, "What is tan(30)" -> 117, 
                  "What is the absolute value of -1?" -> 118, 
                  "What is the area under the curve \
\!\(\*SuperscriptBox[\(sin\), \(2\)]\)x from 0 to \[Pi]/2" -> 119, 
                  "What is the Deriviative" -> 120, 
                  "What is the integral of sin(2x)?" -> 121, 
                  "What is the integral of x dx" -> 122, 
                  "What is the largest value for the missing side of this \
triangle" -> 123, 
                  "What is the most specific subset of the real numbers that \
-7 is a part of?" -> 124, "What is the next term in the series " -> 125, 
                  "What is the sum from 1 to 5 of a=10n+3" -> 126, 
                  "what is the sum of the geometric series from 1 to infinity \
of 9(1/10\!\(\*SuperscriptBox[\()\), \(n\)]\)?" -> 127, 
                  "What is \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 128, 
                  "Wrie the standard form of y=3/2 x+2" -> 129, 
                  "Write 30 degrees in radians" -> 130, 
                  "write 3/18 in simplest form" -> 131, 
                  "What is 3 2/7 as an improper fraction" 
                   "write 42/54 in simplest form" -> 132, 
                  "Write slope intercept form for a slope of 2 and \
y-intercept of 12" -> 133, "Write \[Pi]/4 in degrees" -> 134, "-x-2=12" -> 
                  135, Null -> 136]}, "MissingCode" -> 0, 
               "Version" -> {12., 0}, "ID" -> 8874348951581137712, "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]]]]}, 
           "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
      Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
          Association[
          "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
             Association["Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor["WrapMLDataset", 
                 Association[
                 "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                  "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                  Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
           True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
          Association[
          "Input" -> Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Processors" -> {
             MachineLearning`MLProcessor["ToVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
               "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], 
               "Version" -> {12., 0}, "ID" -> 7740907413418953510]], 
             MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                 Association[
                 "algebra 1" -> 1, "algebra 2" -> 2, "calc" -> 3]}, 
               "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
               3923291764372626615, "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]]]], 
             MachineLearning`MLProcessor["FromVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1, 
                   "SetSize" -> {3}]], "Output" -> 
               Association[
                "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
               "Version" -> {12., 0}, "ID" -> 689381485439722164]], 
             MachineLearning`MLProcessor["FirstValues", 
              Association[
              "Info" -> Association[
                "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
               "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
        "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
        Association[
         "algebra 1" -> 0.37142857142857144`, "algebra 2" -> 
          0.22857142857142856`, "calc" -> 0.39999999999999997`]], "Prior" -> 
      Automatic, "Utility" -> 
      SparseArray[
       Automatic, {3, 4}, 0., {
        1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
      "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
      "BatchProcessing" -> Automatic, "Model" -> 
      Association[
       "NeighborsFunction" -> 
        MachineLearning`PackageScope`NeighborsFunction["Nearest", 
          NearestFunction[
           Hold[
            Nearest[CompressedData["
1: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
              "] -> Automatic, Method -> "KDtree"]]]], "NeighborsNumber" -> 
        50, "ClassPriors" -> {0.37142857142857144`, 0.22857142857142856`, 
         0.39999999999999997`}, "TrainingOutput" -> 
        RawArray["UnsignedInteger8",{1, 3, 1, 2, 3, 2, 3, 2, 3, 1, 1, 1, 1, 1,
           1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, 2, 3, 2, 3, 3, 1, 3, 1, 
          2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3,
           1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 
          3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1,
           1, 2, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 
          1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3}], "DistributionSmoothing" -> 0.5, 
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
          Association[
          "Input" -> Association[
            "f1" -> Association[
              "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {136}]], 
           "Output" -> 
           Association[
            "f1" -> Association["Weight" -> 1, "Type" -> "NumericalVector"]], 
           "Processors" -> {
             MachineLearning`MLProcessor["EmbedNominalVector", 
              Association[
              "Invertibility" -> "Impossible", "Missing" -> "Allowed", 
               "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1, 
                   "SetSize" -> {136}]], "Index" -> {
                 Association[
                 1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                  8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14,
                   15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20,
                   21 -> 21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26,
                   27 -> 27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32,
                   33 -> 33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 38,
                   39 -> 39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 44,
                   45 -> 45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 50,
                   51 -> 51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 56,
                   57 -> 57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 62,
                   63 -> 63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 68,
                   69 -> 69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 74,
                   75 -> 75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 80,
                   81 -> 81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 86,
                   87 -> 87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 92,
                   93 -> 93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 98,
                   99 -> 99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 103, 
                  104 -> 104, 105 -> 105, 106 -> 106, 107 -> 107, 108 -> 108, 
                  109 -> 109, 110 -> 110, 111 -> 111, 112 -> 112, 113 -> 113, 
                  114 -> 114, 115 -> 115, 116 -> 116, 117 -> 117, 118 -> 118, 
                  119 -> 119, 120 -> 120, 121 -> 121, 122 -> 122, 123 -> 123, 
                  124 -> 124, 125 -> 125, 126 -> 126, 127 -> 127, 128 -> 128, 
                  129 -> 129, 130 -> 130, 131 -> 131, 132 -> 132, 133 -> 133, 
                  134 -> 134, 135 -> 135, 136 -> 136]}, "Output" -> 
               Association[
                "f1" -> Association[
                  "Weight" -> 1, "Type" -> "NumericalVector"]], 
               "EmbeddingVectors" -> CompressedData["
1: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

                "], "Version" -> {12., 0}, "ID" -> 7204649762786858506]], 
             MachineLearning`MLProcessor["FirstValues", 
              Association[
              "Info" -> Association[
                "Weight" -> 1, "Type" -> "NumericalVector"], "Key" -> "f1", 
               "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
           "Invertibility" -> "Impossible", "Missing" -> "Allowed"]], 
        "Method" -> "NearestNeighbors", "PostProcessor" -> 
        MachineLearning`MLProcessor["Identity"], "Options" -> 
        Association[
         "NeighborsNumber" -> 
          Association["Value" -> 50, "Options" -> Association[]], 
          "DistributionSmoothing" -> 
          Association["Value" -> 0.5, "Options" -> Association[]], 
          "NearestMethod" -> 
          Association["Value" -> "KDtree", "Options" -> Association[]]]], 
      "TrainingInformation" -> 
      Association[
       "PanelCell" -> CellObject[201681], "TrainingFunction" -> Classify, 
        "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
        "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
        0.1200265`6.530822135653541, "LossName" -> "MeanCrossEntropy", 
        "BestModelInformation" -> Dataset[
          Association[
          "MeanCrossEntropy" -> 
           Around[1.0596115829936994`, 0.06122631280938329], "Accuracy" -> 
           Around[0.4408005735886313, 0.13467140246648074`], "EvaluationTime" -> 
           0.000046626867103487635`, "TestSize" -> 27, "ModelMemory" -> 42744,
            "ModelUtility" -> -0.7625597954854385, "TrainingSize" -> 110, 
           "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
           437880, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
             Around[1.0596115829936994`, 0.0432935409745637]}, 
           "AccuracyHistory" -> {
             Around[0.4408005735886313, 0.09522706191595126]}, 
           "Configuration" -> {
            "NearestNeighbors", "NeighborsNumber" -> Automatic, 
             "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
           "FinalTrainingSize" -> 137], 
          
          TypeSystem`Struct[{
           "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
            "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
            "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
            "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Tuple[{
              TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType,
               TypeSystem`AnyType}], 
            TypeSystem`Atom[Integer]}], 
          Association["ID" -> 124275052256403]], "Configurations" -> Dataset[
          Association[
          Association[
            "Value" -> "GradientBoostedTrees", "Options" -> 
             Association[
              "BoostingMethod" -> Association["Value" -> "Gradient"], 
               MaxTrainingRounds -> Association["Value" -> 50], 
               "LeavesNumber" -> Association["Value" -> 60], "LearningRate" -> 
               Association["Value" -> 0.1], ValidationSet -> 
               Association["Value" -> Automatic], "MaxBinNumber" -> 
               Association["Value" -> 255], "ThreadNumber" -> 
               Association["Value" -> 2], "MaxDepth" -> 
               Association["Value" -> 6], "LeafSize" -> 
               Association["Value" -> 35], "FeatureFraction" -> 
               Association["Value" -> 1], "BaggingFraction" -> 
               Association["Value" -> 1], "BaggingFrequency" -> 
               Association["Value" -> 0], "MinGainToSplit" -> 
               Association["Value" -> 0], "L1Regularization" -> 
               Association["Value" -> 0], "L2Regularization" -> 
               Association["Value" -> 0], "LossFunction" -> 
               Association["Value" -> Automatic]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0976536116647921`, 0.008130168130892507], "Accuracy" -> 
                Around[0.4164963546087643, 0.06298092808890327], 
                "EvaluationTime" -> 0.00004117846609032098, "TestSize" -> 122,
                 "ModelMemory" -> 27408, 
                "ModelUtility" -> -0.7878188025759316, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                68288, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0976536116647921`, 0.005748897017540849]}, 
                "AccuracyHistory" -> {
                  Around[0.4164963546087643, 0.044534241337085806`]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1742667790460415`, 0.08403278565139402], "Accuracy" -> 
                Around[0.19080057358863137`, 0.10449918945611414`], 
                "EvaluationTime" -> 0.0005869974786893012, "TestSize" -> 27, 
                "ModelMemory" -> 313528, "ModelUtility" -> -0.868085732303797,
                 "TrainingSize" -> 110, "TrainingTime" -> 
                0.19952623149688792`, "TrainingMemory" -> 1111640, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1742667790460415`, 0.05942015257609632]}, 
                "AccuracyHistory" -> {
                  Around[0.19080057358863137`, 0.07389208549291607]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.0005869974786893012, "MeanCrossEntropy" -> 
               Around[1.1742667790460415`, 0.08403278565139402], 
               "ModelMemory" -> 313528, "TrainingMemory" -> 1111640, 
               "TrainingTime" -> 0.26434978387982605`], "Index" -> 1], 
           Association[
            "Value" -> "RandomForest", "Options" -> 
             Association[
              "FeatureFraction" -> Association["Value" -> Automatic], 
               "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
               Association["Value" -> Automatic], "DistributionSmoothing" -> 
               Association["Value" -> 0.5], "Implementation" -> 
               Association["Value" -> Automatic]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1020994344135946`, 0.016300326077189217`], 
                "Accuracy" -> 
                Around[0.37962788178694723`, 0.06850855157524109], 
                "EvaluationTime" -> 0.0000630957344480193, "TestSize" -> 100, 
                "ModelMemory" -> 96272, "ModelUtility" -> -0.7933503818645214,
                 "TrainingSize" -> 15, "TrainingTime" -> 
                0.025118864315095794`, "TrainingMemory" -> 157344, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1020994344135946`, 0.011526071104732409`]}, 
                "AccuracyHistory" -> {
                  Around[0.37962788178694723`, 0.0484428613881213]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.0000630957344480193, "MeanCrossEntropy" -> 
               Around[1.1020994344135946`, 0.016300326077189217`], 
               "ModelMemory" -> 96272, "TrainingMemory" -> 157344, 
               "TrainingTime" -> 0.05953170842677703], "Index" -> 2], 
           Association[
            "Value" -> "NearestNeighbors", "Options" -> 
             Association[
              "NeighborsNumber" -> Association["Value" -> Automatic], 
               "DistributionSmoothing" -> Association["Value" -> 0.5], 
               "NearestMethod" -> Association["Value" -> Automatic]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1261639135238315`, 0.045770646384954705`], 
                "Accuracy" -> 
                Around[0.37916852977973536`, 0.037593651496341175`], 
                "EvaluationTime" -> 0.000022040597365289483`, "TestSize" -> 
                244, "ModelMemory" -> 17304., 
                "ModelUtility" -> -0.8200741591520756, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.0054444393724491225`, "TrainingMemory" -> 
                68096., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                  Around[1.0856221374570953`, 0.026777067745218062`], 
                  Around[1.1667056895905676`, 0.03489892119642117]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`], 
                  Around[0.4006549847888459, 0.04425615755465977]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0596115829936994`, 0.06122631280938329], "Accuracy" -> 
                Around[0.4408005735886313, 0.13467140246648074`], 
                "EvaluationTime" -> 0.000046626867103487635`, "TestSize" -> 
                27, "ModelMemory" -> 42744, 
                "ModelUtility" -> -0.7625597954854385, "TrainingSize" -> 110, 
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                437880, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0596115829936994`, 0.0432935409745637]}, 
                "AccuracyHistory" -> {
                  Around[0.4408005735886313, 0.09522706191595126]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000046626867103487635`, 
               "MeanCrossEntropy" -> 
               Around[1.0596115829936994`, 0.06122631280938329], 
               "ModelMemory" -> 42744, "TrainingMemory" -> 437880, 
               "TrainingTime" -> 0.025183563678555714`], "Index" -> 3], 
           Association[
            "Value" -> "DecisionTree", "Options" -> 
             Association[
              "DistributionSmoothing" -> Association["Value" -> 1], 
               "FeatureFraction" -> Association["Value" -> 1]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1177036461762946`, 0.03799495031562989], "Accuracy" -> 
                Around[0.37534938847134613`, 0.03984671598964482], 
                "EvaluationTime" -> 0.000024431215670146456`, "TestSize" -> 
                244, "ModelMemory" -> 20797.333333333332`, 
                "ModelUtility" -> -0.8112141587658148, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                77850.66666666666, "ExperimentCount" -> 2, 
                "MeanCrossEntropyHistory" -> {
                  Around[1.1492898532562392`, 0.02937363815321428], 
                  Around[1.08611743909635, 0.030379665523616508`]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336], 
                  Around[0.4006549847888459, 0.04425615755465977]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0607894573706145`, 0.056467241345510115`], 
                "Accuracy" -> 
                Around[0.4408005735886313, 0.13467140246648074`], 
                "EvaluationTime" -> 0.000037037037037037037`, "TestSize" -> 
                27, "ModelMemory" -> 48744, 
                "ModelUtility" -> -0.7627720657504579, "TrainingSize" -> 110, 
                "TrainingTime" -> 0.01, "TrainingMemory" -> 102304, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0607894573706145`, 0.03992836927030759]}, 
                "AccuracyHistory" -> {
                  Around[0.4408005735886313, 0.09522706191595126]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000037037037037037037`, 
               "MeanCrossEntropy" -> 
               Around[1.0607894573706145`, 0.056467241345510115`], 
               "ModelMemory" -> 48744, "TrainingMemory" -> 102304, 
               "TrainingTime" -> 0.018764118899347385`], "Index" -> 4], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 100.], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0968882438802035`, 0.008558145266237417], "Accuracy" -> 
                Around[0.3500437921538463, 0.06058006533385557], 
                "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.7871983801331214, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
                76856, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0968882438802035`, 0.006051522552136028]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0831672350421224`, 0.031914212155672285`], 
                "Accuracy" -> 
                Around[0.4408005735886313, 0.13467140246648074`], 
                "EvaluationTime" -> 0.000029419564249047453`, "TestSize" -> 
                27, "ModelMemory" -> 38008, 
                "ModelUtility" -> -0.7789309995210105, "TrainingSize" -> 110, 
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                110680, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0831672350421224`, 0.022566755831502014`]}, 
                "AccuracyHistory" -> {
                  Around[0.4408005735886313, 0.09522706191595126]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000029419564249047453`, 
               "MeanCrossEntropy" -> 
               Around[1.0831672350421224`, 0.031914212155672285`], 
               "ModelMemory" -> 38008, "TrainingMemory" -> 110680, 
               "TrainingTime" -> 0.03232837842404826], "Index" -> 5], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 1.*^6], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0976535090689574`, 0.008130167932434623], "Accuracy" -> 
                Around[0.3500437921538463, 0.06058006533385557], 
                "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.7878168578701964, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.01, "TrainingMemory" -> 73240, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0976535090689574`, 0.005748896877209934]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.00001336850282360814, "MeanCrossEntropy" -> 
               Around[1.0976535090689574`, 0.008130167932434623], 
               "ModelMemory" -> 19576, "TrainingMemory" -> 73240, 
               "TrainingTime" -> 0.0237], "Index" -> 6], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 1.*^-6], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.295296040218015, 0.07466361217313978], "Accuracy" -> 
                Around[0.35768207477062475`, 0.06084237750627133], 
                "EvaluationTime" -> 0.00001851578206388661, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.9633636089627616, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
                82368, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.295296040218015, 0.0527951464755096]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.00001851578206388661, "MeanCrossEntropy" -> 
               Around[1.295296040218015, 0.07466361217313978], "ModelMemory" -> 
               19576, "TrainingMemory" -> 82368, "TrainingTime" -> 
               0.07494598054599058], "Index" -> 7], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 0.01], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.290089012623834, 0.07384836644867501], "Accuracy" -> 
                Around[0.35768207477062475`, 0.06084237750627133], 
                "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.9592566021239609, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
                83400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.290089012623834, 0.052218680695407214`]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.00001336850282360814, "MeanCrossEntropy" -> 
               Around[1.290089012623834, 0.07384836644867501], "ModelMemory" -> 
               19576, "TrainingMemory" -> 83400, "TrainingTime" -> 
               0.05953170842677703], "Index" -> 8], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 10.], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1039938232077493`, 0.019599916896104085`], 
                "Accuracy" -> Around[0.3500437921538463, 0.06058006533385557],
                 "EvaluationTime" -> 0.000011682668682003888`, "TestSize" -> 
                122, "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.795640645593292, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
                79096, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1039938232077493`, 0.013859234147927986`]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000011682668682003888`, 
               "MeanCrossEntropy" -> 
               Around[1.1039938232077493`, 0.019599916896104085`], 
               "ModelMemory" -> 19576, "TrainingMemory" -> 79096, 
               "TrainingTime" -> 0.029836532259521754`], "Index" -> 9], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 1.], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1693208449659471`, 0.0485671430402716], "Accuracy" -> 
                Around[0.35768207477062475`, 0.06084237750627133], 
                "EvaluationTime" -> 0.000011682668682003888`, "TestSize" -> 
                122, "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.8578575433531915, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
                82328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1693208449659471`, 0.03434215618663308]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000011682668682003888`, 
               "MeanCrossEntropy" -> 
               Around[1.1693208449659471`, 0.0485671430402716], "ModelMemory" -> 
               19576, "TrainingMemory" -> 82328, "TrainingTime" -> 
               0.05953170842677703], "Index" -> 10]], 
          TypeSystem`Assoc[
           TypeSystem`Struct[{"Value", "Options"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
               "NearestNeighbors", "RandomForest"]], 
             TypeSystem`Assoc[TypeSystem`AnyType, 
              TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
              TypeSystem`AnyLength]}], 
           
           TypeSystem`Struct[{
            "Experiments", "PredictedPerformances", "Index"}, {
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime",
                 "TrainingMemory", "ExperimentCount", 
                "MeanCrossEntropyHistory", "AccuracyHistory"}, {
               TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}],
               TypeSystem`AnyLength], 
             
             TypeSystem`Struct[{
              "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
               "TrainingMemory", "TrainingTime"}, {
               TypeSystem`Atom[Real], TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real]}], 
             TypeSystem`Atom[Integer]}], 10], 
          Association["ID" -> 124270757289107]], "MaxTrainingSize" -> 137, 
        "PreprocessorEvaluationTime" -> 4.6485139580686`3.*^-6, 
        "PreprocessorMemory" -> 43368, "InputDimension" -> 1, 
        "OutputDimension" -> 1, 
        "BaselineLogProbability" -> -1.0717287302022056`, "VariableBudget" -> 
        True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
        "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
        "LastReportingTime" -> 3.7710698432335728`17.32903956512167*^9, 
        "RoundPartitioning" -> Dataset[{
           Association[
           "TrainingSizes" -> 15, "TimeBudgets" -> 0.28, "ElapsedTimes" -> 
            0.27203499999999997`, "ExperimentCounts" -> 12], 
           Association[
           "TrainingSizes" -> 110, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
            0.48403660000000004`, "ExperimentCounts" -> 4]}, 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
             "ExperimentCounts"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer]}], 2], 
          Association[
          "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
             Dataset`DatasetHandle[124279347223699]], "ID" -> 
           124283642190995]]], "Log" -> 
      Association["Example" -> MachineLearning`MLDataset[
          Association[
          "f1" -> Association[
            "Type" -> "Nominal", "Weight" -> 1, 
             "Values" -> {
              "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \
\(4\)]\)) and the point x=1, find the secants at point Q and the tangenet \
line"}, "ID" -> 4654099653526711133]], 
          Association[
          "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
           0, "RawExample" -> False]], "TrainingTime" -> 1.1817953044690073`, 
        "MaxTrainingMemory" -> 1446536, "DataMemory" -> 14552, 
        "FunctionMemory" -> 230504, "LanguageVersion" -> {12., 0}, "Date" -> 
        DateObject[{2019, 7, 2, 15, 24, 3.397786`8.283771003554588}, 
          "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
        "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
        "SystemWordLength" -> 64, "Evaluations" -> {}]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "\<\"What is 1+1\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.7710887341724377`*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"cfd00889-1aac-45e0-882b-25282befe7b4"],

Cell[BoxData[
 TemplateBox[{
  "Classify","bdfmt",
   "\"Argument \
\\!\\(\\*InterpretationBox[RowBox[{TagBox[\\\"ClassifierFunction\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquarePlusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Nominal\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
\\\"\\\\\\\"algebra 1\\\\\\\"\\\", \\\"\\\\\\\"algebra 2\\\\\\\"\\\", \
\\\"\\\\\\\"calc\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquareMinusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Nominal\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
\\\"\\\\\\\"algebra 1\\\\\\\"\\\", \\\"\\\\\\\"algebra 2\\\\\\\"\\\", \
\\\"\\\\\\\"calc\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Method: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\
\"\\\\\\\"NearestNeighbors\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Number of training examples: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"137\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`open$$], \
Rule[ImageSize, Automatic]]], \\\"SummaryPanel\\\"], \
RuleDelayed[DynamicModuleValues, List[]]], \\\"]\\\"}], \
ClassifierFunction[Association[Rule[\\\"ExampleNumber\\\", 137], \
Rule[\\\"ClassNumber\\\", 3], Rule[\\\"Input\\\", \
Association[Rule[\\\"Preprocessor\\\", \
MachineLearning`MLProcessor[\\\"ToMLDataset\\\", Association[Rule[\\\"Input\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\
\"]]]]], Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Preprocessor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"List\\\"], \
MachineLearning`MLProcessor[\\\"WrapMLDataset\\\", \
Association[Rule[\\\"FeatureTypes\\\", List[\\\"Nominal\\\"]], \
Rule[\\\"FeatureKeys\\\", List[\\\"f1\\\"]], Rule[\\\"FeatureWeights\\\", \
Automatic], Rule[\\\"ExampleWeights\\\", Automatic], Rule[\\\"RawExample\\\", \
Missing[\\\"KeyAbsent\\\", \\\"RawExample\\\"]]]]]]]]], \
Rule[\\\"ScalarFeature\\\", True], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"Processor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"NominalVector\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Processors\\\", List[MachineLearning`MLProcessor[\\\"ToVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 1537627216228573037]]], \
MachineLearning`MLProcessor[\\\"ImputeMissing\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Imputed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"VectorLength\\\", 1], Rule[\\\"Output\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \
\\\"NominalVector\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Type\\\", \
\\\"NominalVector\\\"], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 4026204838636604962]]], \
MachineLearning`MLProcessor[\\\"IntegerEncodeNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[\\\"2+3\\\", 1], Rule[\\\"2/3 x+3 =15\\\", 2], \
Rule[\\\"-3(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)-2x+7)\\\", 3], Rule[\\\"5(2x+4)\\\", 4], \
Rule[\\\"-(5\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)-8)\\\
\", 5], Rule[\\\"8x-2=22\\\", 6], Rule[\\\"Add 1/2 and 1/3\\\", 7], \
Rule[\\\"A salesman is paid a monthly salary of $2,300 plus 7% commission on \
his monthly sales.\\\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\\\", 8], Rule[\\\"A salesman tells you that the \
$140 earrings are already marked 20% off. What\\\\nwas the original \
price?\\\", 9], Rule[\\\"A $750 watch is on sale for 15% off. Find the sale \
price.\\\", 10], Rule[\\\"Combine 2 \
\\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)x +5 \\\\!\\\\(\\\
\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)y - 1/2 \
\\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)x\\\", 11], Rule[\
\\\"Combine like terms of 3a-6a+10a-a\\\", 12], Rule[\\\"Combine like terms \
of 3n-5\\\\!\\\\(\\\\*SuperscriptBox[\\\\(n\\\\), \\\\(\\\\(2\\\\)\\\\(\\\\\\\
\\ \\\\)\\\\)]\\\\)+6n-10+2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(n\\\\), \
\\\\(2\\\\)]\\\\)\\\", 13], Rule[\\\"Combine the like terms of 5x-10y+6z-3x\\\
\", 14], Rule[\\\"Compute  the difrence quotient for the given function\\\", \
15], Rule[\\\"Determine f (x) given that f'(x) = 6x^8 \\\\[Minus] 20x^4 + x^2 \
+ 9\\\", 16], Rule[\\\"Determine \
ln(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(4\\\\)]\\\\))\\\", 17], \
Rule[\\\"Evaluate 2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)-9 for x=-3\\\", 18], Rule[\\\"Evaluate \
a-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(b\\\\), \\\\(2\\\\)]\\\\) when a=4 and \
b=2\\\", 19], Rule[\\\"Evaluate \
f(x)=3-5x-2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) for \
the below values: f(0), f(x+h), f(6-t)\\\", 20], Rule[\\\"Evaluate \\\\!\\\\(\
\\\\*SuperscriptBox[\\\\(a\\\\), \\\\(2\\\\)]\\\\)+b when a=7 and b=1\\\", \
21], Rule[\\\"Evaluate \\\\!\\\\(\\\\*SuperscriptBox[\\\\(a\\\\), \
\\\\(2\\\\)]\\\\)-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(b\\\\), \
\\\\(2\\\\)]\\\\) when a=5 and b=3\\\", 22], Rule[\\\"Evaluate the derivative\
\\\", 23], Rule[\\\"Evaluate \\\\[Integral]z^6 + 4z^4 \\\\[Minus] z^2 dz\\\", \
24], Rule[\\\"Expand (a+b\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(3\\\\)]\\\\)\\\", 25], Rule[\\\"express 12 1/3 as an improper fraction\\\
\", 26], Rule[\\\"express 3 2/7 as an improper fraction\\\", 27], \
Rule[\\\"Express 42/5 as a mixed number\\\", 28], Rule[\\\"Express 53/9 as a \
mixed number\\\", 29], Rule[\\\"Find a perpedicular line of y=3x+2 with y \
intercept of the origin\\\", 30], Rule[\\\"Find extrema of \
f(x)=12+6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\)-\\\\!\\\
\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(3\\\\)]\\\\)\\\", 31], Rule[\\\"Find \
extrema of g(w)=tan (w)sec(w)\\\", 32], Rule[\\\"Find inverse of W (x) =  (9 \
\\\\[Minus]11x\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/5\\\\)]\\\\)\\\", 33], Rule[\\\"Find the area under the curve of |x| \
from -1 to 1\\\", 34], Rule[\\\"Find the Derivative\\\", 35], Rule[\\\"Find \
the derivative of 2 cos(x)+arccos(x)\\\", 36], Rule[\\\"Find the derivative \
of f(x)=2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(x\\\\)]\\\\)-\\\\!\\\
\\(\\\\*SuperscriptBox[\\\\(8\\\\), \\\\(x\\\\)]\\\\)\\\", 37], Rule[\\\"Find \
the derivative of g(t)=4 \\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \
\\\\(3\\\\)]\\\\)(t)-ln(t)\\\", 38], Rule[\\\"Find the derivative of \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)/\\\\!\\\\(\\\\*SuperscriptBox[\\\\(y\\\\), \
\\\\(3\\\\)]\\\\)=1\\\", 39], Rule[\\\"Find the deriviative of f (x) = \
2cos(x) \\\\[Minus] 6sec(x) + 3\\\", 40], Rule[\\\"Find the deriviative of g \
(z) =10 tan (z) \\\\[Minus] 2cot (z)\\\", 41], Rule[\\\"Find the deriviative \
of R(t)=(t+ tan(t))/(1+csc(t))\\\", 42], Rule[\\\"Find the deriviative of  \
tan (w)sec(w)\\\", 43], Rule[\\\"Find the domain of \
(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(w\\\\), \\\\(3\\\\)]\\\\)-3w+1)/(12 \
w-7)\\\", 44], Rule[\\\"Find the equation of best fit for the below listed \
data\\\", 45], Rule[\\\"Find the exact value of cos(5 \\\\[Pi]/6) without \
using a calculator\\\", 46], Rule[\\\"Find the exact value of sin(-4 \
\\\\[Pi]/3) without using a calculator\\\", 47], Rule[\\\"Find the integral\\\
\", 48], Rule[\\\"Find the inverse of f (x) = 6x +15\\\", 49], Rule[\\\"Find \
the MacLauren Expanision of z(n)= \
(z+1\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(1/2\\\\)]\\\\)/(z+4)\\\", \
50], Rule[\\\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\\\\[Pi]/4\\\", 51], Rule[\\\"Find \\\\[Integral]12 + csc(\\\\[Theta] ) \
[sin (\\\\[Theta] ) + csc(\\\\[Theta] )] d\\\\[Theta]\\\", 52], Rule[\\\"Find \
\\\\[Integral] 2cos (w) \\\\[Minus] sec(w) tan (w)dw\\\", 53], Rule[\\\"Find \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
dx \\\\[Minus]18x + 7\\\", 54], Rule[\\\"Find \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
\\\\[Minus]18\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) + 7 \
dx\\\", 55], Rule[\\\"For the function \
(2-(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(t\\\\), \
\\\\(2\\\\)]\\\\)+3\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/2\\\\)]\\\\))/(t+1), L'Hoptial's rule to find the limit as x \
approaches -1\\\", 56], Rule[\\\"For the function \
f(x)=(8-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\))/(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\
\\)-4), find the values at the below listed points and th limit as x \
aproaches 2\\\", 57], Rule[\\\"For the function \
f(x)=(8-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\))/(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\
\\)-4), use L'Hoptial's rule to find the limit as x aproaches 2\\\", 58], \
Rule[\\\"For the function f(y)= sin(y)/y find the value at the below listed \
points and the limit as y approaches 0\\\", 59], Rule[\\\"For the function \
W(x)=ln(1+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)) and \
the point x=1, find the secants at point Q and the tangenet line\\\", 60], \
Rule[\\\"Graph the inequality y<3x+4\\\", 61], Rule[\\\"Graph the parabola \
give by \\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\)+3x+2. \
Find the zeros, vertex and intercept\\\", 62], Rule[\\\"How many miutes are \
in a day?\\\", 63], Rule[\\\"Identify the property used in the equations \
below as distributive, inverse or associative\\\", 64], Rule[\\\"Is x=-8 a \
solution to 1/2x+6>3?\\\", 65], Rule[\\\"Multiply 24/3 and 27/8\\\", 66], \
Rule[\\\"Multiply 8 and 3/24\\\", 67], Rule[\\\"Plot 1.25, 2/3 and 2 on a \
number line\\\", 68], Rule[\\\"Simplify 10-(7+1)\\\", 69], Rule[\\\"Simplify \
10-7+1\\\", 70], Rule[\\\"Simplify (15-3)/(1+5)\\\", 71], Rule[\\\"Simplify \
24/(4-2\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(3\\\\)]\\\\)\\\", 72], \
Rule[\\\"Simplify (2-5\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(2\\\\)]\
\\\\)\\\", 73], Rule[\\\"Simplify \
2-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(5\\\\), \\\\(2\\\\)]\\\\)\\\", 74], \
Rule[\\\"Simplify 4+5(1+12/6\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(2\
\\\\)]\\\\)\\\", 75], Rule[\\\"Sketch the graph of \
f(x)=\\\\!\\\\(\\\\*SuperscriptBox[\\\\(3\\\\), \\\\(1 + 2  x\\\\)]\\\\)\\\", \
76], Rule[\\\"Sketch the graph of \
h(x)=8+3\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(2  t - 4\\\\)]\\\\)\\\
\", 77], Rule[\\\"Solve 3sec(4 \\\\[Minus] 9z) \\\\[Minus] 24 = 0\\\", 78], \
Rule[\\\"Solve 3(x-5)+4=10\\\", 79], Rule[\\\"Solve 3\\\\[Minus]14sin (12t + \
7) =13\\\", 80], Rule[\\\"Solve  4sin (3t ) = 2\\\", 81], Rule[\\\"Solve 4sin \
(3t ) = 2 in [0, 4\\\\[Pi]/3], 2cos(x/3) \
+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(2\\\\), \\\\(0.5\\\\)]\\\\) = 0 in \
[\\\\[Minus]7\\\\[Pi] ,7\\\\[Pi] }\\\", 82], Rule[\\\"Solve 4x-9=11\\\", 83], \
Rule[\\\"Solve 4y sec(7 y) = \\\\[Minus]21y\\\", 84], Rule[\\\"Solve and \
graph the solution to 2x-3<7\\\", 85], Rule[\\\"Solve and graph the solution \
to |3x-1|\\\\[GreaterEqual]10\\\", 86], Rule[\\\"Tommy\\\\[CloseCurlyQuote]s \
grandma gave him a $50 gift card to Toys R Us for his birthday.\\\\nSales tax \
is currently 9%. Determine the price of the most expensive toy Tommy can buy \
with\\\\nthe $50 gift card.\\\", 87], Rule[\\\"Use the chain rule to find the \
derivative of Q(t)=(3\\\\!\\\\(\\\\*SuperscriptBox[\\\\(t\\\\), \
\\\\(3\\\\)]\\\\)-4\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/2\\\\)]\\\\)\\\", 88], Rule[\\\"Use the definition of the derivative \
to find the derivative of f(x)=6\\\", 89], Rule[\\\"Use the definition of the \
derivative to find the derivative of V (t ) = 3\\\\[Minus]14t\\\", 90], Rule[\
\\\"Use the definition of the derivative to find the derivative of z(n)= \
(n+1)/(n+4)\\\", 91], Rule[\\\"Use the law of sines to find the missing side \
of this triangle\\\", 92], Rule[\\\"Use the quotient rule to find the \
derivative of z(n)= (z+1\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(1/2\\\
\\)]\\\\)/(z+4)\\\", 93], Rule[\\\"What are the discontiuities in the \
function y=(x+2)/(x+3x+2). Which are fundamental and which are \
removable?\\\", 94], Rule[\\\"What are the domain and range of \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(x\\\\)]\\\\) and ln(x)\\\", \
95], Rule[\\\"What are the domain and range of the trigonometric functions?\\\
\", 96], Rule[\\\"What is |1|\\\", 97], Rule[\\\"What is 10% of 100\\\", 98], \
Rule[\\\"What is 1+1\\\", 99], Rule[\\\"What is  1/2 + 1/3\\\", 100], Rule[\\\
\"What is 12 1/3 as an improper fraction\\\", 101], Rule[\\\"What is 2+2\\\", \
102], Rule[\\\"What is 2+3\\\", 103], Rule[\\\"What is  24/3 * 27/8\\\", \
104], Rule[\\\"What is |-30|\\\", 105], Rule[\\\"What is 3/18 in simplest \
form\\\", 106], Rule[\\\"What is 3-(-2)?\\\", 107], Rule[\\\"What is \
-3+4\\\", 108], Rule[\\\"What is 42/54 in simplest form\\\", 109], \
Rule[\\\"What is 42/5 as a mixed number\\\", 110], Rule[\\\"What is 4% of 16?\
\\\", 111], Rule[\\\"What is 53/9 as a mixed number\\\", 112], Rule[\\\"What \
is  8 * 3/24\\\", 113], Rule[\\\"What is (a+b\\\\!\\\\(\\\\*SuperscriptBox[\\\
\\()\\\\), \\\\(n\\\\)]\\\\) (Hint: What theorem is this?)\\\", 114], Rule[\\\
\"What is ln(1)?\\\", 115], Rule[\\\"What is sin(60)\\\", 116], Rule[\\\"What \
is tan(30)\\\", 117], Rule[\\\"What is the absolute value of -1?\\\", 118], \
Rule[\\\"What is the area under the curve \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(sin\\\\), \\\\(2\\\\)]\\\\)x from 0 to \
\\\\[Pi]/2\\\", 119], Rule[\\\"What is the Deriviative\\\", 120], \
Rule[\\\"What is the integral of sin(2x)?\\\", 121], Rule[\\\"What is the \
integral of x dx\\\", 122], Rule[\\\"What is the largest value for the \
missing side of this triangle\\\", 123], Rule[\\\"What is the most specific \
subset of the real numbers that -7 is a part of?\\\", 124], Rule[\\\"What is \
the next term in the series \\\", 125], Rule[\\\"What is the sum from 1 to 5 \
of a=10n+3\\\", 126], Rule[\\\"what is the sum of the geometric series from 1 \
to infinity of 9(1/10\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(n\\\\)]\\\\)?\\\", 127], Rule[\\\"What is \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
\\\\[Minus]18\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) + 7 \
dx\\\", 128], Rule[\\\"Wrie the standard form of y=3/2 x+2\\\", 129], Rule[\\\
\"Write 30 degrees in radians\\\", 130], Rule[\\\"write 3/18 in simplest form\
\\\", 131], Rule[Times[\\\"What is 3 2/7 as an improper fraction\\\", \
\\\"write 42/54 in simplest form\\\"], 132], Rule[\\\"Write slope intercept \
form for a slope of 2 and y-intercept of 12\\\", 133], Rule[\\\"Write \
\\\\[Pi]/4 in degrees\\\", 134], Rule[\\\"-x-2=12\\\", 135], Rule[Null, \
136]]]], Rule[\\\"MissingCode\\\", 0], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 8874348951581137712], Rule[\\\"Output\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]]]]]], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Imputed\\\"]]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"Preprocessor\\\", \
MachineLearning`MLProcessor[\\\"ToMLDataset\\\", Association[Rule[\\\"Input\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\
\"]]]]], Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Preprocessor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"List\\\"], \
MachineLearning`MLProcessor[\\\"WrapMLDataset\\\", \
Association[Rule[\\\"FeatureTypes\\\", List[\\\"Nominal\\\"]], \
Rule[\\\"FeatureKeys\\\", List[\\\"f1\\\"]], Rule[\\\"FeatureWeights\\\", \
Automatic], Rule[\\\"ExampleWeights\\\", Automatic], Rule[\\\"RawExample\\\", \
Missing[\\\"KeyAbsent\\\", \\\"RawExample\\\"]]]]]]]]], \
Rule[\\\"ScalarFeature\\\", True], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"Processor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"ToVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 7740907413418953510]]], \
MachineLearning`MLProcessor[\\\"IntegerEncodeNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[\\\"algebra 1\\\", 1], Rule[\\\"algebra 2\\\", 2], \
Rule[\\\"calc\\\", 3]]]], Rule[\\\"MissingCode\\\", 0], Rule[\\\"Version\\\", \
List[12.`, 0]], Rule[\\\"ID\\\", 3923291764372626615], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]]]], \
MachineLearning`MLProcessor[\\\"FromVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", List[3]]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", \
List[12.`, 0]], Rule[\\\"ID\\\", 689381485439722164]]], \
MachineLearning`MLProcessor[\\\"FirstValues\\\", \
Association[Rule[\\\"Info\\\", Association[Rule[\\\"Type\\\", \
\\\"Nominal\\\"], Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", 3]]], \
Rule[\\\"Key\\\", \\\"f1\\\"], Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]]], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"ProbabilityPostprocessor\\\", Identity], Rule[\\\"Name\\\", \
\\\"class\\\"], Rule[\\\"Marginal\\\", Association[Rule[\\\"algebra 1\\\", \
0.37142857142857144`], Rule[\\\"algebra 2\\\", 0.22857142857142856`], Rule[\\\
\"calc\\\", 0.39999999999999997`]]]]], Rule[\\\"Prior\\\", Automatic], \
Rule[\\\"Utility\\\", SparseArray[Automatic, List[3, 4], 0.`, List[1, \
List[List[0, 1, 2, 3], List[List[2], List[3], List[4]]], List[1.`, 1.`, \
1.`]]]], Rule[\\\"Threshold\\\", 0], Rule[\\\"TieBreaker\\\", RandomChoice], \
Rule[\\\"PerformanceGoal\\\", Automatic], Rule[\\\"BatchProcessing\\\", \
Automatic], Rule[\\\"Model\\\", Association[Rule[\\\"NeighborsFunction\\\", \
MachineLearning`PackageScope`NeighborsFunction[\\\"Nearest\\\", \
NearestFunction[Hold[Nearest[Rule[List[List[0.20874287902662356`, \
0.05076760013054465`, 0.12299217336751644`, -0.7217178113767901`, \
-0.01950969285105098`, 0.15758229720049532`, -0.03452407136774974`, \
0.11166155823546944`, 0.18876632146856745`], List[-0.3594795130895579`, \
-0.16042385138793877`, 0.09963466370799849`, 0.5483324399248775`, \
-0.034378135355781936`, 0.009196829528893545`, 0.17572011803586657`, \
-0.3546858694223344`, 0.5273107984733745`], List[-0.5365576313720708`, \
0.01462031426383527`, -0.08051531640664132`, -0.31946909538319324`, \
-0.02894369615382801`, -0.6462972209561233`, 0.21362509803048088`, \
0.1864404763153632`, 0.7223601241934188`], List[0.11428169955115125`, \
0.2165675671799198`, -0.15099286041902274`, -0.23356450220118308`, \
-0.653306347595659`, -0.31269089816647233`, 0.4356209169626309`, \
-0.1037569526941192`, -0.1726383474985441`], List[0.09076148083722635`, \
-0.7724130124795144`, -0.3633984414607187`, 0.44055528880320455`, \
-0.6539328931879371`, -0.4185083086349062`, -0.12365704376200198`, \
0.09404430398690063`, 0.19271983785291286`], List[-0.4676081065897829`, \
0.30279068596913294`, -0.10701208671912901`, -0.4263098012177711`, \
0.23697574243009006`, 0.33755051732080593`, -0.05194023589766424`, \
0.03460633098407323`, -0.3514329810037291`], List[0.13170335014743753`, \
0.376657489075397`, 0.2920051731464742`, -0.4497051066967155`, \
0.1440874775399693`, 0.18625325035164533`, -0.16104804579834978`, \
0.4085984708289707`, 0.04328533320547977`], List[0.10614978292417514`, \
-0.13845376093685008`, 0.11688803121888576`, 0.3744064770466563`, \
-0.06057815674434259`, -0.0013536235535923085`, -0.43510388605203426`, \
0.29401704685689123`, 0.24493780288679798`], List[0.6993706445890546`, \
0.1115644916472831`, 0.17311607252650144`, -0.038341022327356616`, \
0.1306520765355172`, -0.17205235346446685`, -0.17840362356979186`, \
0.006835761686547726`, -0.21315255414120637`], List[-0.11228283862572064`, \
-0.11752194920493007`, -0.2401843105378093`, 0.2060291335668737`, \
0.4795961627587431`, 0.15290001489936247`, 0.05293575857540196`, \
-0.18960889539019632`, -0.18745396406105982`], List[0.28929444211581623`, \
-0.04139896184765097`, 0.4321836837109878`, 0.057571688157827386`, \
-0.7157332584916373`, -0.673392025831568`, 0.20624532623852898`, \
-0.07919576999377469`, -0.034575602943176444`], List[-0.14211389814024747`, \
0.5067736291271908`, -0.04075904961614285`, 0.11688810219608545`, \
-0.3625112173016552`, 0.35627977686819373`, 0.5460409897319862`, \
0.043691481870640356`, -0.22718230951995047`], List[0.2673442840755443`, \
0.49824021931002`, 0.22912496436118365`, -0.07707997678791205`, \
-0.08301340854219655`, -0.45659153489907117`, -0.1014002054342086`, \
0.268792403186081`, -0.09830225542247353`], List[0.1996367226301195`, \
0.17564098182668908`, -0.012801171952048298`, -0.7157202028829195`, \
0.20786069998156775`, 0.08308143352664293`, 0.08612406164217518`, \
0.0037716223529896563`, 0.6886686227462105`], List[0.008347260796583458`, \
-0.03087658403936844`, -0.40197202133273996`, 0.35966348865793`, \
-0.3954058614895362`, 0.715814251527444`, 0.024732690588725466`, \
-0.049388856886686726`, -0.30091962202154`], List[-0.08133418460850446`, \
0.30589212713541625`, -0.2225950134619789`, -0.5297467566362765`, \
-0.38232820804206263`, -0.1730999954173601`, 0.1395611216479457`, \
-0.09086670355775994`, -0.12034914322203075`], List[0.0786951912438882`, \
0.003796088031110102`, 0.2609178724988531`, -0.08581203127629053`, \
-0.2861974018971561`, 0.3895889052812407`, -0.4319916601403748`, \
-0.21363525669285197`, 0.23187084055161056`], List[0.280134251705132`, \
0.24035078840781643`, -0.3758218829699329`, 0.17220737689227084`, \
-0.0171507317251199`, 0.07818343679181021`, 0.35249044102768357`, \
0.19016030557667155`, -0.31985117289380405`], List[-0.22752452792716213`, \
0.029155537966807313`, -0.22030865425983226`, -0.09984461808020004`, \
-0.20492536651100907`, 0.036960527849913376`, 0.28563271601838114`, \
0.183220979967337`, -0.25819738406715487`], List[-0.3545227260045899`, \
0.4500489633030616`, -0.616829959556116`, 0.15135656197218672`, \
0.6445167267695278`, 0.40377009624390214`, 0.37973248435417895`, \
-0.4245961769794931`, 0.34834747458284226`], List[-0.04570269538665324`, \
0.2460061839813122`, 0.14165978440229876`, -0.12405227749400839`, \
0.5932468114242796`, 0.2279556393564271`, 0.29343050721194164`, \
0.0801505345631597`, 0.35186526577299104`], List[-0.09152228216323975`, \
0.31768719717084315`, -0.1488717878250302`, 0.09515446416495542`, \
0.3598480250292752`, 0.09621967727440374`, 0.34684468624004444`, \
0.2993518436246563`, 0.09623757694157219`], List[0.4495386678326473`, \
0.2989116002414778`, 0.1704847968719811`, -0.4519461768574132`, \
0.3830479301501389`, -0.032884480177115274`, -0.5535258771010826`, \
-0.15517593654589323`, -0.18686761017707723`], List[0.5137420607388886`, \
-0.05634970859018103`, -0.09681266038875096`, -0.12021083408010039`, \
0.33463864039756014`, -0.44865042865465604`, -0.4670738581379808`, \
0.022088254733766105`, 0.03985088886666773`], List[0.34363889601989145`, \
-0.3777912717113709`, 0.37584788448768136`, 0.2833635047245089`, \
-0.21780605760908914`, -0.03035958391081397`, -0.40291027298062876`, \
-0.013695143872673768`, -0.24009196743240757`], List[-0.06266126388771766`, \
-0.11711362154648372`, -0.11386633254788112`, 0.011423306452275054`, \
0.07906022194844414`, 0.037982944788481535`, -0.0923555533454689`, \
-0.44632127620348433`, 0.04067860051096198`], List[-0.2551207695865459`, \
-0.5559426709266213`, 0.22716814347115505`, 0.0026638976367955366`, \
-0.02899285704316629`, 0.33735945225049535`, -0.016860088872758108`, \
0.06785295315247933`, 0.12115114051102578`], List[-0.42491212908905396`, \
-0.02453360559490337`, 0.017421609395471098`, -0.38932050287872944`, \
-0.691552387755212`, 0.6158059459144742`, 0.7428083394653718`, \
-0.0760566146571162`, -0.0873273831993349`], List[0.46933994820429226`, \
0.3454480862743675`, 0.09093886677567012`, 0.9134630439487503`, \
-0.303706380148827`, 0.20491076518726314`, -0.17634721343237947`, \
0.04060965569226836`, 0.02143629282893743`], List[-0.08673553407781519`, \
-0.25038015212525894`, -0.2019957663530101`, 0.45501785415030793`, \
0.4028178510996319`, -0.5190522602723715`, -0.23195416934987112`, \
0.2120154489552414`, -0.030324526164113984`], List[0.4945378945368456`, \
0.26868485326149405`, 0.026197273880055442`, 0.09316943958678726`, \
-0.5147454324270786`, 0.00003165341609528542`, 0.4488046910133153`, \
0.029474298644174515`, 0.416588935600327`], List[-0.08133945905484026`, \
0.39410712647261953`, -0.15453432684214938`, -0.5932110435637872`, \
0.34572067259242245`, 0.5475879603672886`, 0.8791973885719282`, \
0.7005171113420935`, 0.7883007236820052`], List[-0.27551702735730177`, \
-0.27297559532912474`, -0.4451059201168938`, -0.23024414179074615`, \
0.1991878956396616`, -0.01166668653439136`, 0.3439681084393318`, \
0.12889496462431263`, -0.3284322408929016`], List[-0.1030299118411174`, \
0.325555317786535`, -0.020379710933565304`, 0.023690673980041637`, \
-0.25176992149715677`, -0.18965997155340658`, 0.21659459025811015`, \
-0.2958058796511218`, 0.4279936777340847`], List[-0.193706799138636`, \
-0.16581841246709947`, 0.09978317991566894`, 0.07784682985479077`, \
-0.1434286777575322`, -0.2539882903557889`, -0.2830966017449637`, \
-0.0941575646109914`, -0.4199799938946097`], List[-0.22965316345041578`, \
0.06731724112316789`, 0.18348191971557576`, -0.23030464471221923`, \
0.4787191700515942`, 0.10031795198805464`, -0.140898553193766`, \
-0.42334740678730565`, -0.07632550063346422`], List[-0.3383822144480971`, \
-0.05653832022286427`, 0.05688138998989475`, 0.8225183746644238`, \
0.6389002427953396`, -0.9710851703540733`, -0.01693772660037855`, \
-0.12618646400173777`, -0.023438725249073263`], List[0.048411419060566487`, \
-0.029510412079914266`, 0.6108093541972673`, -0.5336483493807325`, \
0.13004031112388645`, -0.16995669638771213`, 0.08358901542056327`, \
0.07624629979716718`, 0.4707891588626374`], List[0.07534547294030489`, \
0.19570317136196377`, 0.8213800016028077`, 0.18515624510107173`, \
-0.2070334867287674`, 0.5477599124772589`, -0.38631175087988034`, \
-0.2659828341275149`, -0.1927456489208404`], List[0.31766866040048874`, \
0.27257906000247895`, -0.08534173597651015`, -0.5650156053209847`, \
-0.05241427548628652`, 0.3704908551178045`, -0.1709892634964243`, \
-0.15058952777284768`, 0.1968658292895203`], List[-0.3370698738287689`, \
0.6492241919887263`, 0.15424101249281363`, -0.025644036049699375`, \
0.11186146404803164`, -0.4499098411633441`, 0.028322969017715627`, \
-0.1418704373301254`, -0.3202963795299451`], List[-0.6515587130848055`, \
0.1319219051929129`, -0.2209652208611733`, -0.1629403825527452`, \
-0.22815489685638563`, -0.36087967140507204`, 0.003016676132132802`, \
0.12803408080061252`, 0.4279091953634936`], List[0.20877907964224446`, \
-0.0057544998079518996`, 0.1183841790818105`, 0.30117211789580434`, \
0.5772193447574975`, 0.21656196931117788`, 0.20321968083530906`, \
0.5351129233022265`, 0.020336109579133423`], List[0.7639526600417711`, \
0.23927147868841994`, 0.0008142341064539886`, -0.08375792161366058`, \
0.009978226984107405`, 0.24252378856462156`, -0.3833739969695768`, \
-0.024158178155864678`, 0.3170775974157653`], List[-0.3160271236209324`, \
0.6225468236915149`, -0.8563275233747362`, 0.15811062734253908`, \
-0.00167710274364925`, 0.7948678996429545`, -0.15702568858933014`, \
0.4066013216632693`, -0.2862708476517795`], List[0.3488094535669043`, \
-0.39536847365342326`, -0.10788925162971541`, -0.27202098756522114`, \
0.010240701873752232`, -0.0673296620559716`, -0.02201752562989382`, \
0.19048027529379005`, 0.11101679153943364`], List[-0.18789457774672616`, \
-0.0838619543735332`, 0.30350975899120464`, -0.2595146987478871`, \
0.40557456368504546`, 0.050231489525318`, 0.1437968539236454`, \
-0.40707100210556585`, 0.2795517609776055`], List[0.44733252105322957`, \
-0.24141494081838163`, -0.06415466845491304`, -0.645900266229139`, \
0.4955035485689486`, -0.17883191503904924`, -0.19887840265909318`, \
-0.09203663504817157`, -0.7784434470521396`], List[-0.3818382929931367`, \
0.19993052195500105`, 0.5571983801074892`, -0.7299461830412856`, \
-0.10021958735771684`, -0.5066235012485987`, -0.24464986131986166`, \
-0.7298345166539386`, -0.0962734322087367`], List[1.135640276343542`, \
-0.289604096553808`, -0.5909165011318928`, 0.26818737108806273`, \
-0.07719298033413753`, 0.025726152414889635`, -0.4422726667302176`, \
0.08117988767535687`, 0.4022636395662933`], List[-0.07527472601369956`, \
-0.604629911383174`, -0.17467999583596944`, 0.06678671006068645`, \
-0.1334883101510681`, -0.6217472340461452`, -0.16058289667765835`, \
-0.405465829345206`, -0.3769669872911506`], List[-0.08455873109576686`, \
-0.02453198099065159`, 0.3153151764714562`, 0.20826841450067188`, \
-0.7428676815320632`, -0.25866802296287783`, -0.2320371719007801`, \
0.3596508440611076`, -0.3777203706447362`], List[-0.37968196591290676`, \
-0.47704875849041567`, -0.6385213366667166`, 0.5015003297716015`, \
0.3583792076295074`, -0.3181431224662174`, -0.10594750923291396`, \
-0.1602487808612161`, 0.0937084317177743`], List[0.7302715711053949`, \
-0.08916043862683222`, 0.1506782411616488`, 0.1279303989236035`, \
-0.023067774611477316`, -0.482795938707709`, -0.43929146697284743`, \
0.5050546151732136`, -0.08115527277125914`], List[-0.16582725794399328`, \
-0.0798424203742381`, -0.2491473289476622`, 0.3858371564988335`, \
0.008080257859220405`, 0.024807907153558618`, -0.08841527231705089`, \
-0.14144256256817306`, 0.2815587084151075`], List[0.6993707322516595`, \
0.1115634666529753`, 0.17311510198751606`, -0.038341984929288385`, \
0.1306513488007615`, -0.1720517353309059`, -0.17840362245107508`, \
0.006834874050391562`, -0.2131512652623155`], List[-0.25913600224016853`, \
0.4420896381508019`, -0.3950728655832447`, 0.2348657904633493`, \
0.1750812242945353`, 0.24961259493346707`, 0.40244217990613546`, \
0.39149205291973327`, -0.22119692924020398`], List[0.5950464612423597`, \
-0.3653590762378188`, -0.2770347112193803`, 0.14172302388422134`, \
-0.12145047307079512`, 0.126351794737711`, -0.6250761706781518`, \
0.4033346480118836`, -0.13105036336505138`], List[0.28950602835663075`, \
0.4910929202353126`, -0.2682853968674736`, 0.2258108992680348`, \
-0.23162805031718467`, 0.13656793343356813`, 0.4786464953153419`, \
-0.1807971529049329`, -0.7512087763198596`], List[-0.34900733580673693`, \
-0.08538619007393361`, 0.07444756783077076`, 0.2590291360314095`, \
0.5260827330564427`, 0.10242489761672117`, -0.0957782790058187`, \
-0.49911615965105327`, 0.018216825362685946`], List[-0.4252637828207426`, \
0.519254789140753`, -0.4208258507255675`, -0.0542164744332335`, \
0.1801788150028814`, 0.22453303745698838`, -0.242351239887168`, \
0.21841519108360535`, -0.0010125705150938126`], List[0.10192713695482356`, \
0.16523739202927476`, -0.36494168690346107`, -0.28525193708945884`, \
-0.43740556238093753`, 0.11609586531903311`, 0.11192006849606445`, \
-0.1803563150838122`, -0.39385248840602405`], List[0.2627099502195116`, \
0.05943974609871901`, -0.13240812780815683`, -0.17784621590066169`, \
-0.432415912609308`, -0.03736390776878427`, -0.8969861067597724`, \
0.2866678841867095`, 0.5164641317845157`], List[-0.3916442830393213`, \
0.38879328849515266`, 0.6109291396865102`, -0.014156223580248888`, \
-0.17553426148269835`, -0.6990110775265206`, 0.22981929281342547`, \
-0.6051160448142078`, -0.1159859848634532`], List[0.0299215238877316`, \
-0.19280849671632683`, 0.036525066102937306`, -0.29912287431104445`, \
-0.37482336515977205`, 0.15181456445391223`, 0.13993660003885003`, \
0.14395676966881993`, 0.6199233699838844`], List[0.42454831848251945`, \
-0.07230996565543596`, -0.11533333974397957`, -0.39670824434575946`, \
0.08166892043386316`, -0.22897101575811446`, -0.037310582431729654`, \
0.279322354428391`, -0.18566643301215618`], List[-0.39046950003736625`, \
0.19920876010502908`, -0.5133538506324218`, 0.15004744249688048`, \
-0.41026180937375983`, -0.7000700290551709`, -0.8885369532723615`, \
-0.5680447278762831`, 0.24697318966019732`], List[0.3322940876202558`, \
-0.5314456958613133`, -0.5026281159068638`, 0.27662101039832987`, \
-0.07150425665556988`, -0.19835522984224568`, -0.07549085807811515`, \
0.9669855974266183`, -0.37829181104502646`], List[-0.06308073930380526`, \
-0.08657028133699515`, 0.15125791890361046`, -0.5012487519959512`, \
-0.041637050588429494`, 0.0814743597547742`, -0.4592981595909421`, \
-0.011059948151477756`, -0.04675608151022355`], List[-0.13664247048316064`, \
-0.4362393952334086`, -0.08726032684867374`, 0.37119049571632046`, \
0.4290705794366175`, -0.12117277750307989`, 0.1658681553917835`, \
-0.04627976144871422`, -0.04142654501907702`], List[0.06368755819023038`, \
0.23749796789362487`, 0.17656813722765266`, -0.16103142816285473`, \
0.7223508028471574`, -0.0324672744697649`, -0.3484786621309663`, \
0.30808684350078963`, 0.35070721054861886`], List[-0.13572281645921758`, \
0.271203515519359`, -0.29878868824835064`, 0.20319958072750482`, \
-0.5568729943127333`, 0.006559723511454851`, 0.2819537202825195`, \
-0.19625710861484627`, -0.5195209653844483`], List[-0.12525616331251352`, \
-0.1539231886021072`, -0.33230468416278114`, 0.0008381239064730425`, \
0.29914550089266473`, 0.3911428016453452`, 0.09494692850228265`, \
0.049311913416938996`, -0.006369260710246987`], List[0.649604389751506`, \
0.3247288926012502`, 0.4105425647050521`, 0.3924607989012559`, \
0.7708676746190289`, 0.023929416459328185`, -0.026677654373686344`, \
0.3031462736741994`, -0.19687095126026685`], List[0.18960841202137074`, \
0.3458928874669899`, -0.23849238311982862`, 0.500737598186573`, \
0.3138140282252132`, 0.5495899352411213`, -0.45410956200213515`, \
0.03354194783677001`, 0.13985421171779197`], List[-0.2604765815832215`, \
0.042917344598454296`, 0.06834722891672103`, -0.04427601087619971`, \
0.2958850427445316`, 0.26289858156440754`, -0.29503983413907525`, \
-0.35335335318481276`, 0.5557621406858145`], List[-0.15041904988515012`, \
0.4893337841407504`, 0.3039784389521658`, 0.36038197113422504`, \
-0.06319656783839438`, 0.07138163962466548`, 0.21131971405540828`, \
0.6988107543242317`, 0.04950114269403004`], List[-0.15769883533937587`, \
0.04785276251520545`, 0.8955811207933329`, 0.5174973468034412`, \
0.16342916237500962`, 0.4368364221677568`, -0.2317493333852527`, \
0.7974091442632546`, -0.3477349751305598`], List[0.2090675920068328`, \
0.3724518300309729`, -0.000955216237396284`, 0.20147288414599018`, \
0.3090949314732799`, -0.11240796919254263`, -0.32074260313581815`, \
-0.03590285426102904`, 0.3936563865349585`], List[-0.50615614557493`, \
0.002258602403135732`, 0.15630935689421063`, 0.2707437005669415`, \
-0.34838884976975587`, 0.05315801005395906`, 0.18877918004433142`, \
-0.6017982762113175`, -0.29668880801291636`], List[0.1134587464448435`, \
-0.29978778313216575`, 0.5586837966218207`, -0.18951765829271036`, \
-0.22020413484169168`, -0.5374673695066325`, -0.021252971232965788`, \
-0.04977993055007394`, -0.06891276470173492`], List[0.14115356282760344`, \
-0.012464107953009637`, 0.0064291848469569856`, -0.0833835833715372`, \
0.6265052859206968`, -0.2274214874457897`, 0.1928743878306332`, \
0.17434268919387508`, 0.33895976146077605`], List[0.12146056706638518`, \
0.08822600997115312`, -0.5276589700875568`, 0.1743688529037854`, \
0.07595526525487478`, -0.06023656649961369`, -0.0316238314181319`, \
-0.19720958158014576`, -0.04832927017968282`], List[0.3922274059669975`, \
0.34273645627619076`, 0.23769161112247209`, 0.2789847494043621`, \
-0.13161091020153579`, -0.19414346245211048`, -0.1218666676090055`, \
0.0993894132381497`, 0.8567880811016394`], List[-0.29641989798480095`, \
-0.13964151896450797`, -0.3991424933584305`, 0.5534202209775267`, \
-0.06952833631528567`, 0.18266307424594427`, -0.0028021557597296197`, \
0.718768931941333`, -0.2569440521348632`], List[-0.17141790875848306`, \
0.2273384142254456`, 0.17476519709069263`, -0.08068524912812608`, \
0.0328304497181446`, 0.20663625548371087`, -0.21035218857616933`, \
0.16613052115848864`, 0.15521117876233217`], List[-0.19846621698659267`, \
-0.21217826681976326`, 0.2957255272039071`, -0.10369050812254703`, \
-0.059266418099869426`, 0.4216594545369327`, -0.32192720791388524`, \
0.2615298460053594`, 0.4583350185339478`], List[-0.32712406864981636`, \
-0.5006346612619237`, 0.04977453385389784`, -0.027566609716521164`, \
-0.044840118289667705`, 0.8469813467085209`, -0.23878730147975485`, \
0.1375557214253854`, 0.2290334619981145`], List[-0.5170170359329428`, \
-0.20557169679332182`, -0.359177878883745`, 0.16441115236915949`, \
-0.03164153766772894`, 0.028168825003322375`, 0.2016892625264097`, \
0.09221102138285306`, 0.18106884123923947`], List[-0.2678616107963751`, \
-0.09583176717032524`, 0.5658593182891725`, 0.3012921475846824`, \
0.18115546530239654`, -0.474135342146021`, -0.16503426876118885`, \
0.369258418188094`, 0.2240753088770534`], List[-0.6746456756698453`, \
-0.07398840853482327`, -0.4282664594440127`, 0.3615386503695829`, \
0.18006686597602228`, -0.13439661150466334`, 0.1761112001035316`, \
-0.2424366272016183`, 0.29516032638180756`], List[-0.17057963960075972`, \
-0.4735863643713902`, -0.5377766461673048`, 0.20263570406823225`, \
0.2757840266636262`, -0.5120897540507036`, -0.7782198522518828`, \
-0.22768078869001515`, 0.24691907962212264`], List[-0.3057641641534392`, \
0.19569360220223006`, -0.38238237796943225`, -0.04909472250349194`, \
-0.3265349908199793`, 0.4190156847572954`, 0.16893341173961796`, \
0.15981069422764646`, 0.09115402852083196`], List[-0.05411753075688497`, \
-0.08556660853683688`, -0.5068180029475401`, 0.48290170403471205`, \
-0.3218343884996128`, -0.0027320496909966764`, 0.31877210759938046`, \
0.27870747489960307`, -0.11707652864618859`], List[-0.285473043274214`, \
0.06183013160939251`, 0.05673688031472053`, -0.2226175153759567`, \
-0.09154018617418541`, 0.11074462818882146`, 0.7220209162919877`, \
-0.2596605140189729`, -0.2277792489078885`], List[0.15933745572618865`, \
-0.5740848278950217`, 0.14455664874106558`, 0.20090423250669687`, \
-0.6382199126956035`, -0.034013201074845595`, 0.47493242664242735`, \
-0.12053057178753036`, -0.0741325137654815`], List[0.19543413182814884`, \
0.36788355203238404`, -0.37748234472975584`, -0.6052191712950729`, \
0.03395390346287355`, 0.4752831985658618`, -0.12883926109838834`, \
-0.15887963391271961`, -0.013050716807415935`], List[0.24299915488266927`, \
-0.1250913970371324`, -0.05108582388415028`, 0.03404227200261135`, \
-0.5160475300575409`, 0.3091233315211689`, -0.5094500109400362`, \
0.03855671027109207`, -0.2181429046745454`], List[-0.12010360272753756`, \
0.32121421995052474`, -0.02837146557966537`, 0.32010901703674854`, \
-0.5156782302144831`, 0.18898049839450168`, 0.9442705326914314`, \
-0.17375306340976607`, 0.07108707084962265`], List[0.016375467989809465`, \
0.44809604163552647`, -0.45284417872895955`, -0.48966296108970914`, \
0.214971476316191`, 0.1188528207256086`, 0.5702766676880383`, \
0.09492575967338066`, 0.36233386116556415`], List[0.41722759743723525`, \
-0.8073547668610904`, -0.024488172816665734`, 0.2008434795425218`, \
0.011983324211450649`, -0.4077005700607466`, 0.19019054499111374`, \
0.387374087807272`, -0.09086894098034302`], List[0.0532725897326204`, \
-0.27374489851321604`, 0.003781466952232597`, -0.24803197615314815`, \
0.062305082108779025`, -0.02455623694520868`, -0.22576109502271868`, \
0.06877378866531023`, 0.14188753766549406`], List[0.30849677939551623`, \
0.08045312415061241`, 0.002153275333974313`, -0.351974704972973`, \
0.2746377208906142`, -0.07863688063825786`, 0.8698650618261081`, \
-0.06235764377839263`, 0.5998181858711278`], List[0.5133988926101243`, \
-0.28978848634382226`, 0.07052733984665967`, -0.08369868830897471`, \
0.23278436065513589`, -0.06182325911684266`, -0.10833271803258925`, \
-0.037436524667012715`, 0.3941999003402016`], List[-1.016917565522857`, \
0.6854671093892978`, -0.023244736900856443`, 0.19931379865655363`, \
-0.2088378318351566`, -0.1208748170664811`, -0.06141967859437304`, \
-0.10597167600873109`, 0.10875444046422103`], List[-0.11759585947574482`, \
-0.20903426745748094`, -0.5148550128484543`, 0.1781765903893341`, \
-0.2729175260777728`, -0.2448467808957223`, -0.18339764793392305`, \
0.43652343980281133`, 0.3450341511825375`], List[-0.3778310061965379`, \
0.15892728636531703`, 0.019960278876657373`, 0.3943532556347979`, \
-0.034646384053198136`, 0.11630689700227902`, -0.21194704535075837`, \
0.3474019475169545`, 0.3460325119596193`], List[-0.5642436244758945`, \
0.9004256547801892`, 0.1384145250283422`, -0.1118189628317223`, \
-0.09364711727940128`, 0.12097314682193795`, -0.3596772738516575`, \
-0.23452752639196575`, 0.4772603814258445`], List[0.9342466281746301`, \
0.4167505316085906`, 0.27935044962561156`, -0.12481067985303393`, \
0.07047647859902852`, 0.637780449652865`, 0.4586718112134463`, \
0.050949038905411644`, -0.15966730544394575`], List[-0.002291086311673129`, \
0.447789057544173`, 0.15745272935060484`, -0.03998129758573962`, \
0.12120861159568577`, 0.08749619135148178`, -0.15925142736754433`, \
0.37213404342043727`, 0.02902068456655079`], List[0.1656791881215801`, \
0.008029881047586616`, 0.004207157971730912`, 0.5150989160130408`, \
-0.10402766331304579`, -0.09739254574090851`, -0.04143430827607297`, \
-0.057382378163407806`, -0.23188758777150828`], List[-0.48637321504774506`, \
0.11291402344229534`, -0.22080657969069975`, -0.018804955836153252`, \
-0.26949155285518755`, 0.1406983555635552`, -0.2938645374584946`, \
-0.047690040035073405`, 0.15379228577813975`], List[-0.007963838780995158`, \
-0.09005623977920009`, -0.13424891311341547`, 0.02753554217748073`, \
0.2892953609510857`, -0.004933571723441445`, 0.532650093976695`, \
0.15891308958656583`, -0.6966794010457582`], List[-0.45802686465599735`, \
-0.02666533659251453`, -0.21200274419876802`, 0.563909148857333`, \
0.16476255757151723`, 0.29456965203768853`, 0.09015839852771952`, \
1.1167830534377428`, -0.7191608297232752`], List[0.17403735722164138`, \
-0.2542507189056533`, 0.32814237898597254`, 0.054713534501833964`, \
-0.12442956705023747`, -0.4766624505869813`, 0.1926764155992447`, \
-0.19244966366726804`, 0.7083667961092437`], List[-0.058373944501506195`, \
-0.2656568831047161`, 0.017095359154467412`, 0.0037395503557728434`, \
-0.10993288477879751`, 0.02432304343270765`, -0.288601690052489`, \
-0.22796518323303974`, 0.05849934661010106`], List[0.7029641974303402`, \
-0.33319767019895724`, -0.07128309895749682`, -0.7027920138466923`, \
0.5342614045896668`, 0.3491304626108965`, -0.804121595611196`, \
-0.10923058518196056`, 0.23902327340804871`], List[-0.2701676438018764`, \
-0.30321644187380914`, 0.1455762367690625`, -0.004026296876858546`, \
-0.20424160150534743`, -0.055414655374477734`, -0.09007945516845413`, \
-0.3386786134224352`, 0.21636080492297902`], List[-0.48104696404634195`, \
0.4279034308841531`, 0.07543847604919432`, 0.03599121759518621`, \
0.308707238243412`, 0.05559609500536701`, -0.5172789267139858`, \
0.0798199097598091`, 0.1685005812848279`], List[0.37800354437032985`, \
-0.6050900380201988`, 0.014536843456992491`, 0.17154117650926956`, \
-0.9170492614103716`, 0.4267490564834378`, 0.20534489195054828`, \
-0.2677223121543032`, 0.0037569578326140988`], List[-0.03271290204427099`, \
-0.10537906434401388`, -0.06507722026199479`, -0.06519205575527176`, \
0.26502494570747726`, 0.6356328891022943`, -0.00860928434837733`, \
0.5441002550924445`, -0.01894429675172112`], List[0.3252793585970136`, \
-0.10341117690465823`, -0.5999044302353354`, -0.40322945668697635`, \
-0.5170485513963122`, -0.0389720027238153`, 0.026845471145501097`, \
0.027355080182707145`, -0.07485582795741245`], List[-0.23948701247232598`, \
-0.1163019269080546`, -0.21206356622183456`, -0.2817503645247456`, \
-0.004062233267416012`, -0.5971049475470607`, -0.18426926496426194`, \
-0.39565818210136944`, 0.040642872306378815`], List[-0.17048579500696684`, \
-0.19733345589844453`, -0.5485314901065682`, 0.8215821641327099`, \
0.12712671799966072`, -0.9577265527552393`, 0.3032205652416131`, \
0.27382819234138844`, -0.2985141295893147`], List[0.10130460116025061`, \
0.090414587124574`, 0.249194842565596`, -0.21016182421222218`, \
0.228376859902311`, -0.27368828665330874`, -0.22004104840758876`, \
-0.2999583882322103`, 0.021467430893304947`], List[-0.29937630893572303`, \
0.5040818901879784`, -0.000560633785451259`, 0.06289767481476646`, \
-0.1877214125004518`, 0.36058838677561983`, 0.3334478521405993`, \
0.6796874628991235`, 0.02356247920313138`], List[0.19114533575453754`, \
-0.26101512237478824`, 0.13069240311674912`, -0.2045589905415304`, \
-0.5453465291272831`, -0.2365793389071655`, -0.07315991044521537`, \
0.44358834935459585`, 0.5190722191051635`], List[0.04192657899938222`, \
-0.3602902076342167`, -0.16949852931002532`, 0.5252036694875512`, \
0.19437846208605974`, 0.16392556261631774`, 0.07305832244518655`, \
0.2917495790223045`, 0.0009178890573062108`], List[0.24346709103121064`, \
-0.290754151588093`, 0.48281782237054943`, -0.0756452270785661`, \
-0.058055217609387165`, -0.6393912968164641`, -0.04512656441325176`, \
0.16108579254840696`, 0.22613604692850517`], List[0.40575009955079394`, \
-0.22014210198684914`, 0.09302852789251864`, 0.2780295413843263`, \
-0.09004412502839276`, 0.14884875449443427`, 0.2614061299073047`, \
-0.060535183008039214`, -0.16612011579954897`], List[0.7877708151085587`, \
-0.059760077563293594`, 0.08904183119458094`, -0.5875016105338112`, \
-0.010459303658681298`, 0.29593139390852774`, -0.11537023434662842`, \
0.2175652297921246`, 0.061281503730874265`], List[-0.16217523392084005`, \
0.45573653207053516`, -0.027462434613493552`, -0.020645875164570397`, \
0.392522188748133`, 0.5437654186758104`, 0.30178874388165855`, \
0.4940765688437397`, -1.1180128683497634`], List[-0.1474147295100771`, \
0.33554906858311767`, -0.18246483010381187`, -0.7805359130033949`, \
0.21184968562908743`, 0.18365561377289674`, 0.4996360134554676`, \
0.4303580342941452`, -0.054951211804662704`], List[-0.22005541417771513`, \
-0.1471007953983846`, -0.13667113649092616`, 0.09442028879985948`, \
0.6029068346765541`, 0.48395283377799636`, -0.0797143920672395`, \
-0.020713984246130846`, 0.1600058851903673`], List[0.20528497618614713`, \
0.30781085637359074`, -0.1751154842130706`, -0.21904501312338498`, \
-0.6560049725561148`, 0.1538412230103912`, 0.5645704103407829`, \
-0.6282110730346023`, -0.3632942544924067`], List[0.012058306400679685`, \
0.1586931794429063`, 0.427729142045124`, 0.012339416253587828`, \
-0.09642924822186161`, 0.23111410565785612`, 0.05554075748901117`, \
0.7515931441263077`, -0.5402081692546554`], List[-0.09202984877044768`, \
-0.2238907571911146`, 0.06327585264771497`, -0.011703445548714128`, \
0.4770468965249828`, -0.33844331259865684`, 0.2818503839058962`, \
-0.5170950946103163`, 0.06286588064434676`]], Automatic], Rule[Method, \
\\\"KDtree\\\"]]]]]], Rule[\\\"NeighborsNumber\\\", 50], Rule[\\\"ClassPriors\
\\\", List[0.37142857142857144`, 0.22857142857142856`, \
0.39999999999999997`]], Rule[\\\"TrainingOutput\\\", NumericArray[List[1, 3, \
1, 2, 3, 2, 3, 2, 3, 1, 1, 1, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, \
3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3], \\\"UnsignedInteger8\\\"]], \
Rule[\\\"DistributionSmoothing\\\", 0.5`], Rule[\\\"Processor\\\", \
MachineLearning`MLProcessor[\\\"Sequence\\\", Association[Rule[\\\"Input\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", List[136]]]]]], Rule[\\\
\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Weight\\\", \
1], Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]]]], Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"EmbedNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Impossible\\\"], Rule[\\\"Missing\
\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], Rule[\\\"Weight\\\", \
1], Rule[\\\"SetSize\\\", List[136]]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[1, 1], Rule[2, 2], Rule[3, 3], Rule[4, 4], Rule[5, 5], \
Rule[6, 6], Rule[7, 7], Rule[8, 8], Rule[9, 9], Rule[10, 10], Rule[11, 11], \
Rule[12, 12], Rule[13, 13], Rule[14, 14], Rule[15, 15], Rule[16, 16], \
Rule[17, 17], Rule[18, 18], Rule[19, 19], Rule[20, 20], Rule[21, 21], \
Rule[22, 22], Rule[23, 23], Rule[24, 24], Rule[25, 25], Rule[26, 26], \
Rule[27, 27], Rule[28, 28], Rule[29, 29], Rule[30, 30], Rule[31, 31], \
Rule[32, 32], Rule[33, 33], Rule[34, 34], Rule[35, 35], Rule[36, 36], \
Rule[37, 37], Rule[38, 38], Rule[39, 39], Rule[40, 40], Rule[41, 41], \
Rule[42, 42], Rule[43, 43], Rule[44, 44], Rule[45, 45], Rule[46, 46], \
Rule[47, 47], Rule[48, 48], Rule[49, 49], Rule[50, 50], Rule[51, 51], \
Rule[52, 52], Rule[53, 53], Rule[54, 54], Rule[55, 55], Rule[56, 56], \
Rule[57, 57], Rule[58, 58], Rule[59, 59], Rule[60, 60], Rule[61, 61], \
Rule[62, 62], Rule[63, 63], Rule[64, 64], Rule[65, 65], Rule[66, 66], \
Rule[67, 67], Rule[68, 68], Rule[69, 69], Rule[70, 70], Rule[71, 71], \
Rule[72, 72], Rule[73, 73], Rule[74, 74], Rule[75, 75], Rule[76, 76], \
Rule[77, 77], Rule[78, 78], Rule[79, 79], Rule[80, 80], Rule[81, 81], \
Rule[82, 82], Rule[83, 83], Rule[84, 84], Rule[85, 85], Rule[86, 86], \
Rule[87, 87], Rule[88, 88], Rule[89, 89], Rule[90, 90], Rule[91, 91], \
Rule[92, 92], Rule[93, 93], Rule[94, 94], Rule[95, 95], Rule[96, 96], \
Rule[97, 97], Rule[98, 98], Rule[99, 99], Rule[100, 100], Rule[101, 101], \
Rule[102, 102], Rule[103, 103], Rule[104, 104], Rule[105, 105], Rule[106, \
106], Rule[107, 107], Rule[108, 108], Rule[109, 109], Rule[110, 110], \
Rule[111, 111], Rule[112, 112], Rule[113, 113], Rule[114, 114], Rule[115, \
115], Rule[116, 116], Rule[117, 117], Rule[118, 118], Rule[119, 119], \
Rule[120, 120], Rule[121, 121], Rule[122, 122], Rule[123, 123], Rule[124, \
124], Rule[125, 125], Rule[126, 126], Rule[127, 127], Rule[128, 128], \
Rule[129, 129], Rule[130, 130], Rule[131, 131], Rule[132, 132], Rule[133, \
133], Rule[134, 134], Rule[135, 135], Rule[136, 136]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Weight\\\", 1], \
Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]]]], \
Rule[\\\"EmbeddingVectors\\\", List[NumericArray[List[List[0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[-1.0169178247451782`, 0.685467004776001`, \
-0.023245172575116158`, 0.19931364059448242`, -0.20883788168430328`, \
-0.12087416648864746`, -0.06141949072480202`, -0.10597263276576996`, \
0.10875528305768967`], List[-0.38183823227882385`, 0.19993092119693756`, \
0.5571987628936768`, -0.7299461960792542`, -0.1002204567193985`, \
-0.506624162197113`, -0.24465039372444153`, -0.7298336029052734`, \
-0.09627307951450348`], List[-0.6746448874473572`, -0.07398883253335953`, \
-0.42826589941978455`, 0.36153942346572876`, 0.1800663024187088`, \
-0.13439685106277466`, 0.17611148953437805`, -0.242436021566391`, \
0.2951604127883911`], List[-0.06266189366579056`, -0.11711419373750687`, \
-0.113866426050663`, 0.011423281393945217`, 0.07906065136194229`, \
0.03798345848917961`, -0.0923553854227066`, -0.4463205635547638`, \
0.040678951889276505`], List[-0.15769875049591064`, 0.04785262420773506`, \
0.8955807685852051`, 0.5174974799156189`, 0.16342827677726746`, \
0.43683674931526184`, -0.23174996674060822`, 0.7974100112915039`, \
-0.3477349281311035`], List[-0.45802634954452515`, -0.026666218414902687`, \
-0.2120026797056198`, 0.5639081597328186`, 0.16476315259933472`, \
0.2945692837238312`, 0.09015791118144989`, 1.1167832612991333`, \
-0.7191606163978577`], List[-0.3271239101886749`, -0.5006350874900818`, \
0.04977414384484291`, -0.0275662150233984`, -0.04484076797962189`, \
0.8469821810722351`, -0.23878704011440277`, 0.1375560462474823`, \
0.2290327548980713`], List[-0.3370705246925354`, 0.6492243409156799`, \
0.1542404741048813`, -0.02564394846558571`, 0.11186157912015915`, \
-0.4499099552631378`, 0.028323005884885788`, -0.1418711096048355`, \
-0.32029569149017334`], List[-0.39046886563301086`, 0.19920919835567474`, \
-0.5133547782897949`, 0.15004779398441315`, -0.41026270389556885`, \
-0.7000691890716553`, -0.8885369896888733`, -0.5680444240570068`, \
0.24697338044643402`], List[-0.30576378107070923`, 0.19569341838359833`, \
-0.3823833465576172`, -0.04909564182162285`, -0.32653552293777466`, \
0.4190160632133484`, 0.16893252730369568`, 0.15981048345565796`, \
0.09115470945835114`], List[0.09076130390167236`, -0.7724121809005737`, \
-0.3633984625339508`, 0.4405556619167328`, -0.6539329886436462`, \
-0.4185083508491516`, -0.12365677952766418`, 0.09404507279396057`, \
0.19271914660930634`], List[0.7029639482498169`, -0.3331974148750305`, \
-0.07128302752971649`, -0.7027923464775085`, 0.5342609882354736`, \
0.34912997484207153`, -0.8041211366653442`, -0.10923010110855103`, \
0.23902353644371033`], List[-0.08455947786569595`, -0.024532098323106766`, \
0.31531572341918945`, 0.2082686871290207`, -0.7428684234619141`, \
-0.25866782665252686`, -0.23203624784946442`, 0.3596508502960205`, \
-0.37771955132484436`], List[0.513399064540863`, -0.28978872299194336`, \
0.07052686810493469`, -0.08369769901037216`, 0.2327839881181717`, \
-0.06182286515831947`, -0.10833325982093811`, -0.03743553161621094`, \
0.3942003846168518`], List[-0.08133348822593689`, 0.3058929443359375`, \
-0.22259502112865448`, -0.5297461152076721`, -0.3823282718658447`, \
-0.17310070991516113`, 0.1395619958639145`, -0.09086639434099197`, \
-0.12034841626882553`], List[0.3084975779056549`, 0.08045269548892975`, \
0.0021532014943659306`, -0.3519752323627472`, 0.27463796734809875`, \
-0.0786370113492012`, 0.8698643445968628`, -0.06235788017511368`, \
0.5998180508613586`], List[-0.05837412551045418`, -0.2656559646129608`, \
0.01709442213177681`, 0.0037399553693830967`, -0.10993218421936035`, \
0.0243239626288414`, -0.2886017858982086`, -0.2279660999774933`, \
0.05849849060177803`], List[0.05327356234192848`, -0.2737447917461395`, \
0.003780995262786746`, -0.24803178012371063`, 0.06230556592345238`, \
-0.02455543912947178`, -0.22576038539409637`, 0.06877411901950836`, \
0.14188840985298157`], List[-0.18789388239383698`, -0.08386208862066269`, \
0.30350950360298157`, -0.25951507687568665`, 0.4055745303630829`, \
0.05023087188601494`, 0.14379703998565674`, -0.40707144141197205`, \
0.27955204248428345`], List[0.37800291180610657`, -0.6050896048545837`, \
0.01453770138323307`, 0.17154021561145782`, -0.9170495271682739`, \
0.42674824595451355`, 0.20534555613994598`, -0.2677231431007385`, \
0.0037560262717306614`], List[-0.37968289852142334`, -0.477049320936203`, \
-0.6385208368301392`, 0.5015006065368652`, 0.35837939381599426`, \
-0.31814369559288025`, -0.10594674944877625`, -0.16024793684482574`, \
0.09370878338813782`], List[-0.10302981734275818`, 0.32555606961250305`, \
-0.020380273461341858`, 0.023691225796937943`, -0.2517704367637634`, \
-0.18965965509414673`, 0.2165936529636383`, -0.2958061695098877`, \
0.4279932975769043`], List[-0.19370640814304352`, -0.1658187061548233`, \
0.09978403896093369`, 0.07784608006477356`, -0.14342893660068512`, \
-0.2539879083633423`, -0.2830966114997864`, -0.09415733814239502`, \
-0.41997963190078735`], List[0.04841238632798195`, -0.029509762302041054`, \
0.6108091473579407`, -0.5336490273475647`, 0.1300397366285324`, \
-0.1699560582637787`, 0.08358840644359589`, 0.07624684274196625`, \
0.47078976035118103`], List[0.041927359998226166`, -0.36029052734375`, \
-0.16949933767318726`, 0.5252031683921814`, 0.19437755644321442`, \
0.16392606496810913`, 0.07305867969989777`, 0.29174917936325073`, \
0.0009182951762340963`], List[0.029922284185886383`, -0.19280871748924255`, \
0.036524698138237`, -0.29912301898002625`, -0.37482377886772156`, \
0.15181422233581543`, 0.139937162399292`, 0.1439560204744339`, \
0.6199225187301636`], List[0.07534495741128922`, 0.19570234417915344`, \
0.8213793039321899`, 0.1851562112569809`, -0.20703260600566864`, \
0.547758936882019`, -0.3863110840320587`, -0.2659819424152374`, \
-0.19274474680423737`], List[0.1996368169784546`, 0.1756415069103241`, \
-0.012801856733858585`, -0.71571946144104`, 0.20786060392856598`, \
0.08308102190494537`, 0.08612477779388428`, 0.003771750722080469`, \
0.688667893409729`], List[-0.34900733828544617`, -0.08538716286420822`, \
0.07444765418767929`, 0.25902897119522095`, 0.5260823369026184`, \
0.10242468118667603`, -0.09577737748622894`, -0.49911585450172424`, \
0.01821751520037651`], List[0.12145963311195374`, 0.08822529762983322`, \
-0.5276590585708618`, 0.17436815798282623`, 0.07595526427030563`, \
-0.06023672968149185`, -0.031623706221580505`, -0.19721029698848724`, \
-0.04832950606942177`], List[-0.29937660694122314`, 0.5040826201438904`, \
-0.0005601666634902358`, 0.0628974661231041`, -0.18772228062152863`, \
0.3605892062187195`, 0.33344700932502747`, 0.6796883344650269`, \
0.023562492802739143`], List[0.016374880447983742`, 0.4480959475040436`, \
-0.4528443217277527`, -0.48966261744499207`, 0.2149709314107895`, \
0.1188533827662468`, 0.5702773332595825`, 0.09492628276348114`, \
0.3623334467411041`], List[-0.2964191734790802`, -0.13964231312274933`, \
-0.3991428315639496`, 0.5534203052520752`, -0.06952809542417526`, \
0.18266330659389496`, -0.0028029666282236576`, 0.7187694907188416`, \
-0.256944864988327`], List[0.07869593054056168`, 0.0037951970007270575`, \
0.26091790199279785`, -0.0858110710978508`, -0.28619813919067383`, \
0.38958969712257385`, -0.43199241161346436`, -0.2136356681585312`, \
0.23187033832073212`], List[0.6496050357818604`, 0.3247295320034027`, \
0.4105420410633087`, 0.39246076345443726`, 0.7708675265312195`, \
0.023928536102175713`, -0.026677774265408516`, 0.30314597487449646`, \
-0.19687074422836304`], List[-0.007964256219565868`, -0.09005565941333771`, \
-0.13424956798553467`, 0.027534790337085724`, 0.28929463028907776`, \
-0.004933161661028862`, 0.5326501131057739`, 0.15891297161579132`, \
-0.6966797113418579`], List[-0.08133985102176666`, 0.3941076695919037`, \
-0.15453429520130157`, -0.5932101607322693`, 0.34571993350982666`, \
0.5475886464118958`, 0.8791981935501099`, 0.7005172967910767`, \
0.7883008122444153`], List[0.44733256101608276`, -0.24141563475131989`, \
-0.06415511667728424`, -0.6459012031555176`, 0.4955042004585266`, \
-0.1788315773010254`, -0.1988784521818161`, -0.09203624725341797`, \
-0.7784431576728821`], List[-0.19846613705158234`, -0.2121790498495102`, \
0.2957253158092499`, -0.10369091480970383`, -0.0592663399875164`, \
0.4216597080230713`, -0.3219279944896698`, 0.2615300714969635`, \
0.45833420753479004`], List[-0.23948687314987183`, -0.11630275100469589`, \
-0.2120644450187683`, -0.2817501723766327`, -0.004062260035425425`, \
-0.5971055030822754`, -0.18426978588104248`, -0.3956587016582489`, \
0.04064249247312546`], List[0.5950467586517334`, -0.3653585910797119`, \
-0.27703505754470825`, 0.14172329008579254`, -0.12145133316516876`, \
0.1263512372970581`, -0.6250767707824707`, 0.4033346474170685`, \
-0.13105075061321259`], List[-0.22752541303634644`, 0.029156355187296867`, \
-0.22030916810035706`, -0.09984365850687027`, -0.2049245834350586`, \
0.036960337311029434`, 0.2856332063674927`, 0.18322110176086426`, \
-0.2581981122493744`], List[0.06368806213140488`, 0.2374972552061081`, \
0.17656727135181427`, -0.16103196144104004`, 0.7223507165908813`, \
-0.03246800974011421`, -0.34847864508628845`, 0.3080858886241913`, \
0.3507067561149597`], List[-0.37783095240592957`, 0.1589278280735016`, \
0.019960718229413033`, 0.3943537175655365`, -0.03464667126536369`, \
0.11630609631538391`, -0.21194681525230408`, 0.3474021852016449`, \
0.3460320234298706`], List[0.11345788836479187`, -0.29978713393211365`, \
0.5586828589439392`, -0.18951687216758728`, -0.2202049344778061`, \
-0.5374675989151001`, -0.021253732964396477`, -0.049779023975133896`, \
-0.06891293823719025`], List[0.1656789481639862`, 0.008029182441532612`, \
0.004206680692732334`, 0.5150996446609497`, -0.10402830690145493`, \
-0.09739168733358383`, -0.041434623301029205`, -0.0573817640542984`, \
-0.23188842833042145`], List[-0.13572221994400024`, 0.2712044417858124`, \
-0.2987896502017975`, 0.20320051908493042`, -0.5568735599517822`, \
0.006558898836374283`, 0.28195279836654663`, -0.19625809788703918`, \
-0.519520103931427`], List[-0.0867348238825798`, -0.25038081407546997`, \
-0.2019965499639511`, 0.4550168812274933`, 0.402818500995636`, \
-0.5190525054931641`, -0.23195363581180573`, 0.21201640367507935`, \
-0.030325179919600487`], List[0.2429981827735901`, -0.1250923126935959`, \
-0.05108584463596344`, 0.03404320403933525`, -0.5160472989082336`, \
0.30912327766418457`, -0.5094493627548218`, 0.0385567769408226`, \
-0.21814216673374176`], List[-0.35947951674461365`, -0.1604236513376236`, \
0.0996348187327385`, 0.5483320951461792`, -0.03437819331884384`, \
0.009196917526423931`, 0.17572011053562164`, -0.3546849191188812`, \
0.5273112654685974`], List[-0.09152204543352127`, 0.31768813729286194`, \
-0.14887136220932007`, 0.09515384584665298`, 0.3598482012748718`, \
0.09621994197368622`, 0.34684380888938904`, 0.2993508577346802`, \
0.09623733907938004`], List[-0.03271199390292168`, -0.10537983477115631`, \
-0.06507682800292969`, -0.0651918575167656`, 0.26502394676208496`, \
0.6356333494186401`, -0.008610018528997898`, 0.544100284576416`, \
-0.018944919109344482`], List[-0.06308135390281677`, -0.08656999468803406`, \
0.1512584537267685`, -0.5012490749359131`, -0.04163763299584389`, \
0.08147362619638443`, -0.4592985510826111`, -0.011060184799134731`, \
-0.046756722033023834`], List[0.6993705034255981`, 0.11156374961137772`, \
0.17311590909957886`, -0.038341373205184937`, 0.13065212965011597`, \
-0.172051802277565`, -0.1784030944108963`, 0.006835562642663717`, \
-0.21315184235572815`], List[0.24346709251403809`, -0.29075419902801514`, \
0.4828173518180847`, -0.07564429938793182`, -0.05805511027574539`, \
-0.6393919587135315`, -0.04512730985879898`, 0.16108562052249908`, \
0.2261369377374649`], List[0.012057618238031864`, 0.1586926132440567`, \
0.4277288615703583`, 0.012339344248175621`, -0.0964287742972374`, \
0.23111392557621002`, 0.05554140731692314`, 0.7515929937362671`, \
-0.5402078032493591`], List[0.3436395823955536`, -0.37779131531715393`, \
0.37584877014160156`, 0.28336265683174133`, -0.21780510246753693`, \
-0.030359188094735146`, -0.40291082859039307`, -0.013694602996110916`, \
-0.24009257555007935`], List[0.20877988636493683`, -0.0057547008618712425`, \
0.11838492751121521`, 0.30117204785346985`, 0.5772191286087036`, \
0.2165612131357193`, 0.203219935297966`, 0.5351128578186035`, \
0.02033594623208046`], List[-0.2678607404232025`, -0.0958322212100029`, \
0.565859317779541`, 0.30129218101501465`, 0.18115465342998505`, \
-0.47413507103919983`, -0.16503487527370453`, 0.36925798654556274`, \
0.224075049161911`], List[-0.39164403080940247`, 0.38879284262657166`, \
0.6109297275543213`, -0.014155513606965542`, -0.17553424835205078`, \
-0.6990113854408264`, 0.2298184335231781`, -0.6051162481307983`, \
-0.11598522961139679`], List[-0.25913533568382263`, 0.44208937883377075`, \
-0.39507198333740234`, 0.2348666489124298`, 0.17508171498775482`, \
0.24961228668689728`, 0.4024421274662018`, 0.3914923071861267`, \
-0.22119742631912231`], List[-0.6515596508979797`, 0.13192275166511536`, \
-0.22096556425094604`, -0.16294033825397491`, -0.22815421223640442`, \
-0.36087894439697266`, 0.003016421338543296`, 0.12803375720977783`, \
0.4279095232486725`], List[0.9342473149299622`, 0.41675129532814026`, \
0.27935078740119934`, -0.12481070309877396`, 0.07047680765390396`, \
0.6377807855606079`, 0.45867082476615906`, 0.05094962939620018`, \
-0.15966808795928955`], List[0.5137415528297424`, -0.05635056644678116`, \
-0.09681291878223419`, -0.12020998448133469`, 0.33463814854621887`, \
-0.44864973425865173`, -0.4670730531215668`, 0.022089192643761635`, \
0.03985021263360977`], List[0.4945376217365265`, 0.2686857581138611`, \
0.02619694359600544`, 0.09316994994878769`, -0.5147454738616943`, \
0.00003194186501787044`, 0.4488053619861603`, 0.029475048184394836`, \
0.4165897071361542`], List[0.10192635655403137`, 0.16523775458335876`, \
-0.3649407923221588`, -0.28525254130363464`, -0.4374057352542877`, \
0.11609647423028946`, 0.1119190976023674`, -0.18035545945167542`, \
-0.39385202527046204`], List[0.008347583934664726`, -0.030875926837325096`, \
-0.40197283029556274`, 0.35966363549232483`, -0.39540615677833557`, \
0.7158137559890747`, 0.02473270520567894`, -0.04938812181353569`, \
-0.30092036724090576`], List[-0.11759591847658157`, -0.20903363823890686`, \
-0.5148555636405945`, 0.17817626893520355`, -0.27291759848594666`, \
-0.24484644830226898`, -0.18339672684669495`, 0.4365241825580597`, \
0.34503376483917236`], List[-0.27016785740852356`, -0.3032154440879822`, \
0.14557714760303497`, -0.004026204813271761`, -0.2042412906885147`, \
-0.05541543290019035`, -0.09007949382066727`, -0.3386784791946411`, \
0.2163616418838501`], List[-0.25512051582336426`, -0.555943489074707`, \
0.2271685004234314`, 0.002664665225893259`, -0.028991980478167534`, \
0.33735859394073486`, -0.01685941591858864`, 0.06785374134778976`, \
0.12115045636892319`], List[0.19114458560943604`, -0.26101598143577576`, \
0.1306922882795334`, -0.2045592963695526`, -0.5453455448150635`, \
-0.23657923936843872`, -0.07316028326749802`, 0.44358763098716736`, \
0.5190718173980713`], List[0.28929367661476135`, -0.04139848053455353`, \
0.4321828782558441`, 0.05757157504558563`, -0.7157338261604309`, \
-0.6733927726745605`, 0.2062457650899887`, -0.07919652760028839`, \
-0.034575559198856354`], List[-0.17058050632476807`, -0.47358596324920654`, \
-0.5377767086029053`, 0.2026347517967224`, 0.27578452229499817`, \
-0.5120897889137268`, -0.7782192230224609`, -0.22768142819404602`, \
0.2469194233417511`], List[0.3176695704460144`, 0.27257832884788513`, \
-0.08534102141857147`, -0.5650151371955872`, -0.05241360887885094`, \
0.3704909682273865`, -0.17098914086818695`, -0.15058884024620056`, \
0.19686639308929443`], List[0.44953909516334534`, 0.2989118993282318`, \
0.17048557102680206`, -0.45194628834724426`, 0.3830479681491852`, \
-0.03288361057639122`, -0.5535257458686829`, -0.15517595410346985`, \
-0.18686699867248535`], List[0.34880876541137695`, -0.39536798000335693`, \
-0.10788843035697937`, -0.2720208168029785`, 0.010240682400763035`, \
-0.067329540848732`, -0.02201654203236103`, 0.19047990441322327`, \
0.11101661622524261`], List[-0.15041881799697876`, 0.4893346130847931`, \
0.30397912859916687`, 0.36038267612457275`, -0.06319575756788254`, \
0.07138068974018097`, 0.21132026612758636`, 0.6988100409507751`, \
0.049500755965709686`], List[-0.09202887117862701`, -0.22389046847820282`, \
0.06327538192272186`, -0.01170277502387762`, 0.4770478904247284`, \
-0.33844342827796936`, 0.28185132145881653`, -0.517094612121582`, \
0.06286593526601791`], List[-0.33838316798210144`, -0.056538816541433334`, \
0.05688149109482765`, 0.822517454624176`, 0.6388998627662659`, \
-0.9710853695869446`, -0.01693742349743843`, -0.12618644535541534`, \
-0.02343815751373768`], List[-0.17048659920692444`, -0.19733409583568573`, \
-0.5485324263572693`, 0.8215819597244263`, 0.12712737917900085`, \
-0.9577258229255676`, 0.3032202124595642`, 0.2738291323184967`, \
-0.2985136806964874`], List[-0.3545224666595459`, 0.45004957914352417`, \
-0.6168292164802551`, 0.15135636925697327`, 0.6445160508155823`, \
0.4037705957889557`, 0.3797319829463959`, -0.4245952069759369`, \
0.34834787249565125`], List[-0.2755165994167328`, -0.27297553420066833`, \
-0.44510653614997864`, -0.23024488985538483`, 0.1991884708404541`, \
-0.011666926555335522`, 0.3439676761627197`, 0.12889574468135834`, \
-0.32843124866485596`], List[1.135640263557434`, -0.2896031439304352`, \
-0.5909157395362854`, 0.2681869864463806`, -0.07719293236732483`, \
0.025726143270730972`, -0.4422725439071655`, 0.08118036389350891`, \
0.4022643268108368`], List[0.2895057499408722`, 0.49109306931495667`, \
-0.26828521490097046`, 0.22581180930137634`, -0.23162707686424255`, \
0.13656796514987946`, 0.4786456227302551`, -0.18079617619514465`, \
-0.751209557056427`], List[-0.13664263486862183`, -0.4362390637397766`, \
-0.08726069331169128`, 0.37119027972221375`, 0.4290711581707001`, \
-0.12117315083742142`, 0.16586771607398987`, -0.046279046684503555`, \
-0.041426774114370346`], List[0.32527920603752136`, -0.10341030359268188`, \
-0.5999037623405457`, -0.40323036909103394`, -0.5170480608940125`, \
-0.03897251933813095`, 0.026844944804906845`, 0.027356065809726715`, \
-0.07485645264387131`], List[-0.16217467188835144`, 0.45573607087135315`, \
-0.02746248058974743`, -0.02064630389213562`, 0.3925214111804962`, \
0.5437646508216858`, 0.3017883598804474`, 0.4940774440765381`, \
-1.1180137395858765`], List[0.13170428574085236`, 0.3766573667526245`, \
0.29200467467308044`, -0.44970521330833435`, 0.14408665895462036`, \
0.18625302612781525`, -0.16104869544506073`, 0.40859904885292053`, \
0.04328501224517822`], List[0.3922278881072998`, 0.34273743629455566`, \
0.23769144713878632`, 0.27898475527763367`, -0.1316114366054535`, \
-0.19414347410202026`, -0.12186639755964279`, 0.09938866645097733`, \
0.8567876815795898`], List[-0.002291486132889986`, 0.4477890133857727`, \
0.15745295584201813`, -0.0399809256196022`, 0.12120793014764786`, \
0.08749629557132721`, -0.1592520922422409`, 0.3721342980861664`, \
0.029020575806498528`], List[-0.31602802872657776`, 0.6225473284721375`, \
-0.8563281297683716`, 0.15810993313789368`, -0.0016780529404059052`, \
0.794868528842926`, -0.15702517330646515`, 0.40660157799720764`, \
-0.2862715721130371`], List[0.26271018385887146`, 0.0594397597014904`, \
-0.13240884244441986`, -0.17784692347049713`, -0.43241673707962036`, \
-0.03736482933163643`, -0.8969855904579163`, 0.2866676449775696`, \
0.5164644718170166`], List[0.1954335719347`, 0.36788269877433777`, \
-0.3774826228618622`, -0.6052183508872986`, 0.03395292907953262`, \
0.4752822816371918`, -0.12883968651294708`, -0.15887951850891113`, \
-0.013051191344857216`], List[-0.46760788559913635`, 0.3027907609939575`, \
-0.10701248049736023`, -0.42631059885025024`, 0.2369767278432846`, \
0.33754971623420715`, -0.05194045975804329`, 0.034607067704200745`, \
-0.35143211483955383`], List[0.33229339122772217`, -0.531445324420929`, \
-0.5026278495788574`, 0.2766217887401581`, -0.07150352001190186`, \
-0.19835497438907623`, -0.07548996061086655`, 0.9669865369796753`, \
-0.3782917559146881`], List[0.2801341712474823`, 0.24035079777240753`, \
-0.37582266330718994`, 0.1722068041563034`, -0.017151638865470886`, \
0.07818286120891571`, 0.3524913489818573`, 0.19016100466251373`, \
-0.31985175609588623`], List[0.26734471321105957`, 0.498241126537323`, \
0.2291247546672821`, -0.07707913219928741`, -0.0830126404762268`, \
-0.45659130811691284`, -0.10140009224414825`, 0.26879164576530457`, \
-0.09830139577388763`], List[-0.5061553120613098`, 0.0022589995060116053`, \
0.15630897879600525`, 0.27074459195137024`, -0.34838831424713135`, \
0.05315786600112915`, 0.18877987563610077`, -0.6017982363700867`, \
-0.296688437461853`], List[0.4245492219924927`, -0.07231033593416214`, \
-0.11533338576555252`, -0.39670872688293457`, 0.08166976273059845`, \
-0.22897163033485413`, -0.0373113639652729`, 0.2793227434158325`, \
-0.18566620349884033`], List[0.18960785865783691`, 0.3458932042121887`, \
-0.2384927123785019`, 0.5007370710372925`, 0.3138138949871063`, \
0.5495890378952026`, -0.4541100263595581`, 0.03354278951883316`, \
0.13985420763492584`], List[-0.04570317268371582`, 0.2460070252418518`, \
0.1416606456041336`, -0.12405139207839966`, 0.5932475328445435`, \
0.22795470058918`, 0.2934301197528839`, 0.0801498144865036`, \
0.3518645167350769`], List[0.209067240357399`, 0.3724527359008789`, \
-0.0009560862672515213`, 0.20147334039211273`, 0.3090948760509491`, \
-0.11240733414888382`, -0.32074207067489624`, -0.03590240702033043`, \
0.3936568796634674`], List[0.7877712249755859`, -0.059760406613349915`, \
0.08904169499874115`, -0.5875014066696167`, -0.010458369739353657`, \
0.2959323227405548`, -0.11536931246519089`, 0.21756604313850403`, \
0.06128077208995819`], List[0.4172285795211792`, -0.8073537945747375`, \
-0.024488475173711777`, 0.20084349811077118`, 0.011983875185251236`, \
-0.40770018100738525`, 0.19019122421741486`, 0.38737472891807556`, \
-0.09086863696575165`], List[0.405749648809433`, -0.22014188766479492`, \
0.09302785992622375`, 0.2780304253101349`, -0.09004358947277069`, \
0.14884944260120392`, 0.26140567660331726`, -0.06053468585014343`, \
-0.16611996293067932`], List[-0.4863741397857666`, 0.11291444301605225`, \
-0.22080586850643158`, -0.01880413107573986`, -0.26949167251586914`, \
0.1406985968351364`, -0.2938636243343353`, -0.04769033193588257`, \
0.15379184484481812`], List[-0.4810469448566437`, 0.42790284752845764`, \
0.07543817907571793`, 0.03599093109369278`, 0.30870798230171204`, \
0.05559595301747322`, -0.5172789096832275`, 0.07982054352760315`, \
0.16850009560585022`], List[0.7302711606025696`, -0.08916133642196655`, \
0.15067806839942932`, 0.12793047726154327`, -0.023067301139235497`, \
-0.48279643058776855`, -0.43929171562194824`, 0.505054771900177`, \
-0.08115485310554504`], List[0.20874284207820892`, 0.05076679587364197`, \
0.12299265712499619`, -0.7217181324958801`, -0.019509993493556976`, \
0.15758173167705536`, -0.0345248319208622`, 0.11166226863861084`, \
0.18876558542251587`], List[-0.12010371685028076`, 0.321214884519577`, \
-0.02837139181792736`, 0.3201087713241577`, -0.5156776309013367`, \
0.18898101150989532`, 0.9442706108093262`, -0.17375333607196808`, \
0.07108709216117859`], List[-0.1421143263578415`, 0.5067741274833679`, \
-0.0407596230506897`, 0.11688807606697083`, -0.36251118779182434`, \
0.3562803864479065`, 0.5460411310195923`, 0.043691910803318024`, \
-0.22718296945095062`], List[-0.17141854763031006`, 0.2273387759923935`, \
0.1747654527425766`, -0.08068513125181198`, 0.03283100202679634`, \
0.20663534104824066`, -0.21035172045230865`, 0.16613076627254486`, \
0.1552112102508545`], List[-0.22965364158153534`, 0.06731626391410828`, \
0.18348199129104614`, -0.2303047925233841`, 0.47871899604797363`, \
0.10031872987747192`, -0.14089933037757874`, -0.4233468770980835`, \
-0.0763261541724205`], List[0.17403720319271088`, -0.25425028800964355`, \
0.3281426429748535`, 0.05471377074718475`, -0.12443040311336517`, \
-0.4766627252101898`, 0.19267739355564117`, -0.1924499124288559`, \
0.7083666920661926`], List[-0.14741477370262146`, 0.3355497717857361`, \
-0.18246543407440186`, -0.7805359363555908`, 0.2118496596813202`, \
0.1836565136909485`, 0.49963635206222534`, 0.4303573668003082`, \
-0.05495163053274155`], List[0.1142817884683609`, 0.2165672928094864`, \
-0.1509932428598404`, -0.23356449604034424`, -0.6533068418502808`, \
-0.3126901388168335`, 0.4356204569339752`, -0.1037573292851448`, \
-0.17263923585414886`], List[0.10615052282810211`, -0.13845327496528625`, \
0.11688720434904099`, 0.3744066059589386`, -0.06057777628302574`, \
-0.001352898427285254`, -0.4351048171520233`, 0.29401692748069763`, \
0.24493823945522308`], List[-0.11228270828723907`, -0.11752118170261383`, \
-0.24018336832523346`, 0.20602847635746002`, 0.479596883058548`, \
0.15289942920207977`, 0.05293618142604828`, -0.1896096169948578`, \
-0.1874532401561737`], List[-0.28547245264053345`, 0.06183011829853058`, \
0.056735970079898834`, -0.22261790931224823`, -0.09154044091701508`, \
0.11074430495500565`, 0.7220212817192078`, -0.2596607506275177`, \
-0.22777961194515228`], List[-0.42526477575302124`, 0.5192554593086243`, \
-0.420825719833374`, -0.0542169027030468`, 0.18017897009849548`, \
0.22453317046165466`, -0.24235183000564575`, 0.21841475367546082`, \
-0.001013101078569889`], List[0.14115308225154877`, -0.012464858591556549`, \
0.006429685279726982`, -0.08338285982608795`, 0.6265051364898682`, \
-0.22742202877998352`, 0.1928739994764328`, 0.17434197664260864`, \
0.3389594256877899`], List[-0.22005556523799896`, -0.14710108935832977`, \
-0.13667117059230804`, 0.09441990405321121`, 0.6029067635536194`, \
0.4839520752429962`, -0.07971476018428802`, -0.020714128389954567`, \
0.16000643372535706`], List[-0.260475754737854`, 0.04291832074522972`, \
0.06834647804498672`, -0.044275157153606415`, 0.2958850562572479`, \
0.26289859414100647`, -0.29503950476646423`, -0.3533533215522766`, \
0.5557618141174316`], List[-0.4249122440814972`, -0.02453320100903511`, \
0.017422199249267578`, -0.38932114839553833`, -0.6915526390075684`, \
0.6158058643341064`, 0.7428083419799805`, -0.07605688273906708`, \
-0.08732659369707108`], List[-0.16582734882831573`, -0.07984234392642975`, \
-0.2491479367017746`, 0.38583648204803467`, 0.008080440573394299`, \
0.0248081237077713`, -0.08841446787118912`, -0.14144188165664673`, \
0.2815594971179962`], List[0.4693391025066376`, 0.34544867277145386`, \
0.09093966335058212`, 0.9134631156921387`, -0.3037063479423523`, \
0.20491115748882294`, -0.1763468086719513`, 0.0406094454228878`, \
0.021436158567667007`], List[-0.05411667004227638`, -0.08556566387414932`, \
-0.5068187713623047`, 0.4829022288322449`, -0.32183340191841125`, \
-0.002731087850406766`, 0.31877216696739197`, 0.2787071466445923`, \
-0.11707715690135956`], List[-0.5642439723014832`, 0.9004257321357727`, \
0.13841429352760315`, -0.11181846261024475`, -0.09364678710699081`, \
0.12097259610891342`, -0.3596777021884918`, -0.23452700674533844`, \
0.47726136445999146`], List[0.15933667123317719`, -0.5740842223167419`, \
0.1445559859275818`, 0.2009049504995346`, -0.6382194757461548`, \
-0.03401389345526695`, 0.4749314785003662`, -0.12053003907203674`, \
-0.07413347065448761`], List[-0.5170167088508606`, -0.20557083189487457`, \
-0.35917800664901733`, 0.16441187262535095`, -0.03164123743772507`, \
0.02816860005259514`, 0.20169007778167725`, 0.09221015125513077`, \
0.18106845021247864`], List[0.10130499303340912`, 0.090415358543396`, \
0.24919496476650238`, -0.21016179025173187`, 0.2283778339624405`, \
-0.27368810772895813`, -0.22004079818725586`, -0.2999582290649414`, \
0.021466970443725586`], List[-0.12525679171085358`, -0.1539241075515747`, \
-0.33230555057525635`, 0.0008387343259528279`, 0.2991461157798767`, \
0.3911428451538086`, 0.0949469804763794`, 0.04931199550628662`, \
-0.006370131392031908`], List[0.20528505742549896`, 0.30781155824661255`, \
-0.1751159280538559`, -0.2190442979335785`, -0.6560042500495911`, \
0.1538417935371399`, 0.5645711421966553`, -0.6282116770744324`, \
-0.36329326033592224`], List[0.7639521360397339`, 0.23927178978919983`, \
0.0008147930493578315`, -0.08375809341669083`, 0.009979203343391418`, \
0.2425236999988556`, -0.3833742141723633`, -0.024158474057912827`, \
0.3170769512653351`], List[-0.5365582704544067`, 0.014620231464505196`, \
-0.08051476627588272`, -0.3194691240787506`, -0.028943659737706184`, \
-0.6462967395782471`, 0.2136247456073761`, 0.18644101917743683`, \
0.7223593592643738`], List[-0.07527545839548111`, -0.6046292185783386`, \
-0.17468030750751495`, 0.06678745895624161`, -0.13348864018917084`, \
-0.6217470765113831`, -0.16058361530303955`, -0.40546488761901855`, \
-0.3769676387310028`]], \\\"Real32\\\"]]], Rule[\\\"Version\\\", List[12.`, \
0]], Rule[\\\"ID\\\", 7204649762786858506]]], \
MachineLearning`MLProcessor[\\\"FirstValues\\\", \
Association[Rule[\\\"Info\\\", Association[Rule[\\\"Weight\\\", 1], \
Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]], Rule[\\\"Key\\\", \\\"f1\\\"], \
Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], Rule[\\\"Missing\\\", \
\\\"Allowed\\\"]]]]], Rule[\\\"Invertibility\\\", \\\"Impossible\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], Rule[\\\"Method\\\", \
\\\"NearestNeighbors\\\"], Rule[\\\"PostProcessor\\\", \
MachineLearning`MLProcessor[\\\"Identity\\\"]], Rule[\\\"Options\\\", \
Association[Rule[\\\"NeighborsNumber\\\", Association[Rule[\\\"Value\\\", \
50], Rule[\\\"Options\\\", Association[]]]], Rule[\\\"DistributionSmoothing\\\
\", Association[Rule[\\\"Value\\\", 0.5`], Rule[\\\"Options\\\", \
Association[]]]], Rule[\\\"NearestMethod\\\", Association[Rule[\\\"Value\\\", \
\\\"KDtree\\\"], Rule[\\\"Options\\\", Association[]]]]]]]], \
Rule[\\\"TrainingInformation\\\", Association[Rule[\\\"PanelCell\\\", \
CellObject[201681]], Rule[\\\"TrainingFunction\\\", Classify], \
Rule[\\\"EMIterations\\\", Missing[\\\"KeyAbsent\\\", \\\"EMIterations\\\"]], \
Rule[\\\"ProcessorEntropyShift\\\", 0], Rule[\\\"PreprocessingTime\\\", \
0.1200265`6.530822135653541], Rule[\\\"LossName\\\", \
\\\"MeanCrossEntropy\\\"], Rule[\\\"BestModelInformation\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"14\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]], Rule[\\\"Configurations\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"10\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]], Rule[\\\"MaxTrainingSize\\\", 137], \
Rule[\\\"PreprocessorEvaluationTime\\\", 4.6485139580686`3.*^-6], \
Rule[\\\"PreprocessorMemory\\\", 43368], Rule[\\\"InputDimension\\\", 1], \
Rule[\\\"OutputDimension\\\", 1], Rule[\\\"BaselineLogProbability\\\", \
-1.0717287302022056`], Rule[\\\"VariableBudget\\\", True], \
Rule[\\\"CheckpointingInfo\\\", Association[Rule[\\\"Checkpointing\\\", \
False]]], Rule[\\\"UserStop\\\", False], Rule[\\\"NaturalStop\\\", True], \
Rule[\\\"AbortStop\\\", False], Rule[\\\"LastReportingTime\\\", \
3.7710698432335728`17.32903956512167*^9], Rule[\\\"RoundPartitioning\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"2\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]]]], Rule[\\\"Log\\\", Association[Rule[\\\"Example\\\", \
MachineLearning`MLDataset[Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1], \
Rule[\\\"Values\\\", List[\\\"For the function \
W(x)=ln(1+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)) and \
the point x=1, find the secants at point Q and the tangenet line\\\"]], Rule[\
\\\"ID\\\", 4654099653526711133]]]], Association[Rule[\\\"ExampleNumber\\\", \
1], Rule[\\\"ExampleWeights\\\", 1], Rule[\\\"LogDensityRatios\\\", 0], Rule[\
\\\"RawExample\\\", False]]]], Rule[\\\"TrainingTime\\\", \
1.1817953044690073`], Rule[\\\"MaxTrainingMemory\\\", 1446536], \
Rule[\\\"DataMemory\\\", 14552], Rule[\\\"FunctionMemory\\\", 230504], \
Rule[\\\"LanguageVersion\\\", List[12.`, 0]], Rule[\\\"Date\\\", \
DateObject[List[2019, 7, 2, 15, 24, 3.397786`8.283771003554588], \
\\\"Instant\\\", \\\"Gregorian\\\", -4.`]], Rule[\\\"ProcessorCount\\\", 2], \
Rule[\\\"ProcessorType\\\", \\\"x86-64\\\"], Rule[\\\"OperatingSystem\\\", \\\
\"Windows\\\"], Rule[\\\"SystemWordLength\\\", 64], Rule[\\\"Evaluations\\\", \
List[]]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]]\\) should be a rule, a list of rules, or an \
association.\"",2,255,67,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7710862057331266`*^9, {3.7710863743998404`*^9, 3.7710863783357706`*^9}, 
   3.7710887341244173`*^9},
 CellLabel->
  "During evaluation of \
In[227]:=",ExpressionUUID->"f292ed84-5f1a-4523-8b56-e4765be64c1e"],

Cell[BoxData[
 TemplateBox[{
  "Classify","bdfmt",
   "\"Argument \
\\!\\(\\*InterpretationBox[RowBox[{TagBox[\\\"ClassifierFunction\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquarePlusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Nominal\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
\\\"\\\\\\\"algebra 1\\\\\\\"\\\", \\\"\\\\\\\"algebra 2\\\\\\\"\\\", \
\\\"\\\\\\\"calc\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquareMinusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Nominal\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
\\\"\\\\\\\"algebra 1\\\\\\\"\\\", \\\"\\\\\\\"algebra 2\\\\\\\"\\\", \
\\\"\\\\\\\"calc\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Method: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\
\"\\\\\\\"NearestNeighbors\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Number of training examples: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"137\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`open$$], \
Rule[ImageSize, Automatic]]], \\\"SummaryPanel\\\"], \
RuleDelayed[DynamicModuleValues, List[]]], \\\"]\\\"}], \
ClassifierFunction[Association[Rule[\\\"ExampleNumber\\\", 137], \
Rule[\\\"ClassNumber\\\", 3], Rule[\\\"Input\\\", \
Association[Rule[\\\"Preprocessor\\\", \
MachineLearning`MLProcessor[\\\"ToMLDataset\\\", Association[Rule[\\\"Input\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\
\"]]]]], Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Preprocessor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"List\\\"], \
MachineLearning`MLProcessor[\\\"WrapMLDataset\\\", \
Association[Rule[\\\"FeatureTypes\\\", List[\\\"Nominal\\\"]], \
Rule[\\\"FeatureKeys\\\", List[\\\"f1\\\"]], Rule[\\\"FeatureWeights\\\", \
Automatic], Rule[\\\"ExampleWeights\\\", Automatic], Rule[\\\"RawExample\\\", \
Missing[\\\"KeyAbsent\\\", \\\"RawExample\\\"]]]]]]]]], \
Rule[\\\"ScalarFeature\\\", True], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"Processor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"NominalVector\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Processors\\\", List[MachineLearning`MLProcessor[\\\"ToVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 1537627216228573037]]], \
MachineLearning`MLProcessor[\\\"ImputeMissing\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Imputed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"VectorLength\\\", 1], Rule[\\\"Output\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \
\\\"NominalVector\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Type\\\", \
\\\"NominalVector\\\"], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 4026204838636604962]]], \
MachineLearning`MLProcessor[\\\"IntegerEncodeNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[\\\"2+3\\\", 1], Rule[\\\"2/3 x+3 =15\\\", 2], \
Rule[\\\"-3(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)-2x+7)\\\", 3], Rule[\\\"5(2x+4)\\\", 4], \
Rule[\\\"-(5\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)-8)\\\
\", 5], Rule[\\\"8x-2=22\\\", 6], Rule[\\\"Add 1/2 and 1/3\\\", 7], \
Rule[\\\"A salesman is paid a monthly salary of $2,300 plus 7% commission on \
his monthly sales.\\\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\\\", 8], Rule[\\\"A salesman tells you that the \
$140 earrings are already marked 20% off. What\\\\nwas the original \
price?\\\", 9], Rule[\\\"A $750 watch is on sale for 15% off. Find the sale \
price.\\\", 10], Rule[\\\"Combine 2 \
\\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)x +5 \\\\!\\\\(\\\
\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)y - 1/2 \
\\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)x\\\", 11], Rule[\
\\\"Combine like terms of 3a-6a+10a-a\\\", 12], Rule[\\\"Combine like terms \
of 3n-5\\\\!\\\\(\\\\*SuperscriptBox[\\\\(n\\\\), \\\\(\\\\(2\\\\)\\\\(\\\\\\\
\\ \\\\)\\\\)]\\\\)+6n-10+2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(n\\\\), \
\\\\(2\\\\)]\\\\)\\\", 13], Rule[\\\"Combine the like terms of 5x-10y+6z-3x\\\
\", 14], Rule[\\\"Compute  the difrence quotient for the given function\\\", \
15], Rule[\\\"Determine f (x) given that f'(x) = 6x^8 \\\\[Minus] 20x^4 + x^2 \
+ 9\\\", 16], Rule[\\\"Determine \
ln(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(4\\\\)]\\\\))\\\", 17], \
Rule[\\\"Evaluate 2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)-9 for x=-3\\\", 18], Rule[\\\"Evaluate \
a-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(b\\\\), \\\\(2\\\\)]\\\\) when a=4 and \
b=2\\\", 19], Rule[\\\"Evaluate \
f(x)=3-5x-2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) for \
the below values: f(0), f(x+h), f(6-t)\\\", 20], Rule[\\\"Evaluate \\\\!\\\\(\
\\\\*SuperscriptBox[\\\\(a\\\\), \\\\(2\\\\)]\\\\)+b when a=7 and b=1\\\", \
21], Rule[\\\"Evaluate \\\\!\\\\(\\\\*SuperscriptBox[\\\\(a\\\\), \
\\\\(2\\\\)]\\\\)-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(b\\\\), \
\\\\(2\\\\)]\\\\) when a=5 and b=3\\\", 22], Rule[\\\"Evaluate the derivative\
\\\", 23], Rule[\\\"Evaluate \\\\[Integral]z^6 + 4z^4 \\\\[Minus] z^2 dz\\\", \
24], Rule[\\\"Expand (a+b\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(3\\\\)]\\\\)\\\", 25], Rule[\\\"express 12 1/3 as an improper fraction\\\
\", 26], Rule[\\\"express 3 2/7 as an improper fraction\\\", 27], \
Rule[\\\"Express 42/5 as a mixed number\\\", 28], Rule[\\\"Express 53/9 as a \
mixed number\\\", 29], Rule[\\\"Find a perpedicular line of y=3x+2 with y \
intercept of the origin\\\", 30], Rule[\\\"Find extrema of \
f(x)=12+6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\)-\\\\!\\\
\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(3\\\\)]\\\\)\\\", 31], Rule[\\\"Find \
extrema of g(w)=tan (w)sec(w)\\\", 32], Rule[\\\"Find inverse of W (x) =  (9 \
\\\\[Minus]11x\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/5\\\\)]\\\\)\\\", 33], Rule[\\\"Find the area under the curve of |x| \
from -1 to 1\\\", 34], Rule[\\\"Find the Derivative\\\", 35], Rule[\\\"Find \
the derivative of 2 cos(x)+arccos(x)\\\", 36], Rule[\\\"Find the derivative \
of f(x)=2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(x\\\\)]\\\\)-\\\\!\\\
\\(\\\\*SuperscriptBox[\\\\(8\\\\), \\\\(x\\\\)]\\\\)\\\", 37], Rule[\\\"Find \
the derivative of g(t)=4 \\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \
\\\\(3\\\\)]\\\\)(t)-ln(t)\\\", 38], Rule[\\\"Find the derivative of \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)/\\\\!\\\\(\\\\*SuperscriptBox[\\\\(y\\\\), \
\\\\(3\\\\)]\\\\)=1\\\", 39], Rule[\\\"Find the deriviative of f (x) = \
2cos(x) \\\\[Minus] 6sec(x) + 3\\\", 40], Rule[\\\"Find the deriviative of g \
(z) =10 tan (z) \\\\[Minus] 2cot (z)\\\", 41], Rule[\\\"Find the deriviative \
of R(t)=(t+ tan(t))/(1+csc(t))\\\", 42], Rule[\\\"Find the deriviative of  \
tan (w)sec(w)\\\", 43], Rule[\\\"Find the domain of \
(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(w\\\\), \\\\(3\\\\)]\\\\)-3w+1)/(12 \
w-7)\\\", 44], Rule[\\\"Find the equation of best fit for the below listed \
data\\\", 45], Rule[\\\"Find the exact value of cos(5 \\\\[Pi]/6) without \
using a calculator\\\", 46], Rule[\\\"Find the exact value of sin(-4 \
\\\\[Pi]/3) without using a calculator\\\", 47], Rule[\\\"Find the integral\\\
\", 48], Rule[\\\"Find the inverse of f (x) = 6x +15\\\", 49], Rule[\\\"Find \
the MacLauren Expanision of z(n)= \
(z+1\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(1/2\\\\)]\\\\)/(z+4)\\\", \
50], Rule[\\\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\\\\[Pi]/4\\\", 51], Rule[\\\"Find \\\\[Integral]12 + csc(\\\\[Theta] ) \
[sin (\\\\[Theta] ) + csc(\\\\[Theta] )] d\\\\[Theta]\\\", 52], Rule[\\\"Find \
\\\\[Integral] 2cos (w) \\\\[Minus] sec(w) tan (w)dw\\\", 53], Rule[\\\"Find \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
dx \\\\[Minus]18x + 7\\\", 54], Rule[\\\"Find \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
\\\\[Minus]18\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) + 7 \
dx\\\", 55], Rule[\\\"For the function \
(2-(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(t\\\\), \
\\\\(2\\\\)]\\\\)+3\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/2\\\\)]\\\\))/(t+1), L'Hoptial's rule to find the limit as x \
approaches -1\\\", 56], Rule[\\\"For the function \
f(x)=(8-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\))/(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\
\\)-4), find the values at the below listed points and th limit as x \
aproaches 2\\\", 57], Rule[\\\"For the function \
f(x)=(8-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\))/(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\
\\)-4), use L'Hoptial's rule to find the limit as x aproaches 2\\\", 58], \
Rule[\\\"For the function f(y)= sin(y)/y find the value at the below listed \
points and the limit as y approaches 0\\\", 59], Rule[\\\"For the function \
W(x)=ln(1+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)) and \
the point x=1, find the secants at point Q and the tangenet line\\\", 60], \
Rule[\\\"Graph the inequality y<3x+4\\\", 61], Rule[\\\"Graph the parabola \
give by \\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\)+3x+2. \
Find the zeros, vertex and intercept\\\", 62], Rule[\\\"How many miutes are \
in a day?\\\", 63], Rule[\\\"Identify the property used in the equations \
below as distributive, inverse or associative\\\", 64], Rule[\\\"Is x=-8 a \
solution to 1/2x+6>3?\\\", 65], Rule[\\\"Multiply 24/3 and 27/8\\\", 66], \
Rule[\\\"Multiply 8 and 3/24\\\", 67], Rule[\\\"Plot 1.25, 2/3 and 2 on a \
number line\\\", 68], Rule[\\\"Simplify 10-(7+1)\\\", 69], Rule[\\\"Simplify \
10-7+1\\\", 70], Rule[\\\"Simplify (15-3)/(1+5)\\\", 71], Rule[\\\"Simplify \
24/(4-2\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(3\\\\)]\\\\)\\\", 72], \
Rule[\\\"Simplify (2-5\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(2\\\\)]\
\\\\)\\\", 73], Rule[\\\"Simplify \
2-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(5\\\\), \\\\(2\\\\)]\\\\)\\\", 74], \
Rule[\\\"Simplify 4+5(1+12/6\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(2\
\\\\)]\\\\)\\\", 75], Rule[\\\"Sketch the graph of \
f(x)=\\\\!\\\\(\\\\*SuperscriptBox[\\\\(3\\\\), \\\\(1 + 2  x\\\\)]\\\\)\\\", \
76], Rule[\\\"Sketch the graph of \
h(x)=8+3\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(2  t - 4\\\\)]\\\\)\\\
\", 77], Rule[\\\"Solve 3sec(4 \\\\[Minus] 9z) \\\\[Minus] 24 = 0\\\", 78], \
Rule[\\\"Solve 3(x-5)+4=10\\\", 79], Rule[\\\"Solve 3\\\\[Minus]14sin (12t + \
7) =13\\\", 80], Rule[\\\"Solve  4sin (3t ) = 2\\\", 81], Rule[\\\"Solve 4sin \
(3t ) = 2 in [0, 4\\\\[Pi]/3], 2cos(x/3) \
+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(2\\\\), \\\\(0.5\\\\)]\\\\) = 0 in \
[\\\\[Minus]7\\\\[Pi] ,7\\\\[Pi] }\\\", 82], Rule[\\\"Solve 4x-9=11\\\", 83], \
Rule[\\\"Solve 4y sec(7 y) = \\\\[Minus]21y\\\", 84], Rule[\\\"Solve and \
graph the solution to 2x-3<7\\\", 85], Rule[\\\"Solve and graph the solution \
to |3x-1|\\\\[GreaterEqual]10\\\", 86], Rule[\\\"Tommy\\\\[CloseCurlyQuote]s \
grandma gave him a $50 gift card to Toys R Us for his birthday.\\\\nSales tax \
is currently 9%. Determine the price of the most expensive toy Tommy can buy \
with\\\\nthe $50 gift card.\\\", 87], Rule[\\\"Use the chain rule to find the \
derivative of Q(t)=(3\\\\!\\\\(\\\\*SuperscriptBox[\\\\(t\\\\), \
\\\\(3\\\\)]\\\\)-4\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/2\\\\)]\\\\)\\\", 88], Rule[\\\"Use the definition of the derivative \
to find the derivative of f(x)=6\\\", 89], Rule[\\\"Use the definition of the \
derivative to find the derivative of V (t ) = 3\\\\[Minus]14t\\\", 90], Rule[\
\\\"Use the definition of the derivative to find the derivative of z(n)= \
(n+1)/(n+4)\\\", 91], Rule[\\\"Use the law of sines to find the missing side \
of this triangle\\\", 92], Rule[\\\"Use the quotient rule to find the \
derivative of z(n)= (z+1\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(1/2\\\
\\)]\\\\)/(z+4)\\\", 93], Rule[\\\"What are the discontiuities in the \
function y=(x+2)/(x+3x+2). Which are fundamental and which are \
removable?\\\", 94], Rule[\\\"What are the domain and range of \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(x\\\\)]\\\\) and ln(x)\\\", \
95], Rule[\\\"What are the domain and range of the trigonometric functions?\\\
\", 96], Rule[\\\"What is |1|\\\", 97], Rule[\\\"What is 10% of 100\\\", 98], \
Rule[\\\"What is 1+1\\\", 99], Rule[\\\"What is  1/2 + 1/3\\\", 100], Rule[\\\
\"What is 12 1/3 as an improper fraction\\\", 101], Rule[\\\"What is 2+2\\\", \
102], Rule[\\\"What is 2+3\\\", 103], Rule[\\\"What is  24/3 * 27/8\\\", \
104], Rule[\\\"What is |-30|\\\", 105], Rule[\\\"What is 3/18 in simplest \
form\\\", 106], Rule[\\\"What is 3-(-2)?\\\", 107], Rule[\\\"What is \
-3+4\\\", 108], Rule[\\\"What is 42/54 in simplest form\\\", 109], \
Rule[\\\"What is 42/5 as a mixed number\\\", 110], Rule[\\\"What is 4% of 16?\
\\\", 111], Rule[\\\"What is 53/9 as a mixed number\\\", 112], Rule[\\\"What \
is  8 * 3/24\\\", 113], Rule[\\\"What is (a+b\\\\!\\\\(\\\\*SuperscriptBox[\\\
\\()\\\\), \\\\(n\\\\)]\\\\) (Hint: What theorem is this?)\\\", 114], Rule[\\\
\"What is ln(1)?\\\", 115], Rule[\\\"What is sin(60)\\\", 116], Rule[\\\"What \
is tan(30)\\\", 117], Rule[\\\"What is the absolute value of -1?\\\", 118], \
Rule[\\\"What is the area under the curve \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(sin\\\\), \\\\(2\\\\)]\\\\)x from 0 to \
\\\\[Pi]/2\\\", 119], Rule[\\\"What is the Deriviative\\\", 120], \
Rule[\\\"What is the integral of sin(2x)?\\\", 121], Rule[\\\"What is the \
integral of x dx\\\", 122], Rule[\\\"What is the largest value for the \
missing side of this triangle\\\", 123], Rule[\\\"What is the most specific \
subset of the real numbers that -7 is a part of?\\\", 124], Rule[\\\"What is \
the next term in the series \\\", 125], Rule[\\\"What is the sum from 1 to 5 \
of a=10n+3\\\", 126], Rule[\\\"what is the sum of the geometric series from 1 \
to infinity of 9(1/10\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(n\\\\)]\\\\)?\\\", 127], Rule[\\\"What is \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
\\\\[Minus]18\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) + 7 \
dx\\\", 128], Rule[\\\"Wrie the standard form of y=3/2 x+2\\\", 129], Rule[\\\
\"Write 30 degrees in radians\\\", 130], Rule[\\\"write 3/18 in simplest form\
\\\", 131], Rule[Times[\\\"What is 3 2/7 as an improper fraction\\\", \
\\\"write 42/54 in simplest form\\\"], 132], Rule[\\\"Write slope intercept \
form for a slope of 2 and y-intercept of 12\\\", 133], Rule[\\\"Write \
\\\\[Pi]/4 in degrees\\\", 134], Rule[\\\"-x-2=12\\\", 135], Rule[Null, \
136]]]], Rule[\\\"MissingCode\\\", 0], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 8874348951581137712], Rule[\\\"Output\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]]]]]], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Imputed\\\"]]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"Preprocessor\\\", \
MachineLearning`MLProcessor[\\\"ToMLDataset\\\", Association[Rule[\\\"Input\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\
\"]]]]], Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Preprocessor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"List\\\"], \
MachineLearning`MLProcessor[\\\"WrapMLDataset\\\", \
Association[Rule[\\\"FeatureTypes\\\", List[\\\"Nominal\\\"]], \
Rule[\\\"FeatureKeys\\\", List[\\\"f1\\\"]], Rule[\\\"FeatureWeights\\\", \
Automatic], Rule[\\\"ExampleWeights\\\", Automatic], Rule[\\\"RawExample\\\", \
Missing[\\\"KeyAbsent\\\", \\\"RawExample\\\"]]]]]]]]], \
Rule[\\\"ScalarFeature\\\", True], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"Processor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"ToVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 7740907413418953510]]], \
MachineLearning`MLProcessor[\\\"IntegerEncodeNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[\\\"algebra 1\\\", 1], Rule[\\\"algebra 2\\\", 2], \
Rule[\\\"calc\\\", 3]]]], Rule[\\\"MissingCode\\\", 0], Rule[\\\"Version\\\", \
List[12.`, 0]], Rule[\\\"ID\\\", 3923291764372626615], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]]]], \
MachineLearning`MLProcessor[\\\"FromVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", List[3]]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", \
List[12.`, 0]], Rule[\\\"ID\\\", 689381485439722164]]], \
MachineLearning`MLProcessor[\\\"FirstValues\\\", \
Association[Rule[\\\"Info\\\", Association[Rule[\\\"Type\\\", \
\\\"Nominal\\\"], Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", 3]]], \
Rule[\\\"Key\\\", \\\"f1\\\"], Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]]], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"ProbabilityPostprocessor\\\", Identity], Rule[\\\"Name\\\", \
\\\"class\\\"], Rule[\\\"Marginal\\\", Association[Rule[\\\"algebra 1\\\", \
0.37142857142857144`], Rule[\\\"algebra 2\\\", 0.22857142857142856`], Rule[\\\
\"calc\\\", 0.39999999999999997`]]]]], Rule[\\\"Prior\\\", Automatic], \
Rule[\\\"Utility\\\", SparseArray[Automatic, List[3, 4], 0.`, List[1, \
List[List[0, 1, 2, 3], List[List[2], List[3], List[4]]], List[1.`, 1.`, \
1.`]]]], Rule[\\\"Threshold\\\", 0], Rule[\\\"TieBreaker\\\", RandomChoice], \
Rule[\\\"PerformanceGoal\\\", Automatic], Rule[\\\"BatchProcessing\\\", \
Automatic], Rule[\\\"Model\\\", Association[Rule[\\\"NeighborsFunction\\\", \
MachineLearning`PackageScope`NeighborsFunction[\\\"Nearest\\\", \
NearestFunction[Hold[Nearest[Rule[List[List[0.20874287902662356`, \
0.05076760013054465`, 0.12299217336751644`, -0.7217178113767901`, \
-0.01950969285105098`, 0.15758229720049532`, -0.03452407136774974`, \
0.11166155823546944`, 0.18876632146856745`], List[-0.3594795130895579`, \
-0.16042385138793877`, 0.09963466370799849`, 0.5483324399248775`, \
-0.034378135355781936`, 0.009196829528893545`, 0.17572011803586657`, \
-0.3546858694223344`, 0.5273107984733745`], List[-0.5365576313720708`, \
0.01462031426383527`, -0.08051531640664132`, -0.31946909538319324`, \
-0.02894369615382801`, -0.6462972209561233`, 0.21362509803048088`, \
0.1864404763153632`, 0.7223601241934188`], List[0.11428169955115125`, \
0.2165675671799198`, -0.15099286041902274`, -0.23356450220118308`, \
-0.653306347595659`, -0.31269089816647233`, 0.4356209169626309`, \
-0.1037569526941192`, -0.1726383474985441`], List[0.09076148083722635`, \
-0.7724130124795144`, -0.3633984414607187`, 0.44055528880320455`, \
-0.6539328931879371`, -0.4185083086349062`, -0.12365704376200198`, \
0.09404430398690063`, 0.19271983785291286`], List[-0.4676081065897829`, \
0.30279068596913294`, -0.10701208671912901`, -0.4263098012177711`, \
0.23697574243009006`, 0.33755051732080593`, -0.05194023589766424`, \
0.03460633098407323`, -0.3514329810037291`], List[0.13170335014743753`, \
0.376657489075397`, 0.2920051731464742`, -0.4497051066967155`, \
0.1440874775399693`, 0.18625325035164533`, -0.16104804579834978`, \
0.4085984708289707`, 0.04328533320547977`], List[0.10614978292417514`, \
-0.13845376093685008`, 0.11688803121888576`, 0.3744064770466563`, \
-0.06057815674434259`, -0.0013536235535923085`, -0.43510388605203426`, \
0.29401704685689123`, 0.24493780288679798`], List[0.6993706445890546`, \
0.1115644916472831`, 0.17311607252650144`, -0.038341022327356616`, \
0.1306520765355172`, -0.17205235346446685`, -0.17840362356979186`, \
0.006835761686547726`, -0.21315255414120637`], List[-0.11228283862572064`, \
-0.11752194920493007`, -0.2401843105378093`, 0.2060291335668737`, \
0.4795961627587431`, 0.15290001489936247`, 0.05293575857540196`, \
-0.18960889539019632`, -0.18745396406105982`], List[0.28929444211581623`, \
-0.04139896184765097`, 0.4321836837109878`, 0.057571688157827386`, \
-0.7157332584916373`, -0.673392025831568`, 0.20624532623852898`, \
-0.07919576999377469`, -0.034575602943176444`], List[-0.14211389814024747`, \
0.5067736291271908`, -0.04075904961614285`, 0.11688810219608545`, \
-0.3625112173016552`, 0.35627977686819373`, 0.5460409897319862`, \
0.043691481870640356`, -0.22718230951995047`], List[0.2673442840755443`, \
0.49824021931002`, 0.22912496436118365`, -0.07707997678791205`, \
-0.08301340854219655`, -0.45659153489907117`, -0.1014002054342086`, \
0.268792403186081`, -0.09830225542247353`], List[0.1996367226301195`, \
0.17564098182668908`, -0.012801171952048298`, -0.7157202028829195`, \
0.20786069998156775`, 0.08308143352664293`, 0.08612406164217518`, \
0.0037716223529896563`, 0.6886686227462105`], List[0.008347260796583458`, \
-0.03087658403936844`, -0.40197202133273996`, 0.35966348865793`, \
-0.3954058614895362`, 0.715814251527444`, 0.024732690588725466`, \
-0.049388856886686726`, -0.30091962202154`], List[-0.08133418460850446`, \
0.30589212713541625`, -0.2225950134619789`, -0.5297467566362765`, \
-0.38232820804206263`, -0.1730999954173601`, 0.1395611216479457`, \
-0.09086670355775994`, -0.12034914322203075`], List[0.0786951912438882`, \
0.003796088031110102`, 0.2609178724988531`, -0.08581203127629053`, \
-0.2861974018971561`, 0.3895889052812407`, -0.4319916601403748`, \
-0.21363525669285197`, 0.23187084055161056`], List[0.280134251705132`, \
0.24035078840781643`, -0.3758218829699329`, 0.17220737689227084`, \
-0.0171507317251199`, 0.07818343679181021`, 0.35249044102768357`, \
0.19016030557667155`, -0.31985117289380405`], List[-0.22752452792716213`, \
0.029155537966807313`, -0.22030865425983226`, -0.09984461808020004`, \
-0.20492536651100907`, 0.036960527849913376`, 0.28563271601838114`, \
0.183220979967337`, -0.25819738406715487`], List[-0.3545227260045899`, \
0.4500489633030616`, -0.616829959556116`, 0.15135656197218672`, \
0.6445167267695278`, 0.40377009624390214`, 0.37973248435417895`, \
-0.4245961769794931`, 0.34834747458284226`], List[-0.04570269538665324`, \
0.2460061839813122`, 0.14165978440229876`, -0.12405227749400839`, \
0.5932468114242796`, 0.2279556393564271`, 0.29343050721194164`, \
0.0801505345631597`, 0.35186526577299104`], List[-0.09152228216323975`, \
0.31768719717084315`, -0.1488717878250302`, 0.09515446416495542`, \
0.3598480250292752`, 0.09621967727440374`, 0.34684468624004444`, \
0.2993518436246563`, 0.09623757694157219`], List[0.4495386678326473`, \
0.2989116002414778`, 0.1704847968719811`, -0.4519461768574132`, \
0.3830479301501389`, -0.032884480177115274`, -0.5535258771010826`, \
-0.15517593654589323`, -0.18686761017707723`], List[0.5137420607388886`, \
-0.05634970859018103`, -0.09681266038875096`, -0.12021083408010039`, \
0.33463864039756014`, -0.44865042865465604`, -0.4670738581379808`, \
0.022088254733766105`, 0.03985088886666773`], List[0.34363889601989145`, \
-0.3777912717113709`, 0.37584788448768136`, 0.2833635047245089`, \
-0.21780605760908914`, -0.03035958391081397`, -0.40291027298062876`, \
-0.013695143872673768`, -0.24009196743240757`], List[-0.06266126388771766`, \
-0.11711362154648372`, -0.11386633254788112`, 0.011423306452275054`, \
0.07906022194844414`, 0.037982944788481535`, -0.0923555533454689`, \
-0.44632127620348433`, 0.04067860051096198`], List[-0.2551207695865459`, \
-0.5559426709266213`, 0.22716814347115505`, 0.0026638976367955366`, \
-0.02899285704316629`, 0.33735945225049535`, -0.016860088872758108`, \
0.06785295315247933`, 0.12115114051102578`], List[-0.42491212908905396`, \
-0.02453360559490337`, 0.017421609395471098`, -0.38932050287872944`, \
-0.691552387755212`, 0.6158059459144742`, 0.7428083394653718`, \
-0.0760566146571162`, -0.0873273831993349`], List[0.46933994820429226`, \
0.3454480862743675`, 0.09093886677567012`, 0.9134630439487503`, \
-0.303706380148827`, 0.20491076518726314`, -0.17634721343237947`, \
0.04060965569226836`, 0.02143629282893743`], List[-0.08673553407781519`, \
-0.25038015212525894`, -0.2019957663530101`, 0.45501785415030793`, \
0.4028178510996319`, -0.5190522602723715`, -0.23195416934987112`, \
0.2120154489552414`, -0.030324526164113984`], List[0.4945378945368456`, \
0.26868485326149405`, 0.026197273880055442`, 0.09316943958678726`, \
-0.5147454324270786`, 0.00003165341609528542`, 0.4488046910133153`, \
0.029474298644174515`, 0.416588935600327`], List[-0.08133945905484026`, \
0.39410712647261953`, -0.15453432684214938`, -0.5932110435637872`, \
0.34572067259242245`, 0.5475879603672886`, 0.8791973885719282`, \
0.7005171113420935`, 0.7883007236820052`], List[-0.27551702735730177`, \
-0.27297559532912474`, -0.4451059201168938`, -0.23024414179074615`, \
0.1991878956396616`, -0.01166668653439136`, 0.3439681084393318`, \
0.12889496462431263`, -0.3284322408929016`], List[-0.1030299118411174`, \
0.325555317786535`, -0.020379710933565304`, 0.023690673980041637`, \
-0.25176992149715677`, -0.18965997155340658`, 0.21659459025811015`, \
-0.2958058796511218`, 0.4279936777340847`], List[-0.193706799138636`, \
-0.16581841246709947`, 0.09978317991566894`, 0.07784682985479077`, \
-0.1434286777575322`, -0.2539882903557889`, -0.2830966017449637`, \
-0.0941575646109914`, -0.4199799938946097`], List[-0.22965316345041578`, \
0.06731724112316789`, 0.18348191971557576`, -0.23030464471221923`, \
0.4787191700515942`, 0.10031795198805464`, -0.140898553193766`, \
-0.42334740678730565`, -0.07632550063346422`], List[-0.3383822144480971`, \
-0.05653832022286427`, 0.05688138998989475`, 0.8225183746644238`, \
0.6389002427953396`, -0.9710851703540733`, -0.01693772660037855`, \
-0.12618646400173777`, -0.023438725249073263`], List[0.048411419060566487`, \
-0.029510412079914266`, 0.6108093541972673`, -0.5336483493807325`, \
0.13004031112388645`, -0.16995669638771213`, 0.08358901542056327`, \
0.07624629979716718`, 0.4707891588626374`], List[0.07534547294030489`, \
0.19570317136196377`, 0.8213800016028077`, 0.18515624510107173`, \
-0.2070334867287674`, 0.5477599124772589`, -0.38631175087988034`, \
-0.2659828341275149`, -0.1927456489208404`], List[0.31766866040048874`, \
0.27257906000247895`, -0.08534173597651015`, -0.5650156053209847`, \
-0.05241427548628652`, 0.3704908551178045`, -0.1709892634964243`, \
-0.15058952777284768`, 0.1968658292895203`], List[-0.3370698738287689`, \
0.6492241919887263`, 0.15424101249281363`, -0.025644036049699375`, \
0.11186146404803164`, -0.4499098411633441`, 0.028322969017715627`, \
-0.1418704373301254`, -0.3202963795299451`], List[-0.6515587130848055`, \
0.1319219051929129`, -0.2209652208611733`, -0.1629403825527452`, \
-0.22815489685638563`, -0.36087967140507204`, 0.003016676132132802`, \
0.12803408080061252`, 0.4279091953634936`], List[0.20877907964224446`, \
-0.0057544998079518996`, 0.1183841790818105`, 0.30117211789580434`, \
0.5772193447574975`, 0.21656196931117788`, 0.20321968083530906`, \
0.5351129233022265`, 0.020336109579133423`], List[0.7639526600417711`, \
0.23927147868841994`, 0.0008142341064539886`, -0.08375792161366058`, \
0.009978226984107405`, 0.24252378856462156`, -0.3833739969695768`, \
-0.024158178155864678`, 0.3170775974157653`], List[-0.3160271236209324`, \
0.6225468236915149`, -0.8563275233747362`, 0.15811062734253908`, \
-0.00167710274364925`, 0.7948678996429545`, -0.15702568858933014`, \
0.4066013216632693`, -0.2862708476517795`], List[0.3488094535669043`, \
-0.39536847365342326`, -0.10788925162971541`, -0.27202098756522114`, \
0.010240701873752232`, -0.0673296620559716`, -0.02201752562989382`, \
0.19048027529379005`, 0.11101679153943364`], List[-0.18789457774672616`, \
-0.0838619543735332`, 0.30350975899120464`, -0.2595146987478871`, \
0.40557456368504546`, 0.050231489525318`, 0.1437968539236454`, \
-0.40707100210556585`, 0.2795517609776055`], List[0.44733252105322957`, \
-0.24141494081838163`, -0.06415466845491304`, -0.645900266229139`, \
0.4955035485689486`, -0.17883191503904924`, -0.19887840265909318`, \
-0.09203663504817157`, -0.7784434470521396`], List[-0.3818382929931367`, \
0.19993052195500105`, 0.5571983801074892`, -0.7299461830412856`, \
-0.10021958735771684`, -0.5066235012485987`, -0.24464986131986166`, \
-0.7298345166539386`, -0.0962734322087367`], List[1.135640276343542`, \
-0.289604096553808`, -0.5909165011318928`, 0.26818737108806273`, \
-0.07719298033413753`, 0.025726152414889635`, -0.4422726667302176`, \
0.08117988767535687`, 0.4022636395662933`], List[-0.07527472601369956`, \
-0.604629911383174`, -0.17467999583596944`, 0.06678671006068645`, \
-0.1334883101510681`, -0.6217472340461452`, -0.16058289667765835`, \
-0.405465829345206`, -0.3769669872911506`], List[-0.08455873109576686`, \
-0.02453198099065159`, 0.3153151764714562`, 0.20826841450067188`, \
-0.7428676815320632`, -0.25866802296287783`, -0.2320371719007801`, \
0.3596508440611076`, -0.3777203706447362`], List[-0.37968196591290676`, \
-0.47704875849041567`, -0.6385213366667166`, 0.5015003297716015`, \
0.3583792076295074`, -0.3181431224662174`, -0.10594750923291396`, \
-0.1602487808612161`, 0.0937084317177743`], List[0.7302715711053949`, \
-0.08916043862683222`, 0.1506782411616488`, 0.1279303989236035`, \
-0.023067774611477316`, -0.482795938707709`, -0.43929146697284743`, \
0.5050546151732136`, -0.08115527277125914`], List[-0.16582725794399328`, \
-0.0798424203742381`, -0.2491473289476622`, 0.3858371564988335`, \
0.008080257859220405`, 0.024807907153558618`, -0.08841527231705089`, \
-0.14144256256817306`, 0.2815587084151075`], List[0.6993707322516595`, \
0.1115634666529753`, 0.17311510198751606`, -0.038341984929288385`, \
0.1306513488007615`, -0.1720517353309059`, -0.17840362245107508`, \
0.006834874050391562`, -0.2131512652623155`], List[-0.25913600224016853`, \
0.4420896381508019`, -0.3950728655832447`, 0.2348657904633493`, \
0.1750812242945353`, 0.24961259493346707`, 0.40244217990613546`, \
0.39149205291973327`, -0.22119692924020398`], List[0.5950464612423597`, \
-0.3653590762378188`, -0.2770347112193803`, 0.14172302388422134`, \
-0.12145047307079512`, 0.126351794737711`, -0.6250761706781518`, \
0.4033346480118836`, -0.13105036336505138`], List[0.28950602835663075`, \
0.4910929202353126`, -0.2682853968674736`, 0.2258108992680348`, \
-0.23162805031718467`, 0.13656793343356813`, 0.4786464953153419`, \
-0.1807971529049329`, -0.7512087763198596`], List[-0.34900733580673693`, \
-0.08538619007393361`, 0.07444756783077076`, 0.2590291360314095`, \
0.5260827330564427`, 0.10242489761672117`, -0.0957782790058187`, \
-0.49911615965105327`, 0.018216825362685946`], List[-0.4252637828207426`, \
0.519254789140753`, -0.4208258507255675`, -0.0542164744332335`, \
0.1801788150028814`, 0.22453303745698838`, -0.242351239887168`, \
0.21841519108360535`, -0.0010125705150938126`], List[0.10192713695482356`, \
0.16523739202927476`, -0.36494168690346107`, -0.28525193708945884`, \
-0.43740556238093753`, 0.11609586531903311`, 0.11192006849606445`, \
-0.1803563150838122`, -0.39385248840602405`], List[0.2627099502195116`, \
0.05943974609871901`, -0.13240812780815683`, -0.17784621590066169`, \
-0.432415912609308`, -0.03736390776878427`, -0.8969861067597724`, \
0.2866678841867095`, 0.5164641317845157`], List[-0.3916442830393213`, \
0.38879328849515266`, 0.6109291396865102`, -0.014156223580248888`, \
-0.17553426148269835`, -0.6990110775265206`, 0.22981929281342547`, \
-0.6051160448142078`, -0.1159859848634532`], List[0.0299215238877316`, \
-0.19280849671632683`, 0.036525066102937306`, -0.29912287431104445`, \
-0.37482336515977205`, 0.15181456445391223`, 0.13993660003885003`, \
0.14395676966881993`, 0.6199233699838844`], List[0.42454831848251945`, \
-0.07230996565543596`, -0.11533333974397957`, -0.39670824434575946`, \
0.08166892043386316`, -0.22897101575811446`, -0.037310582431729654`, \
0.279322354428391`, -0.18566643301215618`], List[-0.39046950003736625`, \
0.19920876010502908`, -0.5133538506324218`, 0.15004744249688048`, \
-0.41026180937375983`, -0.7000700290551709`, -0.8885369532723615`, \
-0.5680447278762831`, 0.24697318966019732`], List[0.3322940876202558`, \
-0.5314456958613133`, -0.5026281159068638`, 0.27662101039832987`, \
-0.07150425665556988`, -0.19835522984224568`, -0.07549085807811515`, \
0.9669855974266183`, -0.37829181104502646`], List[-0.06308073930380526`, \
-0.08657028133699515`, 0.15125791890361046`, -0.5012487519959512`, \
-0.041637050588429494`, 0.0814743597547742`, -0.4592981595909421`, \
-0.011059948151477756`, -0.04675608151022355`], List[-0.13664247048316064`, \
-0.4362393952334086`, -0.08726032684867374`, 0.37119049571632046`, \
0.4290705794366175`, -0.12117277750307989`, 0.1658681553917835`, \
-0.04627976144871422`, -0.04142654501907702`], List[0.06368755819023038`, \
0.23749796789362487`, 0.17656813722765266`, -0.16103142816285473`, \
0.7223508028471574`, -0.0324672744697649`, -0.3484786621309663`, \
0.30808684350078963`, 0.35070721054861886`], List[-0.13572281645921758`, \
0.271203515519359`, -0.29878868824835064`, 0.20319958072750482`, \
-0.5568729943127333`, 0.006559723511454851`, 0.2819537202825195`, \
-0.19625710861484627`, -0.5195209653844483`], List[-0.12525616331251352`, \
-0.1539231886021072`, -0.33230468416278114`, 0.0008381239064730425`, \
0.29914550089266473`, 0.3911428016453452`, 0.09494692850228265`, \
0.049311913416938996`, -0.006369260710246987`], List[0.649604389751506`, \
0.3247288926012502`, 0.4105425647050521`, 0.3924607989012559`, \
0.7708676746190289`, 0.023929416459328185`, -0.026677654373686344`, \
0.3031462736741994`, -0.19687095126026685`], List[0.18960841202137074`, \
0.3458928874669899`, -0.23849238311982862`, 0.500737598186573`, \
0.3138140282252132`, 0.5495899352411213`, -0.45410956200213515`, \
0.03354194783677001`, 0.13985421171779197`], List[-0.2604765815832215`, \
0.042917344598454296`, 0.06834722891672103`, -0.04427601087619971`, \
0.2958850427445316`, 0.26289858156440754`, -0.29503983413907525`, \
-0.35335335318481276`, 0.5557621406858145`], List[-0.15041904988515012`, \
0.4893337841407504`, 0.3039784389521658`, 0.36038197113422504`, \
-0.06319656783839438`, 0.07138163962466548`, 0.21131971405540828`, \
0.6988107543242317`, 0.04950114269403004`], List[-0.15769883533937587`, \
0.04785276251520545`, 0.8955811207933329`, 0.5174973468034412`, \
0.16342916237500962`, 0.4368364221677568`, -0.2317493333852527`, \
0.7974091442632546`, -0.3477349751305598`], List[0.2090675920068328`, \
0.3724518300309729`, -0.000955216237396284`, 0.20147288414599018`, \
0.3090949314732799`, -0.11240796919254263`, -0.32074260313581815`, \
-0.03590285426102904`, 0.3936563865349585`], List[-0.50615614557493`, \
0.002258602403135732`, 0.15630935689421063`, 0.2707437005669415`, \
-0.34838884976975587`, 0.05315801005395906`, 0.18877918004433142`, \
-0.6017982762113175`, -0.29668880801291636`], List[0.1134587464448435`, \
-0.29978778313216575`, 0.5586837966218207`, -0.18951765829271036`, \
-0.22020413484169168`, -0.5374673695066325`, -0.021252971232965788`, \
-0.04977993055007394`, -0.06891276470173492`], List[0.14115356282760344`, \
-0.012464107953009637`, 0.0064291848469569856`, -0.0833835833715372`, \
0.6265052859206968`, -0.2274214874457897`, 0.1928743878306332`, \
0.17434268919387508`, 0.33895976146077605`], List[0.12146056706638518`, \
0.08822600997115312`, -0.5276589700875568`, 0.1743688529037854`, \
0.07595526525487478`, -0.06023656649961369`, -0.0316238314181319`, \
-0.19720958158014576`, -0.04832927017968282`], List[0.3922274059669975`, \
0.34273645627619076`, 0.23769161112247209`, 0.2789847494043621`, \
-0.13161091020153579`, -0.19414346245211048`, -0.1218666676090055`, \
0.0993894132381497`, 0.8567880811016394`], List[-0.29641989798480095`, \
-0.13964151896450797`, -0.3991424933584305`, 0.5534202209775267`, \
-0.06952833631528567`, 0.18266307424594427`, -0.0028021557597296197`, \
0.718768931941333`, -0.2569440521348632`], List[-0.17141790875848306`, \
0.2273384142254456`, 0.17476519709069263`, -0.08068524912812608`, \
0.0328304497181446`, 0.20663625548371087`, -0.21035218857616933`, \
0.16613052115848864`, 0.15521117876233217`], List[-0.19846621698659267`, \
-0.21217826681976326`, 0.2957255272039071`, -0.10369050812254703`, \
-0.059266418099869426`, 0.4216594545369327`, -0.32192720791388524`, \
0.2615298460053594`, 0.4583350185339478`], List[-0.32712406864981636`, \
-0.5006346612619237`, 0.04977453385389784`, -0.027566609716521164`, \
-0.044840118289667705`, 0.8469813467085209`, -0.23878730147975485`, \
0.1375557214253854`, 0.2290334619981145`], List[-0.5170170359329428`, \
-0.20557169679332182`, -0.359177878883745`, 0.16441115236915949`, \
-0.03164153766772894`, 0.028168825003322375`, 0.2016892625264097`, \
0.09221102138285306`, 0.18106884123923947`], List[-0.2678616107963751`, \
-0.09583176717032524`, 0.5658593182891725`, 0.3012921475846824`, \
0.18115546530239654`, -0.474135342146021`, -0.16503426876118885`, \
0.369258418188094`, 0.2240753088770534`], List[-0.6746456756698453`, \
-0.07398840853482327`, -0.4282664594440127`, 0.3615386503695829`, \
0.18006686597602228`, -0.13439661150466334`, 0.1761112001035316`, \
-0.2424366272016183`, 0.29516032638180756`], List[-0.17057963960075972`, \
-0.4735863643713902`, -0.5377766461673048`, 0.20263570406823225`, \
0.2757840266636262`, -0.5120897540507036`, -0.7782198522518828`, \
-0.22768078869001515`, 0.24691907962212264`], List[-0.3057641641534392`, \
0.19569360220223006`, -0.38238237796943225`, -0.04909472250349194`, \
-0.3265349908199793`, 0.4190156847572954`, 0.16893341173961796`, \
0.15981069422764646`, 0.09115402852083196`], List[-0.05411753075688497`, \
-0.08556660853683688`, -0.5068180029475401`, 0.48290170403471205`, \
-0.3218343884996128`, -0.0027320496909966764`, 0.31877210759938046`, \
0.27870747489960307`, -0.11707652864618859`], List[-0.285473043274214`, \
0.06183013160939251`, 0.05673688031472053`, -0.2226175153759567`, \
-0.09154018617418541`, 0.11074462818882146`, 0.7220209162919877`, \
-0.2596605140189729`, -0.2277792489078885`], List[0.15933745572618865`, \
-0.5740848278950217`, 0.14455664874106558`, 0.20090423250669687`, \
-0.6382199126956035`, -0.034013201074845595`, 0.47493242664242735`, \
-0.12053057178753036`, -0.0741325137654815`], List[0.19543413182814884`, \
0.36788355203238404`, -0.37748234472975584`, -0.6052191712950729`, \
0.03395390346287355`, 0.4752831985658618`, -0.12883926109838834`, \
-0.15887963391271961`, -0.013050716807415935`], List[0.24299915488266927`, \
-0.1250913970371324`, -0.05108582388415028`, 0.03404227200261135`, \
-0.5160475300575409`, 0.3091233315211689`, -0.5094500109400362`, \
0.03855671027109207`, -0.2181429046745454`], List[-0.12010360272753756`, \
0.32121421995052474`, -0.02837146557966537`, 0.32010901703674854`, \
-0.5156782302144831`, 0.18898049839450168`, 0.9442705326914314`, \
-0.17375306340976607`, 0.07108707084962265`], List[0.016375467989809465`, \
0.44809604163552647`, -0.45284417872895955`, -0.48966296108970914`, \
0.214971476316191`, 0.1188528207256086`, 0.5702766676880383`, \
0.09492575967338066`, 0.36233386116556415`], List[0.41722759743723525`, \
-0.8073547668610904`, -0.024488172816665734`, 0.2008434795425218`, \
0.011983324211450649`, -0.4077005700607466`, 0.19019054499111374`, \
0.387374087807272`, -0.09086894098034302`], List[0.0532725897326204`, \
-0.27374489851321604`, 0.003781466952232597`, -0.24803197615314815`, \
0.062305082108779025`, -0.02455623694520868`, -0.22576109502271868`, \
0.06877378866531023`, 0.14188753766549406`], List[0.30849677939551623`, \
0.08045312415061241`, 0.002153275333974313`, -0.351974704972973`, \
0.2746377208906142`, -0.07863688063825786`, 0.8698650618261081`, \
-0.06235764377839263`, 0.5998181858711278`], List[0.5133988926101243`, \
-0.28978848634382226`, 0.07052733984665967`, -0.08369868830897471`, \
0.23278436065513589`, -0.06182325911684266`, -0.10833271803258925`, \
-0.037436524667012715`, 0.3941999003402016`], List[-1.016917565522857`, \
0.6854671093892978`, -0.023244736900856443`, 0.19931379865655363`, \
-0.2088378318351566`, -0.1208748170664811`, -0.06141967859437304`, \
-0.10597167600873109`, 0.10875444046422103`], List[-0.11759585947574482`, \
-0.20903426745748094`, -0.5148550128484543`, 0.1781765903893341`, \
-0.2729175260777728`, -0.2448467808957223`, -0.18339764793392305`, \
0.43652343980281133`, 0.3450341511825375`], List[-0.3778310061965379`, \
0.15892728636531703`, 0.019960278876657373`, 0.3943532556347979`, \
-0.034646384053198136`, 0.11630689700227902`, -0.21194704535075837`, \
0.3474019475169545`, 0.3460325119596193`], List[-0.5642436244758945`, \
0.9004256547801892`, 0.1384145250283422`, -0.1118189628317223`, \
-0.09364711727940128`, 0.12097314682193795`, -0.3596772738516575`, \
-0.23452752639196575`, 0.4772603814258445`], List[0.9342466281746301`, \
0.4167505316085906`, 0.27935044962561156`, -0.12481067985303393`, \
0.07047647859902852`, 0.637780449652865`, 0.4586718112134463`, \
0.050949038905411644`, -0.15966730544394575`], List[-0.002291086311673129`, \
0.447789057544173`, 0.15745272935060484`, -0.03998129758573962`, \
0.12120861159568577`, 0.08749619135148178`, -0.15925142736754433`, \
0.37213404342043727`, 0.02902068456655079`], List[0.1656791881215801`, \
0.008029881047586616`, 0.004207157971730912`, 0.5150989160130408`, \
-0.10402766331304579`, -0.09739254574090851`, -0.04143430827607297`, \
-0.057382378163407806`, -0.23188758777150828`], List[-0.48637321504774506`, \
0.11291402344229534`, -0.22080657969069975`, -0.018804955836153252`, \
-0.26949155285518755`, 0.1406983555635552`, -0.2938645374584946`, \
-0.047690040035073405`, 0.15379228577813975`], List[-0.007963838780995158`, \
-0.09005623977920009`, -0.13424891311341547`, 0.02753554217748073`, \
0.2892953609510857`, -0.004933571723441445`, 0.532650093976695`, \
0.15891308958656583`, -0.6966794010457582`], List[-0.45802686465599735`, \
-0.02666533659251453`, -0.21200274419876802`, 0.563909148857333`, \
0.16476255757151723`, 0.29456965203768853`, 0.09015839852771952`, \
1.1167830534377428`, -0.7191608297232752`], List[0.17403735722164138`, \
-0.2542507189056533`, 0.32814237898597254`, 0.054713534501833964`, \
-0.12442956705023747`, -0.4766624505869813`, 0.1926764155992447`, \
-0.19244966366726804`, 0.7083667961092437`], List[-0.058373944501506195`, \
-0.2656568831047161`, 0.017095359154467412`, 0.0037395503557728434`, \
-0.10993288477879751`, 0.02432304343270765`, -0.288601690052489`, \
-0.22796518323303974`, 0.05849934661010106`], List[0.7029641974303402`, \
-0.33319767019895724`, -0.07128309895749682`, -0.7027920138466923`, \
0.5342614045896668`, 0.3491304626108965`, -0.804121595611196`, \
-0.10923058518196056`, 0.23902327340804871`], List[-0.2701676438018764`, \
-0.30321644187380914`, 0.1455762367690625`, -0.004026296876858546`, \
-0.20424160150534743`, -0.055414655374477734`, -0.09007945516845413`, \
-0.3386786134224352`, 0.21636080492297902`], List[-0.48104696404634195`, \
0.4279034308841531`, 0.07543847604919432`, 0.03599121759518621`, \
0.308707238243412`, 0.05559609500536701`, -0.5172789267139858`, \
0.0798199097598091`, 0.1685005812848279`], List[0.37800354437032985`, \
-0.6050900380201988`, 0.014536843456992491`, 0.17154117650926956`, \
-0.9170492614103716`, 0.4267490564834378`, 0.20534489195054828`, \
-0.2677223121543032`, 0.0037569578326140988`], List[-0.03271290204427099`, \
-0.10537906434401388`, -0.06507722026199479`, -0.06519205575527176`, \
0.26502494570747726`, 0.6356328891022943`, -0.00860928434837733`, \
0.5441002550924445`, -0.01894429675172112`], List[0.3252793585970136`, \
-0.10341117690465823`, -0.5999044302353354`, -0.40322945668697635`, \
-0.5170485513963122`, -0.0389720027238153`, 0.026845471145501097`, \
0.027355080182707145`, -0.07485582795741245`], List[-0.23948701247232598`, \
-0.1163019269080546`, -0.21206356622183456`, -0.2817503645247456`, \
-0.004062233267416012`, -0.5971049475470607`, -0.18426926496426194`, \
-0.39565818210136944`, 0.040642872306378815`], List[-0.17048579500696684`, \
-0.19733345589844453`, -0.5485314901065682`, 0.8215821641327099`, \
0.12712671799966072`, -0.9577265527552393`, 0.3032205652416131`, \
0.27382819234138844`, -0.2985141295893147`], List[0.10130460116025061`, \
0.090414587124574`, 0.249194842565596`, -0.21016182421222218`, \
0.228376859902311`, -0.27368828665330874`, -0.22004104840758876`, \
-0.2999583882322103`, 0.021467430893304947`], List[-0.29937630893572303`, \
0.5040818901879784`, -0.000560633785451259`, 0.06289767481476646`, \
-0.1877214125004518`, 0.36058838677561983`, 0.3334478521405993`, \
0.6796874628991235`, 0.02356247920313138`], List[0.19114533575453754`, \
-0.26101512237478824`, 0.13069240311674912`, -0.2045589905415304`, \
-0.5453465291272831`, -0.2365793389071655`, -0.07315991044521537`, \
0.44358834935459585`, 0.5190722191051635`], List[0.04192657899938222`, \
-0.3602902076342167`, -0.16949852931002532`, 0.5252036694875512`, \
0.19437846208605974`, 0.16392556261631774`, 0.07305832244518655`, \
0.2917495790223045`, 0.0009178890573062108`], List[0.24346709103121064`, \
-0.290754151588093`, 0.48281782237054943`, -0.0756452270785661`, \
-0.058055217609387165`, -0.6393912968164641`, -0.04512656441325176`, \
0.16108579254840696`, 0.22613604692850517`], List[0.40575009955079394`, \
-0.22014210198684914`, 0.09302852789251864`, 0.2780295413843263`, \
-0.09004412502839276`, 0.14884875449443427`, 0.2614061299073047`, \
-0.060535183008039214`, -0.16612011579954897`], List[0.7877708151085587`, \
-0.059760077563293594`, 0.08904183119458094`, -0.5875016105338112`, \
-0.010459303658681298`, 0.29593139390852774`, -0.11537023434662842`, \
0.2175652297921246`, 0.061281503730874265`], List[-0.16217523392084005`, \
0.45573653207053516`, -0.027462434613493552`, -0.020645875164570397`, \
0.392522188748133`, 0.5437654186758104`, 0.30178874388165855`, \
0.4940765688437397`, -1.1180128683497634`], List[-0.1474147295100771`, \
0.33554906858311767`, -0.18246483010381187`, -0.7805359130033949`, \
0.21184968562908743`, 0.18365561377289674`, 0.4996360134554676`, \
0.4303580342941452`, -0.054951211804662704`], List[-0.22005541417771513`, \
-0.1471007953983846`, -0.13667113649092616`, 0.09442028879985948`, \
0.6029068346765541`, 0.48395283377799636`, -0.0797143920672395`, \
-0.020713984246130846`, 0.1600058851903673`], List[0.20528497618614713`, \
0.30781085637359074`, -0.1751154842130706`, -0.21904501312338498`, \
-0.6560049725561148`, 0.1538412230103912`, 0.5645704103407829`, \
-0.6282110730346023`, -0.3632942544924067`], List[0.012058306400679685`, \
0.1586931794429063`, 0.427729142045124`, 0.012339416253587828`, \
-0.09642924822186161`, 0.23111410565785612`, 0.05554075748901117`, \
0.7515931441263077`, -0.5402081692546554`], List[-0.09202984877044768`, \
-0.2238907571911146`, 0.06327585264771497`, -0.011703445548714128`, \
0.4770468965249828`, -0.33844331259865684`, 0.2818503839058962`, \
-0.5170950946103163`, 0.06286588064434676`]], Automatic], Rule[Method, \
\\\"KDtree\\\"]]]]]], Rule[\\\"NeighborsNumber\\\", 50], Rule[\\\"ClassPriors\
\\\", List[0.37142857142857144`, 0.22857142857142856`, \
0.39999999999999997`]], Rule[\\\"TrainingOutput\\\", NumericArray[List[1, 3, \
1, 2, 3, 2, 3, 2, 3, 1, 1, 1, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, \
3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3], \\\"UnsignedInteger8\\\"]], \
Rule[\\\"DistributionSmoothing\\\", 0.5`], Rule[\\\"Processor\\\", \
MachineLearning`MLProcessor[\\\"Sequence\\\", Association[Rule[\\\"Input\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", List[136]]]]]], Rule[\\\
\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Weight\\\", \
1], Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]]]], Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"EmbedNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Impossible\\\"], Rule[\\\"Missing\
\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], Rule[\\\"Weight\\\", \
1], Rule[\\\"SetSize\\\", List[136]]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[1, 1], Rule[2, 2], Rule[3, 3], Rule[4, 4], Rule[5, 5], \
Rule[6, 6], Rule[7, 7], Rule[8, 8], Rule[9, 9], Rule[10, 10], Rule[11, 11], \
Rule[12, 12], Rule[13, 13], Rule[14, 14], Rule[15, 15], Rule[16, 16], \
Rule[17, 17], Rule[18, 18], Rule[19, 19], Rule[20, 20], Rule[21, 21], \
Rule[22, 22], Rule[23, 23], Rule[24, 24], Rule[25, 25], Rule[26, 26], \
Rule[27, 27], Rule[28, 28], Rule[29, 29], Rule[30, 30], Rule[31, 31], \
Rule[32, 32], Rule[33, 33], Rule[34, 34], Rule[35, 35], Rule[36, 36], \
Rule[37, 37], Rule[38, 38], Rule[39, 39], Rule[40, 40], Rule[41, 41], \
Rule[42, 42], Rule[43, 43], Rule[44, 44], Rule[45, 45], Rule[46, 46], \
Rule[47, 47], Rule[48, 48], Rule[49, 49], Rule[50, 50], Rule[51, 51], \
Rule[52, 52], Rule[53, 53], Rule[54, 54], Rule[55, 55], Rule[56, 56], \
Rule[57, 57], Rule[58, 58], Rule[59, 59], Rule[60, 60], Rule[61, 61], \
Rule[62, 62], Rule[63, 63], Rule[64, 64], Rule[65, 65], Rule[66, 66], \
Rule[67, 67], Rule[68, 68], Rule[69, 69], Rule[70, 70], Rule[71, 71], \
Rule[72, 72], Rule[73, 73], Rule[74, 74], Rule[75, 75], Rule[76, 76], \
Rule[77, 77], Rule[78, 78], Rule[79, 79], Rule[80, 80], Rule[81, 81], \
Rule[82, 82], Rule[83, 83], Rule[84, 84], Rule[85, 85], Rule[86, 86], \
Rule[87, 87], Rule[88, 88], Rule[89, 89], Rule[90, 90], Rule[91, 91], \
Rule[92, 92], Rule[93, 93], Rule[94, 94], Rule[95, 95], Rule[96, 96], \
Rule[97, 97], Rule[98, 98], Rule[99, 99], Rule[100, 100], Rule[101, 101], \
Rule[102, 102], Rule[103, 103], Rule[104, 104], Rule[105, 105], Rule[106, \
106], Rule[107, 107], Rule[108, 108], Rule[109, 109], Rule[110, 110], \
Rule[111, 111], Rule[112, 112], Rule[113, 113], Rule[114, 114], Rule[115, \
115], Rule[116, 116], Rule[117, 117], Rule[118, 118], Rule[119, 119], \
Rule[120, 120], Rule[121, 121], Rule[122, 122], Rule[123, 123], Rule[124, \
124], Rule[125, 125], Rule[126, 126], Rule[127, 127], Rule[128, 128], \
Rule[129, 129], Rule[130, 130], Rule[131, 131], Rule[132, 132], Rule[133, \
133], Rule[134, 134], Rule[135, 135], Rule[136, 136]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Weight\\\", 1], \
Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]]]], \
Rule[\\\"EmbeddingVectors\\\", List[NumericArray[List[List[0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[-1.0169178247451782`, 0.685467004776001`, \
-0.023245172575116158`, 0.19931364059448242`, -0.20883788168430328`, \
-0.12087416648864746`, -0.06141949072480202`, -0.10597263276576996`, \
0.10875528305768967`], List[-0.38183823227882385`, 0.19993092119693756`, \
0.5571987628936768`, -0.7299461960792542`, -0.1002204567193985`, \
-0.506624162197113`, -0.24465039372444153`, -0.7298336029052734`, \
-0.09627307951450348`], List[-0.6746448874473572`, -0.07398883253335953`, \
-0.42826589941978455`, 0.36153942346572876`, 0.1800663024187088`, \
-0.13439685106277466`, 0.17611148953437805`, -0.242436021566391`, \
0.2951604127883911`], List[-0.06266189366579056`, -0.11711419373750687`, \
-0.113866426050663`, 0.011423281393945217`, 0.07906065136194229`, \
0.03798345848917961`, -0.0923553854227066`, -0.4463205635547638`, \
0.040678951889276505`], List[-0.15769875049591064`, 0.04785262420773506`, \
0.8955807685852051`, 0.5174974799156189`, 0.16342827677726746`, \
0.43683674931526184`, -0.23174996674060822`, 0.7974100112915039`, \
-0.3477349281311035`], List[-0.45802634954452515`, -0.026666218414902687`, \
-0.2120026797056198`, 0.5639081597328186`, 0.16476315259933472`, \
0.2945692837238312`, 0.09015791118144989`, 1.1167832612991333`, \
-0.7191606163978577`], List[-0.3271239101886749`, -0.5006350874900818`, \
0.04977414384484291`, -0.0275662150233984`, -0.04484076797962189`, \
0.8469821810722351`, -0.23878704011440277`, 0.1375560462474823`, \
0.2290327548980713`], List[-0.3370705246925354`, 0.6492243409156799`, \
0.1542404741048813`, -0.02564394846558571`, 0.11186157912015915`, \
-0.4499099552631378`, 0.028323005884885788`, -0.1418711096048355`, \
-0.32029569149017334`], List[-0.39046886563301086`, 0.19920919835567474`, \
-0.5133547782897949`, 0.15004779398441315`, -0.41026270389556885`, \
-0.7000691890716553`, -0.8885369896888733`, -0.5680444240570068`, \
0.24697338044643402`], List[-0.30576378107070923`, 0.19569341838359833`, \
-0.3823833465576172`, -0.04909564182162285`, -0.32653552293777466`, \
0.4190160632133484`, 0.16893252730369568`, 0.15981048345565796`, \
0.09115470945835114`], List[0.09076130390167236`, -0.7724121809005737`, \
-0.3633984625339508`, 0.4405556619167328`, -0.6539329886436462`, \
-0.4185083508491516`, -0.12365677952766418`, 0.09404507279396057`, \
0.19271914660930634`], List[0.7029639482498169`, -0.3331974148750305`, \
-0.07128302752971649`, -0.7027923464775085`, 0.5342609882354736`, \
0.34912997484207153`, -0.8041211366653442`, -0.10923010110855103`, \
0.23902353644371033`], List[-0.08455947786569595`, -0.024532098323106766`, \
0.31531572341918945`, 0.2082686871290207`, -0.7428684234619141`, \
-0.25866782665252686`, -0.23203624784946442`, 0.3596508502960205`, \
-0.37771955132484436`], List[0.513399064540863`, -0.28978872299194336`, \
0.07052686810493469`, -0.08369769901037216`, 0.2327839881181717`, \
-0.06182286515831947`, -0.10833325982093811`, -0.03743553161621094`, \
0.3942003846168518`], List[-0.08133348822593689`, 0.3058929443359375`, \
-0.22259502112865448`, -0.5297461152076721`, -0.3823282718658447`, \
-0.17310070991516113`, 0.1395619958639145`, -0.09086639434099197`, \
-0.12034841626882553`], List[0.3084975779056549`, 0.08045269548892975`, \
0.0021532014943659306`, -0.3519752323627472`, 0.27463796734809875`, \
-0.0786370113492012`, 0.8698643445968628`, -0.06235788017511368`, \
0.5998180508613586`], List[-0.05837412551045418`, -0.2656559646129608`, \
0.01709442213177681`, 0.0037399553693830967`, -0.10993218421936035`, \
0.0243239626288414`, -0.2886017858982086`, -0.2279660999774933`, \
0.05849849060177803`], List[0.05327356234192848`, -0.2737447917461395`, \
0.003780995262786746`, -0.24803178012371063`, 0.06230556592345238`, \
-0.02455543912947178`, -0.22576038539409637`, 0.06877411901950836`, \
0.14188840985298157`], List[-0.18789388239383698`, -0.08386208862066269`, \
0.30350950360298157`, -0.25951507687568665`, 0.4055745303630829`, \
0.05023087188601494`, 0.14379703998565674`, -0.40707144141197205`, \
0.27955204248428345`], List[0.37800291180610657`, -0.6050896048545837`, \
0.01453770138323307`, 0.17154021561145782`, -0.9170495271682739`, \
0.42674824595451355`, 0.20534555613994598`, -0.2677231431007385`, \
0.0037560262717306614`], List[-0.37968289852142334`, -0.477049320936203`, \
-0.6385208368301392`, 0.5015006065368652`, 0.35837939381599426`, \
-0.31814369559288025`, -0.10594674944877625`, -0.16024793684482574`, \
0.09370878338813782`], List[-0.10302981734275818`, 0.32555606961250305`, \
-0.020380273461341858`, 0.023691225796937943`, -0.2517704367637634`, \
-0.18965965509414673`, 0.2165936529636383`, -0.2958061695098877`, \
0.4279932975769043`], List[-0.19370640814304352`, -0.1658187061548233`, \
0.09978403896093369`, 0.07784608006477356`, -0.14342893660068512`, \
-0.2539879083633423`, -0.2830966114997864`, -0.09415733814239502`, \
-0.41997963190078735`], List[0.04841238632798195`, -0.029509762302041054`, \
0.6108091473579407`, -0.5336490273475647`, 0.1300397366285324`, \
-0.1699560582637787`, 0.08358840644359589`, 0.07624684274196625`, \
0.47078976035118103`], List[0.041927359998226166`, -0.36029052734375`, \
-0.16949933767318726`, 0.5252031683921814`, 0.19437755644321442`, \
0.16392606496810913`, 0.07305867969989777`, 0.29174917936325073`, \
0.0009182951762340963`], List[0.029922284185886383`, -0.19280871748924255`, \
0.036524698138237`, -0.29912301898002625`, -0.37482377886772156`, \
0.15181422233581543`, 0.139937162399292`, 0.1439560204744339`, \
0.6199225187301636`], List[0.07534495741128922`, 0.19570234417915344`, \
0.8213793039321899`, 0.1851562112569809`, -0.20703260600566864`, \
0.547758936882019`, -0.3863110840320587`, -0.2659819424152374`, \
-0.19274474680423737`], List[0.1996368169784546`, 0.1756415069103241`, \
-0.012801856733858585`, -0.71571946144104`, 0.20786060392856598`, \
0.08308102190494537`, 0.08612477779388428`, 0.003771750722080469`, \
0.688667893409729`], List[-0.34900733828544617`, -0.08538716286420822`, \
0.07444765418767929`, 0.25902897119522095`, 0.5260823369026184`, \
0.10242468118667603`, -0.09577737748622894`, -0.49911585450172424`, \
0.01821751520037651`], List[0.12145963311195374`, 0.08822529762983322`, \
-0.5276590585708618`, 0.17436815798282623`, 0.07595526427030563`, \
-0.06023672968149185`, -0.031623706221580505`, -0.19721029698848724`, \
-0.04832950606942177`], List[-0.29937660694122314`, 0.5040826201438904`, \
-0.0005601666634902358`, 0.0628974661231041`, -0.18772228062152863`, \
0.3605892062187195`, 0.33344700932502747`, 0.6796883344650269`, \
0.023562492802739143`], List[0.016374880447983742`, 0.4480959475040436`, \
-0.4528443217277527`, -0.48966261744499207`, 0.2149709314107895`, \
0.1188533827662468`, 0.5702773332595825`, 0.09492628276348114`, \
0.3623334467411041`], List[-0.2964191734790802`, -0.13964231312274933`, \
-0.3991428315639496`, 0.5534203052520752`, -0.06952809542417526`, \
0.18266330659389496`, -0.0028029666282236576`, 0.7187694907188416`, \
-0.256944864988327`], List[0.07869593054056168`, 0.0037951970007270575`, \
0.26091790199279785`, -0.0858110710978508`, -0.28619813919067383`, \
0.38958969712257385`, -0.43199241161346436`, -0.2136356681585312`, \
0.23187033832073212`], List[0.6496050357818604`, 0.3247295320034027`, \
0.4105420410633087`, 0.39246076345443726`, 0.7708675265312195`, \
0.023928536102175713`, -0.026677774265408516`, 0.30314597487449646`, \
-0.19687074422836304`], List[-0.007964256219565868`, -0.09005565941333771`, \
-0.13424956798553467`, 0.027534790337085724`, 0.28929463028907776`, \
-0.004933161661028862`, 0.5326501131057739`, 0.15891297161579132`, \
-0.6966797113418579`], List[-0.08133985102176666`, 0.3941076695919037`, \
-0.15453429520130157`, -0.5932101607322693`, 0.34571993350982666`, \
0.5475886464118958`, 0.8791981935501099`, 0.7005172967910767`, \
0.7883008122444153`], List[0.44733256101608276`, -0.24141563475131989`, \
-0.06415511667728424`, -0.6459012031555176`, 0.4955042004585266`, \
-0.1788315773010254`, -0.1988784521818161`, -0.09203624725341797`, \
-0.7784431576728821`], List[-0.19846613705158234`, -0.2121790498495102`, \
0.2957253158092499`, -0.10369091480970383`, -0.0592663399875164`, \
0.4216597080230713`, -0.3219279944896698`, 0.2615300714969635`, \
0.45833420753479004`], List[-0.23948687314987183`, -0.11630275100469589`, \
-0.2120644450187683`, -0.2817501723766327`, -0.004062260035425425`, \
-0.5971055030822754`, -0.18426978588104248`, -0.3956587016582489`, \
0.04064249247312546`], List[0.5950467586517334`, -0.3653585910797119`, \
-0.27703505754470825`, 0.14172329008579254`, -0.12145133316516876`, \
0.1263512372970581`, -0.6250767707824707`, 0.4033346474170685`, \
-0.13105075061321259`], List[-0.22752541303634644`, 0.029156355187296867`, \
-0.22030916810035706`, -0.09984365850687027`, -0.2049245834350586`, \
0.036960337311029434`, 0.2856332063674927`, 0.18322110176086426`, \
-0.2581981122493744`], List[0.06368806213140488`, 0.2374972552061081`, \
0.17656727135181427`, -0.16103196144104004`, 0.7223507165908813`, \
-0.03246800974011421`, -0.34847864508628845`, 0.3080858886241913`, \
0.3507067561149597`], List[-0.37783095240592957`, 0.1589278280735016`, \
0.019960718229413033`, 0.3943537175655365`, -0.03464667126536369`, \
0.11630609631538391`, -0.21194681525230408`, 0.3474021852016449`, \
0.3460320234298706`], List[0.11345788836479187`, -0.29978713393211365`, \
0.5586828589439392`, -0.18951687216758728`, -0.2202049344778061`, \
-0.5374675989151001`, -0.021253732964396477`, -0.049779023975133896`, \
-0.06891293823719025`], List[0.1656789481639862`, 0.008029182441532612`, \
0.004206680692732334`, 0.5150996446609497`, -0.10402830690145493`, \
-0.09739168733358383`, -0.041434623301029205`, -0.0573817640542984`, \
-0.23188842833042145`], List[-0.13572221994400024`, 0.2712044417858124`, \
-0.2987896502017975`, 0.20320051908493042`, -0.5568735599517822`, \
0.006558898836374283`, 0.28195279836654663`, -0.19625809788703918`, \
-0.519520103931427`], List[-0.0867348238825798`, -0.25038081407546997`, \
-0.2019965499639511`, 0.4550168812274933`, 0.402818500995636`, \
-0.5190525054931641`, -0.23195363581180573`, 0.21201640367507935`, \
-0.030325179919600487`], List[0.2429981827735901`, -0.1250923126935959`, \
-0.05108584463596344`, 0.03404320403933525`, -0.5160472989082336`, \
0.30912327766418457`, -0.5094493627548218`, 0.0385567769408226`, \
-0.21814216673374176`], List[-0.35947951674461365`, -0.1604236513376236`, \
0.0996348187327385`, 0.5483320951461792`, -0.03437819331884384`, \
0.009196917526423931`, 0.17572011053562164`, -0.3546849191188812`, \
0.5273112654685974`], List[-0.09152204543352127`, 0.31768813729286194`, \
-0.14887136220932007`, 0.09515384584665298`, 0.3598482012748718`, \
0.09621994197368622`, 0.34684380888938904`, 0.2993508577346802`, \
0.09623733907938004`], List[-0.03271199390292168`, -0.10537983477115631`, \
-0.06507682800292969`, -0.0651918575167656`, 0.26502394676208496`, \
0.6356333494186401`, -0.008610018528997898`, 0.544100284576416`, \
-0.018944919109344482`], List[-0.06308135390281677`, -0.08656999468803406`, \
0.1512584537267685`, -0.5012490749359131`, -0.04163763299584389`, \
0.08147362619638443`, -0.4592985510826111`, -0.011060184799134731`, \
-0.046756722033023834`], List[0.6993705034255981`, 0.11156374961137772`, \
0.17311590909957886`, -0.038341373205184937`, 0.13065212965011597`, \
-0.172051802277565`, -0.1784030944108963`, 0.006835562642663717`, \
-0.21315184235572815`], List[0.24346709251403809`, -0.29075419902801514`, \
0.4828173518180847`, -0.07564429938793182`, -0.05805511027574539`, \
-0.6393919587135315`, -0.04512730985879898`, 0.16108562052249908`, \
0.2261369377374649`], List[0.012057618238031864`, 0.1586926132440567`, \
0.4277288615703583`, 0.012339344248175621`, -0.0964287742972374`, \
0.23111392557621002`, 0.05554140731692314`, 0.7515929937362671`, \
-0.5402078032493591`], List[0.3436395823955536`, -0.37779131531715393`, \
0.37584877014160156`, 0.28336265683174133`, -0.21780510246753693`, \
-0.030359188094735146`, -0.40291082859039307`, -0.013694602996110916`, \
-0.24009257555007935`], List[0.20877988636493683`, -0.0057547008618712425`, \
0.11838492751121521`, 0.30117204785346985`, 0.5772191286087036`, \
0.2165612131357193`, 0.203219935297966`, 0.5351128578186035`, \
0.02033594623208046`], List[-0.2678607404232025`, -0.0958322212100029`, \
0.565859317779541`, 0.30129218101501465`, 0.18115465342998505`, \
-0.47413507103919983`, -0.16503487527370453`, 0.36925798654556274`, \
0.224075049161911`], List[-0.39164403080940247`, 0.38879284262657166`, \
0.6109297275543213`, -0.014155513606965542`, -0.17553424835205078`, \
-0.6990113854408264`, 0.2298184335231781`, -0.6051162481307983`, \
-0.11598522961139679`], List[-0.25913533568382263`, 0.44208937883377075`, \
-0.39507198333740234`, 0.2348666489124298`, 0.17508171498775482`, \
0.24961228668689728`, 0.4024421274662018`, 0.3914923071861267`, \
-0.22119742631912231`], List[-0.6515596508979797`, 0.13192275166511536`, \
-0.22096556425094604`, -0.16294033825397491`, -0.22815421223640442`, \
-0.36087894439697266`, 0.003016421338543296`, 0.12803375720977783`, \
0.4279095232486725`], List[0.9342473149299622`, 0.41675129532814026`, \
0.27935078740119934`, -0.12481070309877396`, 0.07047680765390396`, \
0.6377807855606079`, 0.45867082476615906`, 0.05094962939620018`, \
-0.15966808795928955`], List[0.5137415528297424`, -0.05635056644678116`, \
-0.09681291878223419`, -0.12020998448133469`, 0.33463814854621887`, \
-0.44864973425865173`, -0.4670730531215668`, 0.022089192643761635`, \
0.03985021263360977`], List[0.4945376217365265`, 0.2686857581138611`, \
0.02619694359600544`, 0.09316994994878769`, -0.5147454738616943`, \
0.00003194186501787044`, 0.4488053619861603`, 0.029475048184394836`, \
0.4165897071361542`], List[0.10192635655403137`, 0.16523775458335876`, \
-0.3649407923221588`, -0.28525254130363464`, -0.4374057352542877`, \
0.11609647423028946`, 0.1119190976023674`, -0.18035545945167542`, \
-0.39385202527046204`], List[0.008347583934664726`, -0.030875926837325096`, \
-0.40197283029556274`, 0.35966363549232483`, -0.39540615677833557`, \
0.7158137559890747`, 0.02473270520567894`, -0.04938812181353569`, \
-0.30092036724090576`], List[-0.11759591847658157`, -0.20903363823890686`, \
-0.5148555636405945`, 0.17817626893520355`, -0.27291759848594666`, \
-0.24484644830226898`, -0.18339672684669495`, 0.4365241825580597`, \
0.34503376483917236`], List[-0.27016785740852356`, -0.3032154440879822`, \
0.14557714760303497`, -0.004026204813271761`, -0.2042412906885147`, \
-0.05541543290019035`, -0.09007949382066727`, -0.3386784791946411`, \
0.2163616418838501`], List[-0.25512051582336426`, -0.555943489074707`, \
0.2271685004234314`, 0.002664665225893259`, -0.028991980478167534`, \
0.33735859394073486`, -0.01685941591858864`, 0.06785374134778976`, \
0.12115045636892319`], List[0.19114458560943604`, -0.26101598143577576`, \
0.1306922882795334`, -0.2045592963695526`, -0.5453455448150635`, \
-0.23657923936843872`, -0.07316028326749802`, 0.44358763098716736`, \
0.5190718173980713`], List[0.28929367661476135`, -0.04139848053455353`, \
0.4321828782558441`, 0.05757157504558563`, -0.7157338261604309`, \
-0.6733927726745605`, 0.2062457650899887`, -0.07919652760028839`, \
-0.034575559198856354`], List[-0.17058050632476807`, -0.47358596324920654`, \
-0.5377767086029053`, 0.2026347517967224`, 0.27578452229499817`, \
-0.5120897889137268`, -0.7782192230224609`, -0.22768142819404602`, \
0.2469194233417511`], List[0.3176695704460144`, 0.27257832884788513`, \
-0.08534102141857147`, -0.5650151371955872`, -0.05241360887885094`, \
0.3704909682273865`, -0.17098914086818695`, -0.15058884024620056`, \
0.19686639308929443`], List[0.44953909516334534`, 0.2989118993282318`, \
0.17048557102680206`, -0.45194628834724426`, 0.3830479681491852`, \
-0.03288361057639122`, -0.5535257458686829`, -0.15517595410346985`, \
-0.18686699867248535`], List[0.34880876541137695`, -0.39536798000335693`, \
-0.10788843035697937`, -0.2720208168029785`, 0.010240682400763035`, \
-0.067329540848732`, -0.02201654203236103`, 0.19047990441322327`, \
0.11101661622524261`], List[-0.15041881799697876`, 0.4893346130847931`, \
0.30397912859916687`, 0.36038267612457275`, -0.06319575756788254`, \
0.07138068974018097`, 0.21132026612758636`, 0.6988100409507751`, \
0.049500755965709686`], List[-0.09202887117862701`, -0.22389046847820282`, \
0.06327538192272186`, -0.01170277502387762`, 0.4770478904247284`, \
-0.33844342827796936`, 0.28185132145881653`, -0.517094612121582`, \
0.06286593526601791`], List[-0.33838316798210144`, -0.056538816541433334`, \
0.05688149109482765`, 0.822517454624176`, 0.6388998627662659`, \
-0.9710853695869446`, -0.01693742349743843`, -0.12618644535541534`, \
-0.02343815751373768`], List[-0.17048659920692444`, -0.19733409583568573`, \
-0.5485324263572693`, 0.8215819597244263`, 0.12712737917900085`, \
-0.9577258229255676`, 0.3032202124595642`, 0.2738291323184967`, \
-0.2985136806964874`], List[-0.3545224666595459`, 0.45004957914352417`, \
-0.6168292164802551`, 0.15135636925697327`, 0.6445160508155823`, \
0.4037705957889557`, 0.3797319829463959`, -0.4245952069759369`, \
0.34834787249565125`], List[-0.2755165994167328`, -0.27297553420066833`, \
-0.44510653614997864`, -0.23024488985538483`, 0.1991884708404541`, \
-0.011666926555335522`, 0.3439676761627197`, 0.12889574468135834`, \
-0.32843124866485596`], List[1.135640263557434`, -0.2896031439304352`, \
-0.5909157395362854`, 0.2681869864463806`, -0.07719293236732483`, \
0.025726143270730972`, -0.4422725439071655`, 0.08118036389350891`, \
0.4022643268108368`], List[0.2895057499408722`, 0.49109306931495667`, \
-0.26828521490097046`, 0.22581180930137634`, -0.23162707686424255`, \
0.13656796514987946`, 0.4786456227302551`, -0.18079617619514465`, \
-0.751209557056427`], List[-0.13664263486862183`, -0.4362390637397766`, \
-0.08726069331169128`, 0.37119027972221375`, 0.4290711581707001`, \
-0.12117315083742142`, 0.16586771607398987`, -0.046279046684503555`, \
-0.041426774114370346`], List[0.32527920603752136`, -0.10341030359268188`, \
-0.5999037623405457`, -0.40323036909103394`, -0.5170480608940125`, \
-0.03897251933813095`, 0.026844944804906845`, 0.027356065809726715`, \
-0.07485645264387131`], List[-0.16217467188835144`, 0.45573607087135315`, \
-0.02746248058974743`, -0.02064630389213562`, 0.3925214111804962`, \
0.5437646508216858`, 0.3017883598804474`, 0.4940774440765381`, \
-1.1180137395858765`], List[0.13170428574085236`, 0.3766573667526245`, \
0.29200467467308044`, -0.44970521330833435`, 0.14408665895462036`, \
0.18625302612781525`, -0.16104869544506073`, 0.40859904885292053`, \
0.04328501224517822`], List[0.3922278881072998`, 0.34273743629455566`, \
0.23769144713878632`, 0.27898475527763367`, -0.1316114366054535`, \
-0.19414347410202026`, -0.12186639755964279`, 0.09938866645097733`, \
0.8567876815795898`], List[-0.002291486132889986`, 0.4477890133857727`, \
0.15745295584201813`, -0.0399809256196022`, 0.12120793014764786`, \
0.08749629557132721`, -0.1592520922422409`, 0.3721342980861664`, \
0.029020575806498528`], List[-0.31602802872657776`, 0.6225473284721375`, \
-0.8563281297683716`, 0.15810993313789368`, -0.0016780529404059052`, \
0.794868528842926`, -0.15702517330646515`, 0.40660157799720764`, \
-0.2862715721130371`], List[0.26271018385887146`, 0.0594397597014904`, \
-0.13240884244441986`, -0.17784692347049713`, -0.43241673707962036`, \
-0.03736482933163643`, -0.8969855904579163`, 0.2866676449775696`, \
0.5164644718170166`], List[0.1954335719347`, 0.36788269877433777`, \
-0.3774826228618622`, -0.6052183508872986`, 0.03395292907953262`, \
0.4752822816371918`, -0.12883968651294708`, -0.15887951850891113`, \
-0.013051191344857216`], List[-0.46760788559913635`, 0.3027907609939575`, \
-0.10701248049736023`, -0.42631059885025024`, 0.2369767278432846`, \
0.33754971623420715`, -0.05194045975804329`, 0.034607067704200745`, \
-0.35143211483955383`], List[0.33229339122772217`, -0.531445324420929`, \
-0.5026278495788574`, 0.2766217887401581`, -0.07150352001190186`, \
-0.19835497438907623`, -0.07548996061086655`, 0.9669865369796753`, \
-0.3782917559146881`], List[0.2801341712474823`, 0.24035079777240753`, \
-0.37582266330718994`, 0.1722068041563034`, -0.017151638865470886`, \
0.07818286120891571`, 0.3524913489818573`, 0.19016100466251373`, \
-0.31985175609588623`], List[0.26734471321105957`, 0.498241126537323`, \
0.2291247546672821`, -0.07707913219928741`, -0.0830126404762268`, \
-0.45659130811691284`, -0.10140009224414825`, 0.26879164576530457`, \
-0.09830139577388763`], List[-0.5061553120613098`, 0.0022589995060116053`, \
0.15630897879600525`, 0.27074459195137024`, -0.34838831424713135`, \
0.05315786600112915`, 0.18877987563610077`, -0.6017982363700867`, \
-0.296688437461853`], List[0.4245492219924927`, -0.07231033593416214`, \
-0.11533338576555252`, -0.39670872688293457`, 0.08166976273059845`, \
-0.22897163033485413`, -0.0373113639652729`, 0.2793227434158325`, \
-0.18566620349884033`], List[0.18960785865783691`, 0.3458932042121887`, \
-0.2384927123785019`, 0.5007370710372925`, 0.3138138949871063`, \
0.5495890378952026`, -0.4541100263595581`, 0.03354278951883316`, \
0.13985420763492584`], List[-0.04570317268371582`, 0.2460070252418518`, \
0.1416606456041336`, -0.12405139207839966`, 0.5932475328445435`, \
0.22795470058918`, 0.2934301197528839`, 0.0801498144865036`, \
0.3518645167350769`], List[0.209067240357399`, 0.3724527359008789`, \
-0.0009560862672515213`, 0.20147334039211273`, 0.3090948760509491`, \
-0.11240733414888382`, -0.32074207067489624`, -0.03590240702033043`, \
0.3936568796634674`], List[0.7877712249755859`, -0.059760406613349915`, \
0.08904169499874115`, -0.5875014066696167`, -0.010458369739353657`, \
0.2959323227405548`, -0.11536931246519089`, 0.21756604313850403`, \
0.06128077208995819`], List[0.4172285795211792`, -0.8073537945747375`, \
-0.024488475173711777`, 0.20084349811077118`, 0.011983875185251236`, \
-0.40770018100738525`, 0.19019122421741486`, 0.38737472891807556`, \
-0.09086863696575165`], List[0.405749648809433`, -0.22014188766479492`, \
0.09302785992622375`, 0.2780304253101349`, -0.09004358947277069`, \
0.14884944260120392`, 0.26140567660331726`, -0.06053468585014343`, \
-0.16611996293067932`], List[-0.4863741397857666`, 0.11291444301605225`, \
-0.22080586850643158`, -0.01880413107573986`, -0.26949167251586914`, \
0.1406985968351364`, -0.2938636243343353`, -0.04769033193588257`, \
0.15379184484481812`], List[-0.4810469448566437`, 0.42790284752845764`, \
0.07543817907571793`, 0.03599093109369278`, 0.30870798230171204`, \
0.05559595301747322`, -0.5172789096832275`, 0.07982054352760315`, \
0.16850009560585022`], List[0.7302711606025696`, -0.08916133642196655`, \
0.15067806839942932`, 0.12793047726154327`, -0.023067301139235497`, \
-0.48279643058776855`, -0.43929171562194824`, 0.505054771900177`, \
-0.08115485310554504`], List[0.20874284207820892`, 0.05076679587364197`, \
0.12299265712499619`, -0.7217181324958801`, -0.019509993493556976`, \
0.15758173167705536`, -0.0345248319208622`, 0.11166226863861084`, \
0.18876558542251587`], List[-0.12010371685028076`, 0.321214884519577`, \
-0.02837139181792736`, 0.3201087713241577`, -0.5156776309013367`, \
0.18898101150989532`, 0.9442706108093262`, -0.17375333607196808`, \
0.07108709216117859`], List[-0.1421143263578415`, 0.5067741274833679`, \
-0.0407596230506897`, 0.11688807606697083`, -0.36251118779182434`, \
0.3562803864479065`, 0.5460411310195923`, 0.043691910803318024`, \
-0.22718296945095062`], List[-0.17141854763031006`, 0.2273387759923935`, \
0.1747654527425766`, -0.08068513125181198`, 0.03283100202679634`, \
0.20663534104824066`, -0.21035172045230865`, 0.16613076627254486`, \
0.1552112102508545`], List[-0.22965364158153534`, 0.06731626391410828`, \
0.18348199129104614`, -0.2303047925233841`, 0.47871899604797363`, \
0.10031872987747192`, -0.14089933037757874`, -0.4233468770980835`, \
-0.0763261541724205`], List[0.17403720319271088`, -0.25425028800964355`, \
0.3281426429748535`, 0.05471377074718475`, -0.12443040311336517`, \
-0.4766627252101898`, 0.19267739355564117`, -0.1924499124288559`, \
0.7083666920661926`], List[-0.14741477370262146`, 0.3355497717857361`, \
-0.18246543407440186`, -0.7805359363555908`, 0.2118496596813202`, \
0.1836565136909485`, 0.49963635206222534`, 0.4303573668003082`, \
-0.05495163053274155`], List[0.1142817884683609`, 0.2165672928094864`, \
-0.1509932428598404`, -0.23356449604034424`, -0.6533068418502808`, \
-0.3126901388168335`, 0.4356204569339752`, -0.1037573292851448`, \
-0.17263923585414886`], List[0.10615052282810211`, -0.13845327496528625`, \
0.11688720434904099`, 0.3744066059589386`, -0.06057777628302574`, \
-0.001352898427285254`, -0.4351048171520233`, 0.29401692748069763`, \
0.24493823945522308`], List[-0.11228270828723907`, -0.11752118170261383`, \
-0.24018336832523346`, 0.20602847635746002`, 0.479596883058548`, \
0.15289942920207977`, 0.05293618142604828`, -0.1896096169948578`, \
-0.1874532401561737`], List[-0.28547245264053345`, 0.06183011829853058`, \
0.056735970079898834`, -0.22261790931224823`, -0.09154044091701508`, \
0.11074430495500565`, 0.7220212817192078`, -0.2596607506275177`, \
-0.22777961194515228`], List[-0.42526477575302124`, 0.5192554593086243`, \
-0.420825719833374`, -0.0542169027030468`, 0.18017897009849548`, \
0.22453317046165466`, -0.24235183000564575`, 0.21841475367546082`, \
-0.001013101078569889`], List[0.14115308225154877`, -0.012464858591556549`, \
0.006429685279726982`, -0.08338285982608795`, 0.6265051364898682`, \
-0.22742202877998352`, 0.1928739994764328`, 0.17434197664260864`, \
0.3389594256877899`], List[-0.22005556523799896`, -0.14710108935832977`, \
-0.13667117059230804`, 0.09441990405321121`, 0.6029067635536194`, \
0.4839520752429962`, -0.07971476018428802`, -0.020714128389954567`, \
0.16000643372535706`], List[-0.260475754737854`, 0.04291832074522972`, \
0.06834647804498672`, -0.044275157153606415`, 0.2958850562572479`, \
0.26289859414100647`, -0.29503950476646423`, -0.3533533215522766`, \
0.5557618141174316`], List[-0.4249122440814972`, -0.02453320100903511`, \
0.017422199249267578`, -0.38932114839553833`, -0.6915526390075684`, \
0.6158058643341064`, 0.7428083419799805`, -0.07605688273906708`, \
-0.08732659369707108`], List[-0.16582734882831573`, -0.07984234392642975`, \
-0.2491479367017746`, 0.38583648204803467`, 0.008080440573394299`, \
0.0248081237077713`, -0.08841446787118912`, -0.14144188165664673`, \
0.2815594971179962`], List[0.4693391025066376`, 0.34544867277145386`, \
0.09093966335058212`, 0.9134631156921387`, -0.3037063479423523`, \
0.20491115748882294`, -0.1763468086719513`, 0.0406094454228878`, \
0.021436158567667007`], List[-0.05411667004227638`, -0.08556566387414932`, \
-0.5068187713623047`, 0.4829022288322449`, -0.32183340191841125`, \
-0.002731087850406766`, 0.31877216696739197`, 0.2787071466445923`, \
-0.11707715690135956`], List[-0.5642439723014832`, 0.9004257321357727`, \
0.13841429352760315`, -0.11181846261024475`, -0.09364678710699081`, \
0.12097259610891342`, -0.3596777021884918`, -0.23452700674533844`, \
0.47726136445999146`], List[0.15933667123317719`, -0.5740842223167419`, \
0.1445559859275818`, 0.2009049504995346`, -0.6382194757461548`, \
-0.03401389345526695`, 0.4749314785003662`, -0.12053003907203674`, \
-0.07413347065448761`], List[-0.5170167088508606`, -0.20557083189487457`, \
-0.35917800664901733`, 0.16441187262535095`, -0.03164123743772507`, \
0.02816860005259514`, 0.20169007778167725`, 0.09221015125513077`, \
0.18106845021247864`], List[0.10130499303340912`, 0.090415358543396`, \
0.24919496476650238`, -0.21016179025173187`, 0.2283778339624405`, \
-0.27368810772895813`, -0.22004079818725586`, -0.2999582290649414`, \
0.021466970443725586`], List[-0.12525679171085358`, -0.1539241075515747`, \
-0.33230555057525635`, 0.0008387343259528279`, 0.2991461157798767`, \
0.3911428451538086`, 0.0949469804763794`, 0.04931199550628662`, \
-0.006370131392031908`], List[0.20528505742549896`, 0.30781155824661255`, \
-0.1751159280538559`, -0.2190442979335785`, -0.6560042500495911`, \
0.1538417935371399`, 0.5645711421966553`, -0.6282116770744324`, \
-0.36329326033592224`], List[0.7639521360397339`, 0.23927178978919983`, \
0.0008147930493578315`, -0.08375809341669083`, 0.009979203343391418`, \
0.2425236999988556`, -0.3833742141723633`, -0.024158474057912827`, \
0.3170769512653351`], List[-0.5365582704544067`, 0.014620231464505196`, \
-0.08051476627588272`, -0.3194691240787506`, -0.028943659737706184`, \
-0.6462967395782471`, 0.2136247456073761`, 0.18644101917743683`, \
0.7223593592643738`], List[-0.07527545839548111`, -0.6046292185783386`, \
-0.17468030750751495`, 0.06678745895624161`, -0.13348864018917084`, \
-0.6217470765113831`, -0.16058361530303955`, -0.40546488761901855`, \
-0.3769676387310028`]], \\\"Real32\\\"]]], Rule[\\\"Version\\\", List[12.`, \
0]], Rule[\\\"ID\\\", 7204649762786858506]]], \
MachineLearning`MLProcessor[\\\"FirstValues\\\", \
Association[Rule[\\\"Info\\\", Association[Rule[\\\"Weight\\\", 1], \
Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]], Rule[\\\"Key\\\", \\\"f1\\\"], \
Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], Rule[\\\"Missing\\\", \
\\\"Allowed\\\"]]]]], Rule[\\\"Invertibility\\\", \\\"Impossible\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], Rule[\\\"Method\\\", \
\\\"NearestNeighbors\\\"], Rule[\\\"PostProcessor\\\", \
MachineLearning`MLProcessor[\\\"Identity\\\"]], Rule[\\\"Options\\\", \
Association[Rule[\\\"NeighborsNumber\\\", Association[Rule[\\\"Value\\\", \
50], Rule[\\\"Options\\\", Association[]]]], Rule[\\\"DistributionSmoothing\\\
\", Association[Rule[\\\"Value\\\", 0.5`], Rule[\\\"Options\\\", \
Association[]]]], Rule[\\\"NearestMethod\\\", Association[Rule[\\\"Value\\\", \
\\\"KDtree\\\"], Rule[\\\"Options\\\", Association[]]]]]]]], \
Rule[\\\"TrainingInformation\\\", Association[Rule[\\\"PanelCell\\\", \
CellObject[201681]], Rule[\\\"TrainingFunction\\\", Classify], \
Rule[\\\"EMIterations\\\", Missing[\\\"KeyAbsent\\\", \\\"EMIterations\\\"]], \
Rule[\\\"ProcessorEntropyShift\\\", 0], Rule[\\\"PreprocessingTime\\\", \
0.1200265`6.530822135653541], Rule[\\\"LossName\\\", \
\\\"MeanCrossEntropy\\\"], Rule[\\\"BestModelInformation\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"14\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]], Rule[\\\"Configurations\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"10\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]], Rule[\\\"MaxTrainingSize\\\", 137], \
Rule[\\\"PreprocessorEvaluationTime\\\", 4.6485139580686`3.*^-6], \
Rule[\\\"PreprocessorMemory\\\", 43368], Rule[\\\"InputDimension\\\", 1], \
Rule[\\\"OutputDimension\\\", 1], Rule[\\\"BaselineLogProbability\\\", \
-1.0717287302022056`], Rule[\\\"VariableBudget\\\", True], \
Rule[\\\"CheckpointingInfo\\\", Association[Rule[\\\"Checkpointing\\\", \
False]]], Rule[\\\"UserStop\\\", False], Rule[\\\"NaturalStop\\\", True], \
Rule[\\\"AbortStop\\\", False], Rule[\\\"LastReportingTime\\\", \
3.7710698432335728`17.32903956512167*^9], Rule[\\\"RoundPartitioning\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"2\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]]]], Rule[\\\"Log\\\", Association[Rule[\\\"Example\\\", \
MachineLearning`MLDataset[Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1], \
Rule[\\\"Values\\\", List[\\\"For the function \
W(x)=ln(1+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)) and \
the point x=1, find the secants at point Q and the tangenet line\\\"]], Rule[\
\\\"ID\\\", 4654099653526711133]]]], Association[Rule[\\\"ExampleNumber\\\", \
1], Rule[\\\"ExampleWeights\\\", 1], Rule[\\\"LogDensityRatios\\\", 0], Rule[\
\\\"RawExample\\\", False]]]], Rule[\\\"TrainingTime\\\", \
1.1817953044690073`], Rule[\\\"MaxTrainingMemory\\\", 1446536], \
Rule[\\\"DataMemory\\\", 14552], Rule[\\\"FunctionMemory\\\", 230504], \
Rule[\\\"LanguageVersion\\\", List[12.`, 0]], Rule[\\\"Date\\\", \
DateObject[List[2019, 7, 2, 15, 24, 3.397786`8.283771003554588], \
\\\"Instant\\\", \\\"Gregorian\\\", -4.`]], Rule[\\\"ProcessorCount\\\", 2], \
Rule[\\\"ProcessorType\\\", \\\"x86-64\\\"], Rule[\\\"OperatingSystem\\\", \\\
\"Windows\\\"], Rule[\\\"SystemWordLength\\\", 64], Rule[\\\"Evaluations\\\", \
List[]]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]]\\) should be a rule, a list of rules, or an \
association.\"",2,162,12,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.7710862057331266`*^9, {3.7710863743998404`*^9, 
   3.7710863783357706`*^9}},ExpressionUUID->"1d8f8f8b-c4e6-46ce-8c8a-\
26728a5e6575"]
}, {32}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<algebra 1\>\"", "\[Rule]", "algebra1Questions"}], ",", " ", 
     RowBox[{"\"\<algebra 2\>\"", "\[Rule]", "algebra2Qs"}], ",", " ", 
     RowBox[{"\"\<calc\>\"", "\[Rule]", "calcQs"}]}], "|>"}], ",", 
   "\"\<What is 1+1\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.771086219309965*^9, 3.7710862397414465`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"0e5167e4-a541-4d73-b849-a55c13d9c21b"],

Cell[BoxData["\<\"calc\"\>"], "Output",
 CellChangeTimes->{3.771086242000599*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"dac32faf-ccdb-44a9-a09c-d244ee808903"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"questionClassifier", ",", " ", "\"\<TopProbabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7710863659772167`*^9, 3.7710864160088315`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"7a7b582e-f1b0-45c7-9a14-0ec0c8432fc4"],

Cell[BoxData[
 TemplateBox[{
  "Classify","bdfmt",
   "\"Argument \
\\!\\(\\*InterpretationBox[RowBox[{TagBox[\\\"ClassifierFunction\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquarePlusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Nominal\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
\\\"\\\\\\\"algebra 1\\\\\\\"\\\", \\\"\\\\\\\"algebra 2\\\\\\\"\\\", \
\\\"\\\\\\\"calc\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", List[List[2]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SquareMinusIconMedium\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], Rule[Alignment, List[Center, \
Center]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\
\"FontCapHeight\\\"], Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \
GraphicsBox[List[List[PointSize[0.13`], GrayLevel[0.45`], \
PointBox[List[List[0.9821769431797024`, -0.440194219686987`], \
List[1.1339776261519132`, 0.8056918676854272`], List[0.5279892326667741`, \
0.6574306661126254`], List[0.022147046479890797`, 1.4937877187998898`]]], \
GrayLevel[0.7`], PointBox[List[List[-0.9815166384819979`, \
0.15045697525228735`], List[-0.5923526886966953`, -0.33441771553094035`], \
List[-0.005656646679640442`, -1.462421365651345`], List[-1.0734370436522753`, \
-1.3729645043477454`]]]], List[GrayLevel[0.55`], AbsoluteThickness[1.5`], \
LineBox[List[List[-1.`, 1.5`], List[1, -1.6`]]]]], List[Rule[Axes, \
List[False, False]], Rule[AxesLabel, List[None, None]], Rule[AxesOrigin, \
List[0, 0]], Rule[BaseStyle, List[Rule[FontFamily, \\\"Arial\\\"], \
AbsoluteThickness[1.5`]]], Rule[DisplayFunction, Identity], Rule[Frame, \
List[List[True, True], List[True, True]]], Rule[FrameLabel, List[List[None, \
None], List[None, None]]], Rule[FrameStyle, Directive[Thickness[Tiny], \
GrayLevel[0.7`]]], Rule[FrameTicks, List[List[None, None], List[None, \
None]]], Rule[GridLines, List[None, None]], Rule[LabelStyle, \
List[Rule[FontFamily, \\\"Arial\\\"]]], Rule[Method, \
List[Rule[\\\"ScalingFunctions\\\", None]]], Rule[PlotRange, List[List[-1.`, \
1], List[-1.3`, 1.1`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[0.7`, 0.7`], List[0.7`, 0.7`]]], Rule[Ticks, \
List[None, None]]], Rule[Axes, False], Rule[AspectRatio, 1], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]], Rule[Frame, True], \
Rule[FrameTicks, None], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[Background, GrayLevel[0.94`]]], \
GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Input type: \\\\\\\"\\\", \\\
\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\\\
\"Nominal\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Classes: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
\\\"\\\\\\\"algebra 1\\\\\\\"\\\", \\\"\\\\\\\"algebra 2\\\\\\\"\\\", \
\\\"\\\\\\\"calc\\\\\\\"\\\"], \\\"RowWithSeparators\\\"], \
\\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\"Method: \\\\\\\"\
\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\
\"\\\\\\\"NearestNeighbors\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Number of training examples: \
\\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"137\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Rows\\\", List[List[Top]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaselinePosition, List[1, 1]]]]], Dynamic[Typeset`open$$], \
Rule[ImageSize, Automatic]]], \\\"SummaryPanel\\\"], \
RuleDelayed[DynamicModuleValues, List[]]], \\\"]\\\"}], \
ClassifierFunction[Association[Rule[\\\"ExampleNumber\\\", 137], \
Rule[\\\"ClassNumber\\\", 3], Rule[\\\"Input\\\", \
Association[Rule[\\\"Preprocessor\\\", \
MachineLearning`MLProcessor[\\\"ToMLDataset\\\", Association[Rule[\\\"Input\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\
\"]]]]], Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Preprocessor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"List\\\"], \
MachineLearning`MLProcessor[\\\"WrapMLDataset\\\", \
Association[Rule[\\\"FeatureTypes\\\", List[\\\"Nominal\\\"]], \
Rule[\\\"FeatureKeys\\\", List[\\\"f1\\\"]], Rule[\\\"FeatureWeights\\\", \
Automatic], Rule[\\\"ExampleWeights\\\", Automatic], Rule[\\\"RawExample\\\", \
Missing[\\\"KeyAbsent\\\", \\\"RawExample\\\"]]]]]]]]], \
Rule[\\\"ScalarFeature\\\", True], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"Processor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"NominalVector\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Processors\\\", List[MachineLearning`MLProcessor[\\\"ToVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 1537627216228573037]]], \
MachineLearning`MLProcessor[\\\"ImputeMissing\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Imputed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"VectorLength\\\", 1], Rule[\\\"Output\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \
\\\"NominalVector\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Type\\\", \
\\\"NominalVector\\\"], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 4026204838636604962]]], \
MachineLearning`MLProcessor[\\\"IntegerEncodeNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[\\\"2+3\\\", 1], Rule[\\\"2/3 x+3 =15\\\", 2], \
Rule[\\\"-3(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)-2x+7)\\\", 3], Rule[\\\"5(2x+4)\\\", 4], \
Rule[\\\"-(5\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)-8)\\\
\", 5], Rule[\\\"8x-2=22\\\", 6], Rule[\\\"Add 1/2 and 1/3\\\", 7], \
Rule[\\\"A salesman is paid a monthly salary of $2,300 plus 7% commission on \
his monthly sales.\\\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\\\", 8], Rule[\\\"A salesman tells you that the \
$140 earrings are already marked 20% off. What\\\\nwas the original \
price?\\\", 9], Rule[\\\"A $750 watch is on sale for 15% off. Find the sale \
price.\\\", 10], Rule[\\\"Combine 2 \
\\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)x +5 \\\\!\\\\(\\\
\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)y - 1/2 \
\\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \\\\(4\\\\)]\\\\)x\\\", 11], Rule[\
\\\"Combine like terms of 3a-6a+10a-a\\\", 12], Rule[\\\"Combine like terms \
of 3n-5\\\\!\\\\(\\\\*SuperscriptBox[\\\\(n\\\\), \\\\(\\\\(2\\\\)\\\\(\\\\\\\
\\ \\\\)\\\\)]\\\\)+6n-10+2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(n\\\\), \
\\\\(2\\\\)]\\\\)\\\", 13], Rule[\\\"Combine the like terms of 5x-10y+6z-3x\\\
\", 14], Rule[\\\"Compute  the difrence quotient for the given function\\\", \
15], Rule[\\\"Determine f (x) given that f'(x) = 6x^8 \\\\[Minus] 20x^4 + x^2 \
+ 9\\\", 16], Rule[\\\"Determine \
ln(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(4\\\\)]\\\\))\\\", 17], \
Rule[\\\"Evaluate 2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)-9 for x=-3\\\", 18], Rule[\\\"Evaluate \
a-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(b\\\\), \\\\(2\\\\)]\\\\) when a=4 and \
b=2\\\", 19], Rule[\\\"Evaluate \
f(x)=3-5x-2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) for \
the below values: f(0), f(x+h), f(6-t)\\\", 20], Rule[\\\"Evaluate \\\\!\\\\(\
\\\\*SuperscriptBox[\\\\(a\\\\), \\\\(2\\\\)]\\\\)+b when a=7 and b=1\\\", \
21], Rule[\\\"Evaluate \\\\!\\\\(\\\\*SuperscriptBox[\\\\(a\\\\), \
\\\\(2\\\\)]\\\\)-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(b\\\\), \
\\\\(2\\\\)]\\\\) when a=5 and b=3\\\", 22], Rule[\\\"Evaluate the derivative\
\\\", 23], Rule[\\\"Evaluate \\\\[Integral]z^6 + 4z^4 \\\\[Minus] z^2 dz\\\", \
24], Rule[\\\"Expand (a+b\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(3\\\\)]\\\\)\\\", 25], Rule[\\\"express 12 1/3 as an improper fraction\\\
\", 26], Rule[\\\"express 3 2/7 as an improper fraction\\\", 27], \
Rule[\\\"Express 42/5 as a mixed number\\\", 28], Rule[\\\"Express 53/9 as a \
mixed number\\\", 29], Rule[\\\"Find a perpedicular line of y=3x+2 with y \
intercept of the origin\\\", 30], Rule[\\\"Find extrema of \
f(x)=12+6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\)-\\\\!\\\
\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(3\\\\)]\\\\)\\\", 31], Rule[\\\"Find \
extrema of g(w)=tan (w)sec(w)\\\", 32], Rule[\\\"Find inverse of W (x) =  (9 \
\\\\[Minus]11x\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/5\\\\)]\\\\)\\\", 33], Rule[\\\"Find the area under the curve of |x| \
from -1 to 1\\\", 34], Rule[\\\"Find the Derivative\\\", 35], Rule[\\\"Find \
the derivative of 2 cos(x)+arccos(x)\\\", 36], Rule[\\\"Find the derivative \
of f(x)=2\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(x\\\\)]\\\\)-\\\\!\\\
\\(\\\\*SuperscriptBox[\\\\(8\\\\), \\\\(x\\\\)]\\\\)\\\", 37], Rule[\\\"Find \
the derivative of g(t)=4 \\\\!\\\\(\\\\*SubscriptBox[\\\\(log\\\\), \
\\\\(3\\\\)]\\\\)(t)-ln(t)\\\", 38], Rule[\\\"Find the derivative of \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\)/\\\\!\\\\(\\\\*SuperscriptBox[\\\\(y\\\\), \
\\\\(3\\\\)]\\\\)=1\\\", 39], Rule[\\\"Find the deriviative of f (x) = \
2cos(x) \\\\[Minus] 6sec(x) + 3\\\", 40], Rule[\\\"Find the deriviative of g \
(z) =10 tan (z) \\\\[Minus] 2cot (z)\\\", 41], Rule[\\\"Find the deriviative \
of R(t)=(t+ tan(t))/(1+csc(t))\\\", 42], Rule[\\\"Find the deriviative of  \
tan (w)sec(w)\\\", 43], Rule[\\\"Find the domain of \
(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(w\\\\), \\\\(3\\\\)]\\\\)-3w+1)/(12 \
w-7)\\\", 44], Rule[\\\"Find the equation of best fit for the below listed \
data\\\", 45], Rule[\\\"Find the exact value of cos(5 \\\\[Pi]/6) without \
using a calculator\\\", 46], Rule[\\\"Find the exact value of sin(-4 \
\\\\[Pi]/3) without using a calculator\\\", 47], Rule[\\\"Find the integral\\\
\", 48], Rule[\\\"Find the inverse of f (x) = 6x +15\\\", 49], Rule[\\\"Find \
the MacLauren Expanision of z(n)= \
(z+1\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(1/2\\\\)]\\\\)/(z+4)\\\", \
50], Rule[\\\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\\\\[Pi]/4\\\", 51], Rule[\\\"Find \\\\[Integral]12 + csc(\\\\[Theta] ) \
[sin (\\\\[Theta] ) + csc(\\\\[Theta] )] d\\\\[Theta]\\\", 52], Rule[\\\"Find \
\\\\[Integral] 2cos (w) \\\\[Minus] sec(w) tan (w)dw\\\", 53], Rule[\\\"Find \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
dx \\\\[Minus]18x + 7\\\", 54], Rule[\\\"Find \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
\\\\[Minus]18\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) + 7 \
dx\\\", 55], Rule[\\\"For the function \
(2-(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(t\\\\), \
\\\\(2\\\\)]\\\\)+3\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/2\\\\)]\\\\))/(t+1), L'Hoptial's rule to find the limit as x \
approaches -1\\\", 56], Rule[\\\"For the function \
f(x)=(8-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\))/(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\
\\)-4), find the values at the below listed points and th limit as x \
aproaches 2\\\", 57], Rule[\\\"For the function \
f(x)=(8-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \
\\\\(2\\\\)]\\\\))/(\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\
\\)-4), use L'Hoptial's rule to find the limit as x aproaches 2\\\", 58], \
Rule[\\\"For the function f(y)= sin(y)/y find the value at the below listed \
points and the limit as y approaches 0\\\", 59], Rule[\\\"For the function \
W(x)=ln(1+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)) and \
the point x=1, find the secants at point Q and the tangenet line\\\", 60], \
Rule[\\\"Graph the inequality y<3x+4\\\", 61], Rule[\\\"Graph the parabola \
give by \\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\)+3x+2. \
Find the zeros, vertex and intercept\\\", 62], Rule[\\\"How many miutes are \
in a day?\\\", 63], Rule[\\\"Identify the property used in the equations \
below as distributive, inverse or associative\\\", 64], Rule[\\\"Is x=-8 a \
solution to 1/2x+6>3?\\\", 65], Rule[\\\"Multiply 24/3 and 27/8\\\", 66], \
Rule[\\\"Multiply 8 and 3/24\\\", 67], Rule[\\\"Plot 1.25, 2/3 and 2 on a \
number line\\\", 68], Rule[\\\"Simplify 10-(7+1)\\\", 69], Rule[\\\"Simplify \
10-7+1\\\", 70], Rule[\\\"Simplify (15-3)/(1+5)\\\", 71], Rule[\\\"Simplify \
24/(4-2\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(3\\\\)]\\\\)\\\", 72], \
Rule[\\\"Simplify (2-5\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(2\\\\)]\
\\\\)\\\", 73], Rule[\\\"Simplify \
2-\\\\!\\\\(\\\\*SuperscriptBox[\\\\(5\\\\), \\\\(2\\\\)]\\\\)\\\", 74], \
Rule[\\\"Simplify 4+5(1+12/6\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(2\
\\\\)]\\\\)\\\", 75], Rule[\\\"Sketch the graph of \
f(x)=\\\\!\\\\(\\\\*SuperscriptBox[\\\\(3\\\\), \\\\(1 + 2  x\\\\)]\\\\)\\\", \
76], Rule[\\\"Sketch the graph of \
h(x)=8+3\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(2  t - 4\\\\)]\\\\)\\\
\", 77], Rule[\\\"Solve 3sec(4 \\\\[Minus] 9z) \\\\[Minus] 24 = 0\\\", 78], \
Rule[\\\"Solve 3(x-5)+4=10\\\", 79], Rule[\\\"Solve 3\\\\[Minus]14sin (12t + \
7) =13\\\", 80], Rule[\\\"Solve  4sin (3t ) = 2\\\", 81], Rule[\\\"Solve 4sin \
(3t ) = 2 in [0, 4\\\\[Pi]/3], 2cos(x/3) \
+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(2\\\\), \\\\(0.5\\\\)]\\\\) = 0 in \
[\\\\[Minus]7\\\\[Pi] ,7\\\\[Pi] }\\\", 82], Rule[\\\"Solve 4x-9=11\\\", 83], \
Rule[\\\"Solve 4y sec(7 y) = \\\\[Minus]21y\\\", 84], Rule[\\\"Solve and \
graph the solution to 2x-3<7\\\", 85], Rule[\\\"Solve and graph the solution \
to |3x-1|\\\\[GreaterEqual]10\\\", 86], Rule[\\\"Tommy\\\\[CloseCurlyQuote]s \
grandma gave him a $50 gift card to Toys R Us for his birthday.\\\\nSales tax \
is currently 9%. Determine the price of the most expensive toy Tommy can buy \
with\\\\nthe $50 gift card.\\\", 87], Rule[\\\"Use the chain rule to find the \
derivative of Q(t)=(3\\\\!\\\\(\\\\*SuperscriptBox[\\\\(t\\\\), \
\\\\(3\\\\)]\\\\)-4\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(1/2\\\\)]\\\\)\\\", 88], Rule[\\\"Use the definition of the derivative \
to find the derivative of f(x)=6\\\", 89], Rule[\\\"Use the definition of the \
derivative to find the derivative of V (t ) = 3\\\\[Minus]14t\\\", 90], Rule[\
\\\"Use the definition of the derivative to find the derivative of z(n)= \
(n+1)/(n+4)\\\", 91], Rule[\\\"Use the law of sines to find the missing side \
of this triangle\\\", 92], Rule[\\\"Use the quotient rule to find the \
derivative of z(n)= (z+1\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \\\\(1/2\\\
\\)]\\\\)/(z+4)\\\", 93], Rule[\\\"What are the discontiuities in the \
function y=(x+2)/(x+3x+2). Which are fundamental and which are \
removable?\\\", 94], Rule[\\\"What are the domain and range of \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(e\\\\), \\\\(x\\\\)]\\\\) and ln(x)\\\", \
95], Rule[\\\"What are the domain and range of the trigonometric functions?\\\
\", 96], Rule[\\\"What is |1|\\\", 97], Rule[\\\"What is 10% of 100\\\", 98], \
Rule[\\\"What is 1+1\\\", 99], Rule[\\\"What is  1/2 + 1/3\\\", 100], Rule[\\\
\"What is 12 1/3 as an improper fraction\\\", 101], Rule[\\\"What is 2+2\\\", \
102], Rule[\\\"What is 2+3\\\", 103], Rule[\\\"What is  24/3 * 27/8\\\", \
104], Rule[\\\"What is |-30|\\\", 105], Rule[\\\"What is 3/18 in simplest \
form\\\", 106], Rule[\\\"What is 3-(-2)?\\\", 107], Rule[\\\"What is \
-3+4\\\", 108], Rule[\\\"What is 42/54 in simplest form\\\", 109], \
Rule[\\\"What is 42/5 as a mixed number\\\", 110], Rule[\\\"What is 4% of 16?\
\\\", 111], Rule[\\\"What is 53/9 as a mixed number\\\", 112], Rule[\\\"What \
is  8 * 3/24\\\", 113], Rule[\\\"What is (a+b\\\\!\\\\(\\\\*SuperscriptBox[\\\
\\()\\\\), \\\\(n\\\\)]\\\\) (Hint: What theorem is this?)\\\", 114], Rule[\\\
\"What is ln(1)?\\\", 115], Rule[\\\"What is sin(60)\\\", 116], Rule[\\\"What \
is tan(30)\\\", 117], Rule[\\\"What is the absolute value of -1?\\\", 118], \
Rule[\\\"What is the area under the curve \
\\\\!\\\\(\\\\*SuperscriptBox[\\\\(sin\\\\), \\\\(2\\\\)]\\\\)x from 0 to \
\\\\[Pi]/2\\\", 119], Rule[\\\"What is the Deriviative\\\", 120], \
Rule[\\\"What is the integral of sin(2x)?\\\", 121], Rule[\\\"What is the \
integral of x dx\\\", 122], Rule[\\\"What is the largest value for the \
missing side of this triangle\\\", 123], Rule[\\\"What is the most specific \
subset of the real numbers that -7 is a part of?\\\", 124], Rule[\\\"What is \
the next term in the series \\\", 125], Rule[\\\"What is the sum from 1 to 5 \
of a=10n+3\\\", 126], Rule[\\\"what is the sum of the geometric series from 1 \
to infinity of 9(1/10\\\\!\\\\(\\\\*SuperscriptBox[\\\\()\\\\), \
\\\\(n\\\\)]\\\\)?\\\", 127], Rule[\\\"What is \
\\\\[Integral]6\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(5\\\\)]\\\\) \
\\\\[Minus]18\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(2\\\\)]\\\\) + 7 \
dx\\\", 128], Rule[\\\"Wrie the standard form of y=3/2 x+2\\\", 129], Rule[\\\
\"Write 30 degrees in radians\\\", 130], Rule[\\\"write 3/18 in simplest form\
\\\", 131], Rule[Times[\\\"What is 3 2/7 as an improper fraction\\\", \
\\\"write 42/54 in simplest form\\\"], 132], Rule[\\\"Write slope intercept \
form for a slope of 2 and y-intercept of 12\\\", 133], Rule[\\\"Write \
\\\\[Pi]/4 in degrees\\\", 134], Rule[\\\"-x-2=12\\\", 135], Rule[Null, \
136]]]], Rule[\\\"MissingCode\\\", 0], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 8874348951581137712], Rule[\\\"Output\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]]]]]], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Imputed\\\"]]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"Preprocessor\\\", \
MachineLearning`MLProcessor[\\\"ToMLDataset\\\", Association[Rule[\\\"Input\\\
\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\
\"]]]]], Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Preprocessor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"List\\\"], \
MachineLearning`MLProcessor[\\\"WrapMLDataset\\\", \
Association[Rule[\\\"FeatureTypes\\\", List[\\\"Nominal\\\"]], \
Rule[\\\"FeatureKeys\\\", List[\\\"f1\\\"]], Rule[\\\"FeatureWeights\\\", \
Automatic], Rule[\\\"ExampleWeights\\\", Automatic], Rule[\\\"RawExample\\\", \
Missing[\\\"KeyAbsent\\\", \\\"RawExample\\\"]]]]]]]]], \
Rule[\\\"ScalarFeature\\\", True], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"Processor\\\", MachineLearning`MLProcessor[\\\"Sequence\\\", \
Association[Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"ToVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", List[12.`, 0]], \
Rule[\\\"ID\\\", 7740907413418953510]]], \
MachineLearning`MLProcessor[\\\"IntegerEncodeNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[\\\"algebra 1\\\", 1], Rule[\\\"algebra 2\\\", 2], \
Rule[\\\"calc\\\", 3]]]], Rule[\\\"MissingCode\\\", 0], Rule[\\\"Version\\\", \
List[12.`, 0]], Rule[\\\"ID\\\", 3923291764372626615], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1]]]]]]], \
MachineLearning`MLProcessor[\\\"FromVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\
\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], \
Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", List[3]]]]]], \
Rule[\\\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\
\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1]]]]], Rule[\\\"Version\\\", \
List[12.`, 0]], Rule[\\\"ID\\\", 689381485439722164]]], \
MachineLearning`MLProcessor[\\\"FirstValues\\\", \
Association[Rule[\\\"Info\\\", Association[Rule[\\\"Type\\\", \
\\\"Nominal\\\"], Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", 3]]], \
Rule[\\\"Key\\\", \\\"f1\\\"], Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]]], Rule[\\\"Invertibility\\\", \
\\\"Perfect\\\"], Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], \
Rule[\\\"ProbabilityPostprocessor\\\", Identity], Rule[\\\"Name\\\", \
\\\"class\\\"], Rule[\\\"Marginal\\\", Association[Rule[\\\"algebra 1\\\", \
0.37142857142857144`], Rule[\\\"algebra 2\\\", 0.22857142857142856`], Rule[\\\
\"calc\\\", 0.39999999999999997`]]]]], Rule[\\\"Prior\\\", Automatic], \
Rule[\\\"Utility\\\", SparseArray[Automatic, List[3, 4], 0.`, List[1, \
List[List[0, 1, 2, 3], List[List[2], List[3], List[4]]], List[1.`, 1.`, \
1.`]]]], Rule[\\\"Threshold\\\", 0], Rule[\\\"TieBreaker\\\", RandomChoice], \
Rule[\\\"PerformanceGoal\\\", Automatic], Rule[\\\"BatchProcessing\\\", \
Automatic], Rule[\\\"Model\\\", Association[Rule[\\\"NeighborsFunction\\\", \
MachineLearning`PackageScope`NeighborsFunction[\\\"Nearest\\\", \
NearestFunction[Hold[Nearest[Rule[List[List[0.20874287902662356`, \
0.05076760013054465`, 0.12299217336751644`, -0.7217178113767901`, \
-0.01950969285105098`, 0.15758229720049532`, -0.03452407136774974`, \
0.11166155823546944`, 0.18876632146856745`], List[-0.3594795130895579`, \
-0.16042385138793877`, 0.09963466370799849`, 0.5483324399248775`, \
-0.034378135355781936`, 0.009196829528893545`, 0.17572011803586657`, \
-0.3546858694223344`, 0.5273107984733745`], List[-0.5365576313720708`, \
0.01462031426383527`, -0.08051531640664132`, -0.31946909538319324`, \
-0.02894369615382801`, -0.6462972209561233`, 0.21362509803048088`, \
0.1864404763153632`, 0.7223601241934188`], List[0.11428169955115125`, \
0.2165675671799198`, -0.15099286041902274`, -0.23356450220118308`, \
-0.653306347595659`, -0.31269089816647233`, 0.4356209169626309`, \
-0.1037569526941192`, -0.1726383474985441`], List[0.09076148083722635`, \
-0.7724130124795144`, -0.3633984414607187`, 0.44055528880320455`, \
-0.6539328931879371`, -0.4185083086349062`, -0.12365704376200198`, \
0.09404430398690063`, 0.19271983785291286`], List[-0.4676081065897829`, \
0.30279068596913294`, -0.10701208671912901`, -0.4263098012177711`, \
0.23697574243009006`, 0.33755051732080593`, -0.05194023589766424`, \
0.03460633098407323`, -0.3514329810037291`], List[0.13170335014743753`, \
0.376657489075397`, 0.2920051731464742`, -0.4497051066967155`, \
0.1440874775399693`, 0.18625325035164533`, -0.16104804579834978`, \
0.4085984708289707`, 0.04328533320547977`], List[0.10614978292417514`, \
-0.13845376093685008`, 0.11688803121888576`, 0.3744064770466563`, \
-0.06057815674434259`, -0.0013536235535923085`, -0.43510388605203426`, \
0.29401704685689123`, 0.24493780288679798`], List[0.6993706445890546`, \
0.1115644916472831`, 0.17311607252650144`, -0.038341022327356616`, \
0.1306520765355172`, -0.17205235346446685`, -0.17840362356979186`, \
0.006835761686547726`, -0.21315255414120637`], List[-0.11228283862572064`, \
-0.11752194920493007`, -0.2401843105378093`, 0.2060291335668737`, \
0.4795961627587431`, 0.15290001489936247`, 0.05293575857540196`, \
-0.18960889539019632`, -0.18745396406105982`], List[0.28929444211581623`, \
-0.04139896184765097`, 0.4321836837109878`, 0.057571688157827386`, \
-0.7157332584916373`, -0.673392025831568`, 0.20624532623852898`, \
-0.07919576999377469`, -0.034575602943176444`], List[-0.14211389814024747`, \
0.5067736291271908`, -0.04075904961614285`, 0.11688810219608545`, \
-0.3625112173016552`, 0.35627977686819373`, 0.5460409897319862`, \
0.043691481870640356`, -0.22718230951995047`], List[0.2673442840755443`, \
0.49824021931002`, 0.22912496436118365`, -0.07707997678791205`, \
-0.08301340854219655`, -0.45659153489907117`, -0.1014002054342086`, \
0.268792403186081`, -0.09830225542247353`], List[0.1996367226301195`, \
0.17564098182668908`, -0.012801171952048298`, -0.7157202028829195`, \
0.20786069998156775`, 0.08308143352664293`, 0.08612406164217518`, \
0.0037716223529896563`, 0.6886686227462105`], List[0.008347260796583458`, \
-0.03087658403936844`, -0.40197202133273996`, 0.35966348865793`, \
-0.3954058614895362`, 0.715814251527444`, 0.024732690588725466`, \
-0.049388856886686726`, -0.30091962202154`], List[-0.08133418460850446`, \
0.30589212713541625`, -0.2225950134619789`, -0.5297467566362765`, \
-0.38232820804206263`, -0.1730999954173601`, 0.1395611216479457`, \
-0.09086670355775994`, -0.12034914322203075`], List[0.0786951912438882`, \
0.003796088031110102`, 0.2609178724988531`, -0.08581203127629053`, \
-0.2861974018971561`, 0.3895889052812407`, -0.4319916601403748`, \
-0.21363525669285197`, 0.23187084055161056`], List[0.280134251705132`, \
0.24035078840781643`, -0.3758218829699329`, 0.17220737689227084`, \
-0.0171507317251199`, 0.07818343679181021`, 0.35249044102768357`, \
0.19016030557667155`, -0.31985117289380405`], List[-0.22752452792716213`, \
0.029155537966807313`, -0.22030865425983226`, -0.09984461808020004`, \
-0.20492536651100907`, 0.036960527849913376`, 0.28563271601838114`, \
0.183220979967337`, -0.25819738406715487`], List[-0.3545227260045899`, \
0.4500489633030616`, -0.616829959556116`, 0.15135656197218672`, \
0.6445167267695278`, 0.40377009624390214`, 0.37973248435417895`, \
-0.4245961769794931`, 0.34834747458284226`], List[-0.04570269538665324`, \
0.2460061839813122`, 0.14165978440229876`, -0.12405227749400839`, \
0.5932468114242796`, 0.2279556393564271`, 0.29343050721194164`, \
0.0801505345631597`, 0.35186526577299104`], List[-0.09152228216323975`, \
0.31768719717084315`, -0.1488717878250302`, 0.09515446416495542`, \
0.3598480250292752`, 0.09621967727440374`, 0.34684468624004444`, \
0.2993518436246563`, 0.09623757694157219`], List[0.4495386678326473`, \
0.2989116002414778`, 0.1704847968719811`, -0.4519461768574132`, \
0.3830479301501389`, -0.032884480177115274`, -0.5535258771010826`, \
-0.15517593654589323`, -0.18686761017707723`], List[0.5137420607388886`, \
-0.05634970859018103`, -0.09681266038875096`, -0.12021083408010039`, \
0.33463864039756014`, -0.44865042865465604`, -0.4670738581379808`, \
0.022088254733766105`, 0.03985088886666773`], List[0.34363889601989145`, \
-0.3777912717113709`, 0.37584788448768136`, 0.2833635047245089`, \
-0.21780605760908914`, -0.03035958391081397`, -0.40291027298062876`, \
-0.013695143872673768`, -0.24009196743240757`], List[-0.06266126388771766`, \
-0.11711362154648372`, -0.11386633254788112`, 0.011423306452275054`, \
0.07906022194844414`, 0.037982944788481535`, -0.0923555533454689`, \
-0.44632127620348433`, 0.04067860051096198`], List[-0.2551207695865459`, \
-0.5559426709266213`, 0.22716814347115505`, 0.0026638976367955366`, \
-0.02899285704316629`, 0.33735945225049535`, -0.016860088872758108`, \
0.06785295315247933`, 0.12115114051102578`], List[-0.42491212908905396`, \
-0.02453360559490337`, 0.017421609395471098`, -0.38932050287872944`, \
-0.691552387755212`, 0.6158059459144742`, 0.7428083394653718`, \
-0.0760566146571162`, -0.0873273831993349`], List[0.46933994820429226`, \
0.3454480862743675`, 0.09093886677567012`, 0.9134630439487503`, \
-0.303706380148827`, 0.20491076518726314`, -0.17634721343237947`, \
0.04060965569226836`, 0.02143629282893743`], List[-0.08673553407781519`, \
-0.25038015212525894`, -0.2019957663530101`, 0.45501785415030793`, \
0.4028178510996319`, -0.5190522602723715`, -0.23195416934987112`, \
0.2120154489552414`, -0.030324526164113984`], List[0.4945378945368456`, \
0.26868485326149405`, 0.026197273880055442`, 0.09316943958678726`, \
-0.5147454324270786`, 0.00003165341609528542`, 0.4488046910133153`, \
0.029474298644174515`, 0.416588935600327`], List[-0.08133945905484026`, \
0.39410712647261953`, -0.15453432684214938`, -0.5932110435637872`, \
0.34572067259242245`, 0.5475879603672886`, 0.8791973885719282`, \
0.7005171113420935`, 0.7883007236820052`], List[-0.27551702735730177`, \
-0.27297559532912474`, -0.4451059201168938`, -0.23024414179074615`, \
0.1991878956396616`, -0.01166668653439136`, 0.3439681084393318`, \
0.12889496462431263`, -0.3284322408929016`], List[-0.1030299118411174`, \
0.325555317786535`, -0.020379710933565304`, 0.023690673980041637`, \
-0.25176992149715677`, -0.18965997155340658`, 0.21659459025811015`, \
-0.2958058796511218`, 0.4279936777340847`], List[-0.193706799138636`, \
-0.16581841246709947`, 0.09978317991566894`, 0.07784682985479077`, \
-0.1434286777575322`, -0.2539882903557889`, -0.2830966017449637`, \
-0.0941575646109914`, -0.4199799938946097`], List[-0.22965316345041578`, \
0.06731724112316789`, 0.18348191971557576`, -0.23030464471221923`, \
0.4787191700515942`, 0.10031795198805464`, -0.140898553193766`, \
-0.42334740678730565`, -0.07632550063346422`], List[-0.3383822144480971`, \
-0.05653832022286427`, 0.05688138998989475`, 0.8225183746644238`, \
0.6389002427953396`, -0.9710851703540733`, -0.01693772660037855`, \
-0.12618646400173777`, -0.023438725249073263`], List[0.048411419060566487`, \
-0.029510412079914266`, 0.6108093541972673`, -0.5336483493807325`, \
0.13004031112388645`, -0.16995669638771213`, 0.08358901542056327`, \
0.07624629979716718`, 0.4707891588626374`], List[0.07534547294030489`, \
0.19570317136196377`, 0.8213800016028077`, 0.18515624510107173`, \
-0.2070334867287674`, 0.5477599124772589`, -0.38631175087988034`, \
-0.2659828341275149`, -0.1927456489208404`], List[0.31766866040048874`, \
0.27257906000247895`, -0.08534173597651015`, -0.5650156053209847`, \
-0.05241427548628652`, 0.3704908551178045`, -0.1709892634964243`, \
-0.15058952777284768`, 0.1968658292895203`], List[-0.3370698738287689`, \
0.6492241919887263`, 0.15424101249281363`, -0.025644036049699375`, \
0.11186146404803164`, -0.4499098411633441`, 0.028322969017715627`, \
-0.1418704373301254`, -0.3202963795299451`], List[-0.6515587130848055`, \
0.1319219051929129`, -0.2209652208611733`, -0.1629403825527452`, \
-0.22815489685638563`, -0.36087967140507204`, 0.003016676132132802`, \
0.12803408080061252`, 0.4279091953634936`], List[0.20877907964224446`, \
-0.0057544998079518996`, 0.1183841790818105`, 0.30117211789580434`, \
0.5772193447574975`, 0.21656196931117788`, 0.20321968083530906`, \
0.5351129233022265`, 0.020336109579133423`], List[0.7639526600417711`, \
0.23927147868841994`, 0.0008142341064539886`, -0.08375792161366058`, \
0.009978226984107405`, 0.24252378856462156`, -0.3833739969695768`, \
-0.024158178155864678`, 0.3170775974157653`], List[-0.3160271236209324`, \
0.6225468236915149`, -0.8563275233747362`, 0.15811062734253908`, \
-0.00167710274364925`, 0.7948678996429545`, -0.15702568858933014`, \
0.4066013216632693`, -0.2862708476517795`], List[0.3488094535669043`, \
-0.39536847365342326`, -0.10788925162971541`, -0.27202098756522114`, \
0.010240701873752232`, -0.0673296620559716`, -0.02201752562989382`, \
0.19048027529379005`, 0.11101679153943364`], List[-0.18789457774672616`, \
-0.0838619543735332`, 0.30350975899120464`, -0.2595146987478871`, \
0.40557456368504546`, 0.050231489525318`, 0.1437968539236454`, \
-0.40707100210556585`, 0.2795517609776055`], List[0.44733252105322957`, \
-0.24141494081838163`, -0.06415466845491304`, -0.645900266229139`, \
0.4955035485689486`, -0.17883191503904924`, -0.19887840265909318`, \
-0.09203663504817157`, -0.7784434470521396`], List[-0.3818382929931367`, \
0.19993052195500105`, 0.5571983801074892`, -0.7299461830412856`, \
-0.10021958735771684`, -0.5066235012485987`, -0.24464986131986166`, \
-0.7298345166539386`, -0.0962734322087367`], List[1.135640276343542`, \
-0.289604096553808`, -0.5909165011318928`, 0.26818737108806273`, \
-0.07719298033413753`, 0.025726152414889635`, -0.4422726667302176`, \
0.08117988767535687`, 0.4022636395662933`], List[-0.07527472601369956`, \
-0.604629911383174`, -0.17467999583596944`, 0.06678671006068645`, \
-0.1334883101510681`, -0.6217472340461452`, -0.16058289667765835`, \
-0.405465829345206`, -0.3769669872911506`], List[-0.08455873109576686`, \
-0.02453198099065159`, 0.3153151764714562`, 0.20826841450067188`, \
-0.7428676815320632`, -0.25866802296287783`, -0.2320371719007801`, \
0.3596508440611076`, -0.3777203706447362`], List[-0.37968196591290676`, \
-0.47704875849041567`, -0.6385213366667166`, 0.5015003297716015`, \
0.3583792076295074`, -0.3181431224662174`, -0.10594750923291396`, \
-0.1602487808612161`, 0.0937084317177743`], List[0.7302715711053949`, \
-0.08916043862683222`, 0.1506782411616488`, 0.1279303989236035`, \
-0.023067774611477316`, -0.482795938707709`, -0.43929146697284743`, \
0.5050546151732136`, -0.08115527277125914`], List[-0.16582725794399328`, \
-0.0798424203742381`, -0.2491473289476622`, 0.3858371564988335`, \
0.008080257859220405`, 0.024807907153558618`, -0.08841527231705089`, \
-0.14144256256817306`, 0.2815587084151075`], List[0.6993707322516595`, \
0.1115634666529753`, 0.17311510198751606`, -0.038341984929288385`, \
0.1306513488007615`, -0.1720517353309059`, -0.17840362245107508`, \
0.006834874050391562`, -0.2131512652623155`], List[-0.25913600224016853`, \
0.4420896381508019`, -0.3950728655832447`, 0.2348657904633493`, \
0.1750812242945353`, 0.24961259493346707`, 0.40244217990613546`, \
0.39149205291973327`, -0.22119692924020398`], List[0.5950464612423597`, \
-0.3653590762378188`, -0.2770347112193803`, 0.14172302388422134`, \
-0.12145047307079512`, 0.126351794737711`, -0.6250761706781518`, \
0.4033346480118836`, -0.13105036336505138`], List[0.28950602835663075`, \
0.4910929202353126`, -0.2682853968674736`, 0.2258108992680348`, \
-0.23162805031718467`, 0.13656793343356813`, 0.4786464953153419`, \
-0.1807971529049329`, -0.7512087763198596`], List[-0.34900733580673693`, \
-0.08538619007393361`, 0.07444756783077076`, 0.2590291360314095`, \
0.5260827330564427`, 0.10242489761672117`, -0.0957782790058187`, \
-0.49911615965105327`, 0.018216825362685946`], List[-0.4252637828207426`, \
0.519254789140753`, -0.4208258507255675`, -0.0542164744332335`, \
0.1801788150028814`, 0.22453303745698838`, -0.242351239887168`, \
0.21841519108360535`, -0.0010125705150938126`], List[0.10192713695482356`, \
0.16523739202927476`, -0.36494168690346107`, -0.28525193708945884`, \
-0.43740556238093753`, 0.11609586531903311`, 0.11192006849606445`, \
-0.1803563150838122`, -0.39385248840602405`], List[0.2627099502195116`, \
0.05943974609871901`, -0.13240812780815683`, -0.17784621590066169`, \
-0.432415912609308`, -0.03736390776878427`, -0.8969861067597724`, \
0.2866678841867095`, 0.5164641317845157`], List[-0.3916442830393213`, \
0.38879328849515266`, 0.6109291396865102`, -0.014156223580248888`, \
-0.17553426148269835`, -0.6990110775265206`, 0.22981929281342547`, \
-0.6051160448142078`, -0.1159859848634532`], List[0.0299215238877316`, \
-0.19280849671632683`, 0.036525066102937306`, -0.29912287431104445`, \
-0.37482336515977205`, 0.15181456445391223`, 0.13993660003885003`, \
0.14395676966881993`, 0.6199233699838844`], List[0.42454831848251945`, \
-0.07230996565543596`, -0.11533333974397957`, -0.39670824434575946`, \
0.08166892043386316`, -0.22897101575811446`, -0.037310582431729654`, \
0.279322354428391`, -0.18566643301215618`], List[-0.39046950003736625`, \
0.19920876010502908`, -0.5133538506324218`, 0.15004744249688048`, \
-0.41026180937375983`, -0.7000700290551709`, -0.8885369532723615`, \
-0.5680447278762831`, 0.24697318966019732`], List[0.3322940876202558`, \
-0.5314456958613133`, -0.5026281159068638`, 0.27662101039832987`, \
-0.07150425665556988`, -0.19835522984224568`, -0.07549085807811515`, \
0.9669855974266183`, -0.37829181104502646`], List[-0.06308073930380526`, \
-0.08657028133699515`, 0.15125791890361046`, -0.5012487519959512`, \
-0.041637050588429494`, 0.0814743597547742`, -0.4592981595909421`, \
-0.011059948151477756`, -0.04675608151022355`], List[-0.13664247048316064`, \
-0.4362393952334086`, -0.08726032684867374`, 0.37119049571632046`, \
0.4290705794366175`, -0.12117277750307989`, 0.1658681553917835`, \
-0.04627976144871422`, -0.04142654501907702`], List[0.06368755819023038`, \
0.23749796789362487`, 0.17656813722765266`, -0.16103142816285473`, \
0.7223508028471574`, -0.0324672744697649`, -0.3484786621309663`, \
0.30808684350078963`, 0.35070721054861886`], List[-0.13572281645921758`, \
0.271203515519359`, -0.29878868824835064`, 0.20319958072750482`, \
-0.5568729943127333`, 0.006559723511454851`, 0.2819537202825195`, \
-0.19625710861484627`, -0.5195209653844483`], List[-0.12525616331251352`, \
-0.1539231886021072`, -0.33230468416278114`, 0.0008381239064730425`, \
0.29914550089266473`, 0.3911428016453452`, 0.09494692850228265`, \
0.049311913416938996`, -0.006369260710246987`], List[0.649604389751506`, \
0.3247288926012502`, 0.4105425647050521`, 0.3924607989012559`, \
0.7708676746190289`, 0.023929416459328185`, -0.026677654373686344`, \
0.3031462736741994`, -0.19687095126026685`], List[0.18960841202137074`, \
0.3458928874669899`, -0.23849238311982862`, 0.500737598186573`, \
0.3138140282252132`, 0.5495899352411213`, -0.45410956200213515`, \
0.03354194783677001`, 0.13985421171779197`], List[-0.2604765815832215`, \
0.042917344598454296`, 0.06834722891672103`, -0.04427601087619971`, \
0.2958850427445316`, 0.26289858156440754`, -0.29503983413907525`, \
-0.35335335318481276`, 0.5557621406858145`], List[-0.15041904988515012`, \
0.4893337841407504`, 0.3039784389521658`, 0.36038197113422504`, \
-0.06319656783839438`, 0.07138163962466548`, 0.21131971405540828`, \
0.6988107543242317`, 0.04950114269403004`], List[-0.15769883533937587`, \
0.04785276251520545`, 0.8955811207933329`, 0.5174973468034412`, \
0.16342916237500962`, 0.4368364221677568`, -0.2317493333852527`, \
0.7974091442632546`, -0.3477349751305598`], List[0.2090675920068328`, \
0.3724518300309729`, -0.000955216237396284`, 0.20147288414599018`, \
0.3090949314732799`, -0.11240796919254263`, -0.32074260313581815`, \
-0.03590285426102904`, 0.3936563865349585`], List[-0.50615614557493`, \
0.002258602403135732`, 0.15630935689421063`, 0.2707437005669415`, \
-0.34838884976975587`, 0.05315801005395906`, 0.18877918004433142`, \
-0.6017982762113175`, -0.29668880801291636`], List[0.1134587464448435`, \
-0.29978778313216575`, 0.5586837966218207`, -0.18951765829271036`, \
-0.22020413484169168`, -0.5374673695066325`, -0.021252971232965788`, \
-0.04977993055007394`, -0.06891276470173492`], List[0.14115356282760344`, \
-0.012464107953009637`, 0.0064291848469569856`, -0.0833835833715372`, \
0.6265052859206968`, -0.2274214874457897`, 0.1928743878306332`, \
0.17434268919387508`, 0.33895976146077605`], List[0.12146056706638518`, \
0.08822600997115312`, -0.5276589700875568`, 0.1743688529037854`, \
0.07595526525487478`, -0.06023656649961369`, -0.0316238314181319`, \
-0.19720958158014576`, -0.04832927017968282`], List[0.3922274059669975`, \
0.34273645627619076`, 0.23769161112247209`, 0.2789847494043621`, \
-0.13161091020153579`, -0.19414346245211048`, -0.1218666676090055`, \
0.0993894132381497`, 0.8567880811016394`], List[-0.29641989798480095`, \
-0.13964151896450797`, -0.3991424933584305`, 0.5534202209775267`, \
-0.06952833631528567`, 0.18266307424594427`, -0.0028021557597296197`, \
0.718768931941333`, -0.2569440521348632`], List[-0.17141790875848306`, \
0.2273384142254456`, 0.17476519709069263`, -0.08068524912812608`, \
0.0328304497181446`, 0.20663625548371087`, -0.21035218857616933`, \
0.16613052115848864`, 0.15521117876233217`], List[-0.19846621698659267`, \
-0.21217826681976326`, 0.2957255272039071`, -0.10369050812254703`, \
-0.059266418099869426`, 0.4216594545369327`, -0.32192720791388524`, \
0.2615298460053594`, 0.4583350185339478`], List[-0.32712406864981636`, \
-0.5006346612619237`, 0.04977453385389784`, -0.027566609716521164`, \
-0.044840118289667705`, 0.8469813467085209`, -0.23878730147975485`, \
0.1375557214253854`, 0.2290334619981145`], List[-0.5170170359329428`, \
-0.20557169679332182`, -0.359177878883745`, 0.16441115236915949`, \
-0.03164153766772894`, 0.028168825003322375`, 0.2016892625264097`, \
0.09221102138285306`, 0.18106884123923947`], List[-0.2678616107963751`, \
-0.09583176717032524`, 0.5658593182891725`, 0.3012921475846824`, \
0.18115546530239654`, -0.474135342146021`, -0.16503426876118885`, \
0.369258418188094`, 0.2240753088770534`], List[-0.6746456756698453`, \
-0.07398840853482327`, -0.4282664594440127`, 0.3615386503695829`, \
0.18006686597602228`, -0.13439661150466334`, 0.1761112001035316`, \
-0.2424366272016183`, 0.29516032638180756`], List[-0.17057963960075972`, \
-0.4735863643713902`, -0.5377766461673048`, 0.20263570406823225`, \
0.2757840266636262`, -0.5120897540507036`, -0.7782198522518828`, \
-0.22768078869001515`, 0.24691907962212264`], List[-0.3057641641534392`, \
0.19569360220223006`, -0.38238237796943225`, -0.04909472250349194`, \
-0.3265349908199793`, 0.4190156847572954`, 0.16893341173961796`, \
0.15981069422764646`, 0.09115402852083196`], List[-0.05411753075688497`, \
-0.08556660853683688`, -0.5068180029475401`, 0.48290170403471205`, \
-0.3218343884996128`, -0.0027320496909966764`, 0.31877210759938046`, \
0.27870747489960307`, -0.11707652864618859`], List[-0.285473043274214`, \
0.06183013160939251`, 0.05673688031472053`, -0.2226175153759567`, \
-0.09154018617418541`, 0.11074462818882146`, 0.7220209162919877`, \
-0.2596605140189729`, -0.2277792489078885`], List[0.15933745572618865`, \
-0.5740848278950217`, 0.14455664874106558`, 0.20090423250669687`, \
-0.6382199126956035`, -0.034013201074845595`, 0.47493242664242735`, \
-0.12053057178753036`, -0.0741325137654815`], List[0.19543413182814884`, \
0.36788355203238404`, -0.37748234472975584`, -0.6052191712950729`, \
0.03395390346287355`, 0.4752831985658618`, -0.12883926109838834`, \
-0.15887963391271961`, -0.013050716807415935`], List[0.24299915488266927`, \
-0.1250913970371324`, -0.05108582388415028`, 0.03404227200261135`, \
-0.5160475300575409`, 0.3091233315211689`, -0.5094500109400362`, \
0.03855671027109207`, -0.2181429046745454`], List[-0.12010360272753756`, \
0.32121421995052474`, -0.02837146557966537`, 0.32010901703674854`, \
-0.5156782302144831`, 0.18898049839450168`, 0.9442705326914314`, \
-0.17375306340976607`, 0.07108707084962265`], List[0.016375467989809465`, \
0.44809604163552647`, -0.45284417872895955`, -0.48966296108970914`, \
0.214971476316191`, 0.1188528207256086`, 0.5702766676880383`, \
0.09492575967338066`, 0.36233386116556415`], List[0.41722759743723525`, \
-0.8073547668610904`, -0.024488172816665734`, 0.2008434795425218`, \
0.011983324211450649`, -0.4077005700607466`, 0.19019054499111374`, \
0.387374087807272`, -0.09086894098034302`], List[0.0532725897326204`, \
-0.27374489851321604`, 0.003781466952232597`, -0.24803197615314815`, \
0.062305082108779025`, -0.02455623694520868`, -0.22576109502271868`, \
0.06877378866531023`, 0.14188753766549406`], List[0.30849677939551623`, \
0.08045312415061241`, 0.002153275333974313`, -0.351974704972973`, \
0.2746377208906142`, -0.07863688063825786`, 0.8698650618261081`, \
-0.06235764377839263`, 0.5998181858711278`], List[0.5133988926101243`, \
-0.28978848634382226`, 0.07052733984665967`, -0.08369868830897471`, \
0.23278436065513589`, -0.06182325911684266`, -0.10833271803258925`, \
-0.037436524667012715`, 0.3941999003402016`], List[-1.016917565522857`, \
0.6854671093892978`, -0.023244736900856443`, 0.19931379865655363`, \
-0.2088378318351566`, -0.1208748170664811`, -0.06141967859437304`, \
-0.10597167600873109`, 0.10875444046422103`], List[-0.11759585947574482`, \
-0.20903426745748094`, -0.5148550128484543`, 0.1781765903893341`, \
-0.2729175260777728`, -0.2448467808957223`, -0.18339764793392305`, \
0.43652343980281133`, 0.3450341511825375`], List[-0.3778310061965379`, \
0.15892728636531703`, 0.019960278876657373`, 0.3943532556347979`, \
-0.034646384053198136`, 0.11630689700227902`, -0.21194704535075837`, \
0.3474019475169545`, 0.3460325119596193`], List[-0.5642436244758945`, \
0.9004256547801892`, 0.1384145250283422`, -0.1118189628317223`, \
-0.09364711727940128`, 0.12097314682193795`, -0.3596772738516575`, \
-0.23452752639196575`, 0.4772603814258445`], List[0.9342466281746301`, \
0.4167505316085906`, 0.27935044962561156`, -0.12481067985303393`, \
0.07047647859902852`, 0.637780449652865`, 0.4586718112134463`, \
0.050949038905411644`, -0.15966730544394575`], List[-0.002291086311673129`, \
0.447789057544173`, 0.15745272935060484`, -0.03998129758573962`, \
0.12120861159568577`, 0.08749619135148178`, -0.15925142736754433`, \
0.37213404342043727`, 0.02902068456655079`], List[0.1656791881215801`, \
0.008029881047586616`, 0.004207157971730912`, 0.5150989160130408`, \
-0.10402766331304579`, -0.09739254574090851`, -0.04143430827607297`, \
-0.057382378163407806`, -0.23188758777150828`], List[-0.48637321504774506`, \
0.11291402344229534`, -0.22080657969069975`, -0.018804955836153252`, \
-0.26949155285518755`, 0.1406983555635552`, -0.2938645374584946`, \
-0.047690040035073405`, 0.15379228577813975`], List[-0.007963838780995158`, \
-0.09005623977920009`, -0.13424891311341547`, 0.02753554217748073`, \
0.2892953609510857`, -0.004933571723441445`, 0.532650093976695`, \
0.15891308958656583`, -0.6966794010457582`], List[-0.45802686465599735`, \
-0.02666533659251453`, -0.21200274419876802`, 0.563909148857333`, \
0.16476255757151723`, 0.29456965203768853`, 0.09015839852771952`, \
1.1167830534377428`, -0.7191608297232752`], List[0.17403735722164138`, \
-0.2542507189056533`, 0.32814237898597254`, 0.054713534501833964`, \
-0.12442956705023747`, -0.4766624505869813`, 0.1926764155992447`, \
-0.19244966366726804`, 0.7083667961092437`], List[-0.058373944501506195`, \
-0.2656568831047161`, 0.017095359154467412`, 0.0037395503557728434`, \
-0.10993288477879751`, 0.02432304343270765`, -0.288601690052489`, \
-0.22796518323303974`, 0.05849934661010106`], List[0.7029641974303402`, \
-0.33319767019895724`, -0.07128309895749682`, -0.7027920138466923`, \
0.5342614045896668`, 0.3491304626108965`, -0.804121595611196`, \
-0.10923058518196056`, 0.23902327340804871`], List[-0.2701676438018764`, \
-0.30321644187380914`, 0.1455762367690625`, -0.004026296876858546`, \
-0.20424160150534743`, -0.055414655374477734`, -0.09007945516845413`, \
-0.3386786134224352`, 0.21636080492297902`], List[-0.48104696404634195`, \
0.4279034308841531`, 0.07543847604919432`, 0.03599121759518621`, \
0.308707238243412`, 0.05559609500536701`, -0.5172789267139858`, \
0.0798199097598091`, 0.1685005812848279`], List[0.37800354437032985`, \
-0.6050900380201988`, 0.014536843456992491`, 0.17154117650926956`, \
-0.9170492614103716`, 0.4267490564834378`, 0.20534489195054828`, \
-0.2677223121543032`, 0.0037569578326140988`], List[-0.03271290204427099`, \
-0.10537906434401388`, -0.06507722026199479`, -0.06519205575527176`, \
0.26502494570747726`, 0.6356328891022943`, -0.00860928434837733`, \
0.5441002550924445`, -0.01894429675172112`], List[0.3252793585970136`, \
-0.10341117690465823`, -0.5999044302353354`, -0.40322945668697635`, \
-0.5170485513963122`, -0.0389720027238153`, 0.026845471145501097`, \
0.027355080182707145`, -0.07485582795741245`], List[-0.23948701247232598`, \
-0.1163019269080546`, -0.21206356622183456`, -0.2817503645247456`, \
-0.004062233267416012`, -0.5971049475470607`, -0.18426926496426194`, \
-0.39565818210136944`, 0.040642872306378815`], List[-0.17048579500696684`, \
-0.19733345589844453`, -0.5485314901065682`, 0.8215821641327099`, \
0.12712671799966072`, -0.9577265527552393`, 0.3032205652416131`, \
0.27382819234138844`, -0.2985141295893147`], List[0.10130460116025061`, \
0.090414587124574`, 0.249194842565596`, -0.21016182421222218`, \
0.228376859902311`, -0.27368828665330874`, -0.22004104840758876`, \
-0.2999583882322103`, 0.021467430893304947`], List[-0.29937630893572303`, \
0.5040818901879784`, -0.000560633785451259`, 0.06289767481476646`, \
-0.1877214125004518`, 0.36058838677561983`, 0.3334478521405993`, \
0.6796874628991235`, 0.02356247920313138`], List[0.19114533575453754`, \
-0.26101512237478824`, 0.13069240311674912`, -0.2045589905415304`, \
-0.5453465291272831`, -0.2365793389071655`, -0.07315991044521537`, \
0.44358834935459585`, 0.5190722191051635`], List[0.04192657899938222`, \
-0.3602902076342167`, -0.16949852931002532`, 0.5252036694875512`, \
0.19437846208605974`, 0.16392556261631774`, 0.07305832244518655`, \
0.2917495790223045`, 0.0009178890573062108`], List[0.24346709103121064`, \
-0.290754151588093`, 0.48281782237054943`, -0.0756452270785661`, \
-0.058055217609387165`, -0.6393912968164641`, -0.04512656441325176`, \
0.16108579254840696`, 0.22613604692850517`], List[0.40575009955079394`, \
-0.22014210198684914`, 0.09302852789251864`, 0.2780295413843263`, \
-0.09004412502839276`, 0.14884875449443427`, 0.2614061299073047`, \
-0.060535183008039214`, -0.16612011579954897`], List[0.7877708151085587`, \
-0.059760077563293594`, 0.08904183119458094`, -0.5875016105338112`, \
-0.010459303658681298`, 0.29593139390852774`, -0.11537023434662842`, \
0.2175652297921246`, 0.061281503730874265`], List[-0.16217523392084005`, \
0.45573653207053516`, -0.027462434613493552`, -0.020645875164570397`, \
0.392522188748133`, 0.5437654186758104`, 0.30178874388165855`, \
0.4940765688437397`, -1.1180128683497634`], List[-0.1474147295100771`, \
0.33554906858311767`, -0.18246483010381187`, -0.7805359130033949`, \
0.21184968562908743`, 0.18365561377289674`, 0.4996360134554676`, \
0.4303580342941452`, -0.054951211804662704`], List[-0.22005541417771513`, \
-0.1471007953983846`, -0.13667113649092616`, 0.09442028879985948`, \
0.6029068346765541`, 0.48395283377799636`, -0.0797143920672395`, \
-0.020713984246130846`, 0.1600058851903673`], List[0.20528497618614713`, \
0.30781085637359074`, -0.1751154842130706`, -0.21904501312338498`, \
-0.6560049725561148`, 0.1538412230103912`, 0.5645704103407829`, \
-0.6282110730346023`, -0.3632942544924067`], List[0.012058306400679685`, \
0.1586931794429063`, 0.427729142045124`, 0.012339416253587828`, \
-0.09642924822186161`, 0.23111410565785612`, 0.05554075748901117`, \
0.7515931441263077`, -0.5402081692546554`], List[-0.09202984877044768`, \
-0.2238907571911146`, 0.06327585264771497`, -0.011703445548714128`, \
0.4770468965249828`, -0.33844331259865684`, 0.2818503839058962`, \
-0.5170950946103163`, 0.06286588064434676`]], Automatic], Rule[Method, \
\\\"KDtree\\\"]]]]]], Rule[\\\"NeighborsNumber\\\", 50], Rule[\\\"ClassPriors\
\\\", List[0.37142857142857144`, 0.22857142857142856`, \
0.39999999999999997`]], Rule[\\\"TrainingOutput\\\", NumericArray[List[1, 3, \
1, 2, 3, 2, 3, 2, 3, 1, 1, 1, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, \
3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, \
2, 3, 2, 3, 3], \\\"UnsignedInteger8\\\"]], \
Rule[\\\"DistributionSmoothing\\\", 0.5`], Rule[\\\"Processor\\\", \
MachineLearning`MLProcessor[\\\"Sequence\\\", Association[Rule[\\\"Input\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Type\\\", \\\"NominalVector\
\\\"], Rule[\\\"Weight\\\", 1], Rule[\\\"SetSize\\\", List[136]]]]]], Rule[\\\
\"Output\\\", Association[Rule[\\\"f1\\\", Association[Rule[\\\"Weight\\\", \
1], Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]]]], Rule[\\\"Processors\\\", \
List[MachineLearning`MLProcessor[\\\"EmbedNominalVector\\\", \
Association[Rule[\\\"Invertibility\\\", \\\"Impossible\\\"], Rule[\\\"Missing\
\\\", \\\"Allowed\\\"], Rule[\\\"Input\\\", Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"NominalVector\\\"], Rule[\\\"Weight\\\", \
1], Rule[\\\"SetSize\\\", List[136]]]]]], Rule[\\\"Index\\\", \
List[Association[Rule[1, 1], Rule[2, 2], Rule[3, 3], Rule[4, 4], Rule[5, 5], \
Rule[6, 6], Rule[7, 7], Rule[8, 8], Rule[9, 9], Rule[10, 10], Rule[11, 11], \
Rule[12, 12], Rule[13, 13], Rule[14, 14], Rule[15, 15], Rule[16, 16], \
Rule[17, 17], Rule[18, 18], Rule[19, 19], Rule[20, 20], Rule[21, 21], \
Rule[22, 22], Rule[23, 23], Rule[24, 24], Rule[25, 25], Rule[26, 26], \
Rule[27, 27], Rule[28, 28], Rule[29, 29], Rule[30, 30], Rule[31, 31], \
Rule[32, 32], Rule[33, 33], Rule[34, 34], Rule[35, 35], Rule[36, 36], \
Rule[37, 37], Rule[38, 38], Rule[39, 39], Rule[40, 40], Rule[41, 41], \
Rule[42, 42], Rule[43, 43], Rule[44, 44], Rule[45, 45], Rule[46, 46], \
Rule[47, 47], Rule[48, 48], Rule[49, 49], Rule[50, 50], Rule[51, 51], \
Rule[52, 52], Rule[53, 53], Rule[54, 54], Rule[55, 55], Rule[56, 56], \
Rule[57, 57], Rule[58, 58], Rule[59, 59], Rule[60, 60], Rule[61, 61], \
Rule[62, 62], Rule[63, 63], Rule[64, 64], Rule[65, 65], Rule[66, 66], \
Rule[67, 67], Rule[68, 68], Rule[69, 69], Rule[70, 70], Rule[71, 71], \
Rule[72, 72], Rule[73, 73], Rule[74, 74], Rule[75, 75], Rule[76, 76], \
Rule[77, 77], Rule[78, 78], Rule[79, 79], Rule[80, 80], Rule[81, 81], \
Rule[82, 82], Rule[83, 83], Rule[84, 84], Rule[85, 85], Rule[86, 86], \
Rule[87, 87], Rule[88, 88], Rule[89, 89], Rule[90, 90], Rule[91, 91], \
Rule[92, 92], Rule[93, 93], Rule[94, 94], Rule[95, 95], Rule[96, 96], \
Rule[97, 97], Rule[98, 98], Rule[99, 99], Rule[100, 100], Rule[101, 101], \
Rule[102, 102], Rule[103, 103], Rule[104, 104], Rule[105, 105], Rule[106, \
106], Rule[107, 107], Rule[108, 108], Rule[109, 109], Rule[110, 110], \
Rule[111, 111], Rule[112, 112], Rule[113, 113], Rule[114, 114], Rule[115, \
115], Rule[116, 116], Rule[117, 117], Rule[118, 118], Rule[119, 119], \
Rule[120, 120], Rule[121, 121], Rule[122, 122], Rule[123, 123], Rule[124, \
124], Rule[125, 125], Rule[126, 126], Rule[127, 127], Rule[128, 128], \
Rule[129, 129], Rule[130, 130], Rule[131, 131], Rule[132, 132], Rule[133, \
133], Rule[134, 134], Rule[135, 135], Rule[136, 136]]]], Rule[\\\"Output\\\", \
Association[Rule[\\\"f1\\\", Association[Rule[\\\"Weight\\\", 1], \
Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]]]], \
Rule[\\\"EmbeddingVectors\\\", List[NumericArray[List[List[0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[-1.0169178247451782`, 0.685467004776001`, \
-0.023245172575116158`, 0.19931364059448242`, -0.20883788168430328`, \
-0.12087416648864746`, -0.06141949072480202`, -0.10597263276576996`, \
0.10875528305768967`], List[-0.38183823227882385`, 0.19993092119693756`, \
0.5571987628936768`, -0.7299461960792542`, -0.1002204567193985`, \
-0.506624162197113`, -0.24465039372444153`, -0.7298336029052734`, \
-0.09627307951450348`], List[-0.6746448874473572`, -0.07398883253335953`, \
-0.42826589941978455`, 0.36153942346572876`, 0.1800663024187088`, \
-0.13439685106277466`, 0.17611148953437805`, -0.242436021566391`, \
0.2951604127883911`], List[-0.06266189366579056`, -0.11711419373750687`, \
-0.113866426050663`, 0.011423281393945217`, 0.07906065136194229`, \
0.03798345848917961`, -0.0923553854227066`, -0.4463205635547638`, \
0.040678951889276505`], List[-0.15769875049591064`, 0.04785262420773506`, \
0.8955807685852051`, 0.5174974799156189`, 0.16342827677726746`, \
0.43683674931526184`, -0.23174996674060822`, 0.7974100112915039`, \
-0.3477349281311035`], List[-0.45802634954452515`, -0.026666218414902687`, \
-0.2120026797056198`, 0.5639081597328186`, 0.16476315259933472`, \
0.2945692837238312`, 0.09015791118144989`, 1.1167832612991333`, \
-0.7191606163978577`], List[-0.3271239101886749`, -0.5006350874900818`, \
0.04977414384484291`, -0.0275662150233984`, -0.04484076797962189`, \
0.8469821810722351`, -0.23878704011440277`, 0.1375560462474823`, \
0.2290327548980713`], List[-0.3370705246925354`, 0.6492243409156799`, \
0.1542404741048813`, -0.02564394846558571`, 0.11186157912015915`, \
-0.4499099552631378`, 0.028323005884885788`, -0.1418711096048355`, \
-0.32029569149017334`], List[-0.39046886563301086`, 0.19920919835567474`, \
-0.5133547782897949`, 0.15004779398441315`, -0.41026270389556885`, \
-0.7000691890716553`, -0.8885369896888733`, -0.5680444240570068`, \
0.24697338044643402`], List[-0.30576378107070923`, 0.19569341838359833`, \
-0.3823833465576172`, -0.04909564182162285`, -0.32653552293777466`, \
0.4190160632133484`, 0.16893252730369568`, 0.15981048345565796`, \
0.09115470945835114`], List[0.09076130390167236`, -0.7724121809005737`, \
-0.3633984625339508`, 0.4405556619167328`, -0.6539329886436462`, \
-0.4185083508491516`, -0.12365677952766418`, 0.09404507279396057`, \
0.19271914660930634`], List[0.7029639482498169`, -0.3331974148750305`, \
-0.07128302752971649`, -0.7027923464775085`, 0.5342609882354736`, \
0.34912997484207153`, -0.8041211366653442`, -0.10923010110855103`, \
0.23902353644371033`], List[-0.08455947786569595`, -0.024532098323106766`, \
0.31531572341918945`, 0.2082686871290207`, -0.7428684234619141`, \
-0.25866782665252686`, -0.23203624784946442`, 0.3596508502960205`, \
-0.37771955132484436`], List[0.513399064540863`, -0.28978872299194336`, \
0.07052686810493469`, -0.08369769901037216`, 0.2327839881181717`, \
-0.06182286515831947`, -0.10833325982093811`, -0.03743553161621094`, \
0.3942003846168518`], List[-0.08133348822593689`, 0.3058929443359375`, \
-0.22259502112865448`, -0.5297461152076721`, -0.3823282718658447`, \
-0.17310070991516113`, 0.1395619958639145`, -0.09086639434099197`, \
-0.12034841626882553`], List[0.3084975779056549`, 0.08045269548892975`, \
0.0021532014943659306`, -0.3519752323627472`, 0.27463796734809875`, \
-0.0786370113492012`, 0.8698643445968628`, -0.06235788017511368`, \
0.5998180508613586`], List[-0.05837412551045418`, -0.2656559646129608`, \
0.01709442213177681`, 0.0037399553693830967`, -0.10993218421936035`, \
0.0243239626288414`, -0.2886017858982086`, -0.2279660999774933`, \
0.05849849060177803`], List[0.05327356234192848`, -0.2737447917461395`, \
0.003780995262786746`, -0.24803178012371063`, 0.06230556592345238`, \
-0.02455543912947178`, -0.22576038539409637`, 0.06877411901950836`, \
0.14188840985298157`], List[-0.18789388239383698`, -0.08386208862066269`, \
0.30350950360298157`, -0.25951507687568665`, 0.4055745303630829`, \
0.05023087188601494`, 0.14379703998565674`, -0.40707144141197205`, \
0.27955204248428345`], List[0.37800291180610657`, -0.6050896048545837`, \
0.01453770138323307`, 0.17154021561145782`, -0.9170495271682739`, \
0.42674824595451355`, 0.20534555613994598`, -0.2677231431007385`, \
0.0037560262717306614`], List[-0.37968289852142334`, -0.477049320936203`, \
-0.6385208368301392`, 0.5015006065368652`, 0.35837939381599426`, \
-0.31814369559288025`, -0.10594674944877625`, -0.16024793684482574`, \
0.09370878338813782`], List[-0.10302981734275818`, 0.32555606961250305`, \
-0.020380273461341858`, 0.023691225796937943`, -0.2517704367637634`, \
-0.18965965509414673`, 0.2165936529636383`, -0.2958061695098877`, \
0.4279932975769043`], List[-0.19370640814304352`, -0.1658187061548233`, \
0.09978403896093369`, 0.07784608006477356`, -0.14342893660068512`, \
-0.2539879083633423`, -0.2830966114997864`, -0.09415733814239502`, \
-0.41997963190078735`], List[0.04841238632798195`, -0.029509762302041054`, \
0.6108091473579407`, -0.5336490273475647`, 0.1300397366285324`, \
-0.1699560582637787`, 0.08358840644359589`, 0.07624684274196625`, \
0.47078976035118103`], List[0.041927359998226166`, -0.36029052734375`, \
-0.16949933767318726`, 0.5252031683921814`, 0.19437755644321442`, \
0.16392606496810913`, 0.07305867969989777`, 0.29174917936325073`, \
0.0009182951762340963`], List[0.029922284185886383`, -0.19280871748924255`, \
0.036524698138237`, -0.29912301898002625`, -0.37482377886772156`, \
0.15181422233581543`, 0.139937162399292`, 0.1439560204744339`, \
0.6199225187301636`], List[0.07534495741128922`, 0.19570234417915344`, \
0.8213793039321899`, 0.1851562112569809`, -0.20703260600566864`, \
0.547758936882019`, -0.3863110840320587`, -0.2659819424152374`, \
-0.19274474680423737`], List[0.1996368169784546`, 0.1756415069103241`, \
-0.012801856733858585`, -0.71571946144104`, 0.20786060392856598`, \
0.08308102190494537`, 0.08612477779388428`, 0.003771750722080469`, \
0.688667893409729`], List[-0.34900733828544617`, -0.08538716286420822`, \
0.07444765418767929`, 0.25902897119522095`, 0.5260823369026184`, \
0.10242468118667603`, -0.09577737748622894`, -0.49911585450172424`, \
0.01821751520037651`], List[0.12145963311195374`, 0.08822529762983322`, \
-0.5276590585708618`, 0.17436815798282623`, 0.07595526427030563`, \
-0.06023672968149185`, -0.031623706221580505`, -0.19721029698848724`, \
-0.04832950606942177`], List[-0.29937660694122314`, 0.5040826201438904`, \
-0.0005601666634902358`, 0.0628974661231041`, -0.18772228062152863`, \
0.3605892062187195`, 0.33344700932502747`, 0.6796883344650269`, \
0.023562492802739143`], List[0.016374880447983742`, 0.4480959475040436`, \
-0.4528443217277527`, -0.48966261744499207`, 0.2149709314107895`, \
0.1188533827662468`, 0.5702773332595825`, 0.09492628276348114`, \
0.3623334467411041`], List[-0.2964191734790802`, -0.13964231312274933`, \
-0.3991428315639496`, 0.5534203052520752`, -0.06952809542417526`, \
0.18266330659389496`, -0.0028029666282236576`, 0.7187694907188416`, \
-0.256944864988327`], List[0.07869593054056168`, 0.0037951970007270575`, \
0.26091790199279785`, -0.0858110710978508`, -0.28619813919067383`, \
0.38958969712257385`, -0.43199241161346436`, -0.2136356681585312`, \
0.23187033832073212`], List[0.6496050357818604`, 0.3247295320034027`, \
0.4105420410633087`, 0.39246076345443726`, 0.7708675265312195`, \
0.023928536102175713`, -0.026677774265408516`, 0.30314597487449646`, \
-0.19687074422836304`], List[-0.007964256219565868`, -0.09005565941333771`, \
-0.13424956798553467`, 0.027534790337085724`, 0.28929463028907776`, \
-0.004933161661028862`, 0.5326501131057739`, 0.15891297161579132`, \
-0.6966797113418579`], List[-0.08133985102176666`, 0.3941076695919037`, \
-0.15453429520130157`, -0.5932101607322693`, 0.34571993350982666`, \
0.5475886464118958`, 0.8791981935501099`, 0.7005172967910767`, \
0.7883008122444153`], List[0.44733256101608276`, -0.24141563475131989`, \
-0.06415511667728424`, -0.6459012031555176`, 0.4955042004585266`, \
-0.1788315773010254`, -0.1988784521818161`, -0.09203624725341797`, \
-0.7784431576728821`], List[-0.19846613705158234`, -0.2121790498495102`, \
0.2957253158092499`, -0.10369091480970383`, -0.0592663399875164`, \
0.4216597080230713`, -0.3219279944896698`, 0.2615300714969635`, \
0.45833420753479004`], List[-0.23948687314987183`, -0.11630275100469589`, \
-0.2120644450187683`, -0.2817501723766327`, -0.004062260035425425`, \
-0.5971055030822754`, -0.18426978588104248`, -0.3956587016582489`, \
0.04064249247312546`], List[0.5950467586517334`, -0.3653585910797119`, \
-0.27703505754470825`, 0.14172329008579254`, -0.12145133316516876`, \
0.1263512372970581`, -0.6250767707824707`, 0.4033346474170685`, \
-0.13105075061321259`], List[-0.22752541303634644`, 0.029156355187296867`, \
-0.22030916810035706`, -0.09984365850687027`, -0.2049245834350586`, \
0.036960337311029434`, 0.2856332063674927`, 0.18322110176086426`, \
-0.2581981122493744`], List[0.06368806213140488`, 0.2374972552061081`, \
0.17656727135181427`, -0.16103196144104004`, 0.7223507165908813`, \
-0.03246800974011421`, -0.34847864508628845`, 0.3080858886241913`, \
0.3507067561149597`], List[-0.37783095240592957`, 0.1589278280735016`, \
0.019960718229413033`, 0.3943537175655365`, -0.03464667126536369`, \
0.11630609631538391`, -0.21194681525230408`, 0.3474021852016449`, \
0.3460320234298706`], List[0.11345788836479187`, -0.29978713393211365`, \
0.5586828589439392`, -0.18951687216758728`, -0.2202049344778061`, \
-0.5374675989151001`, -0.021253732964396477`, -0.049779023975133896`, \
-0.06891293823719025`], List[0.1656789481639862`, 0.008029182441532612`, \
0.004206680692732334`, 0.5150996446609497`, -0.10402830690145493`, \
-0.09739168733358383`, -0.041434623301029205`, -0.0573817640542984`, \
-0.23188842833042145`], List[-0.13572221994400024`, 0.2712044417858124`, \
-0.2987896502017975`, 0.20320051908493042`, -0.5568735599517822`, \
0.006558898836374283`, 0.28195279836654663`, -0.19625809788703918`, \
-0.519520103931427`], List[-0.0867348238825798`, -0.25038081407546997`, \
-0.2019965499639511`, 0.4550168812274933`, 0.402818500995636`, \
-0.5190525054931641`, -0.23195363581180573`, 0.21201640367507935`, \
-0.030325179919600487`], List[0.2429981827735901`, -0.1250923126935959`, \
-0.05108584463596344`, 0.03404320403933525`, -0.5160472989082336`, \
0.30912327766418457`, -0.5094493627548218`, 0.0385567769408226`, \
-0.21814216673374176`], List[-0.35947951674461365`, -0.1604236513376236`, \
0.0996348187327385`, 0.5483320951461792`, -0.03437819331884384`, \
0.009196917526423931`, 0.17572011053562164`, -0.3546849191188812`, \
0.5273112654685974`], List[-0.09152204543352127`, 0.31768813729286194`, \
-0.14887136220932007`, 0.09515384584665298`, 0.3598482012748718`, \
0.09621994197368622`, 0.34684380888938904`, 0.2993508577346802`, \
0.09623733907938004`], List[-0.03271199390292168`, -0.10537983477115631`, \
-0.06507682800292969`, -0.0651918575167656`, 0.26502394676208496`, \
0.6356333494186401`, -0.008610018528997898`, 0.544100284576416`, \
-0.018944919109344482`], List[-0.06308135390281677`, -0.08656999468803406`, \
0.1512584537267685`, -0.5012490749359131`, -0.04163763299584389`, \
0.08147362619638443`, -0.4592985510826111`, -0.011060184799134731`, \
-0.046756722033023834`], List[0.6993705034255981`, 0.11156374961137772`, \
0.17311590909957886`, -0.038341373205184937`, 0.13065212965011597`, \
-0.172051802277565`, -0.1784030944108963`, 0.006835562642663717`, \
-0.21315184235572815`], List[0.24346709251403809`, -0.29075419902801514`, \
0.4828173518180847`, -0.07564429938793182`, -0.05805511027574539`, \
-0.6393919587135315`, -0.04512730985879898`, 0.16108562052249908`, \
0.2261369377374649`], List[0.012057618238031864`, 0.1586926132440567`, \
0.4277288615703583`, 0.012339344248175621`, -0.0964287742972374`, \
0.23111392557621002`, 0.05554140731692314`, 0.7515929937362671`, \
-0.5402078032493591`], List[0.3436395823955536`, -0.37779131531715393`, \
0.37584877014160156`, 0.28336265683174133`, -0.21780510246753693`, \
-0.030359188094735146`, -0.40291082859039307`, -0.013694602996110916`, \
-0.24009257555007935`], List[0.20877988636493683`, -0.0057547008618712425`, \
0.11838492751121521`, 0.30117204785346985`, 0.5772191286087036`, \
0.2165612131357193`, 0.203219935297966`, 0.5351128578186035`, \
0.02033594623208046`], List[-0.2678607404232025`, -0.0958322212100029`, \
0.565859317779541`, 0.30129218101501465`, 0.18115465342998505`, \
-0.47413507103919983`, -0.16503487527370453`, 0.36925798654556274`, \
0.224075049161911`], List[-0.39164403080940247`, 0.38879284262657166`, \
0.6109297275543213`, -0.014155513606965542`, -0.17553424835205078`, \
-0.6990113854408264`, 0.2298184335231781`, -0.6051162481307983`, \
-0.11598522961139679`], List[-0.25913533568382263`, 0.44208937883377075`, \
-0.39507198333740234`, 0.2348666489124298`, 0.17508171498775482`, \
0.24961228668689728`, 0.4024421274662018`, 0.3914923071861267`, \
-0.22119742631912231`], List[-0.6515596508979797`, 0.13192275166511536`, \
-0.22096556425094604`, -0.16294033825397491`, -0.22815421223640442`, \
-0.36087894439697266`, 0.003016421338543296`, 0.12803375720977783`, \
0.4279095232486725`], List[0.9342473149299622`, 0.41675129532814026`, \
0.27935078740119934`, -0.12481070309877396`, 0.07047680765390396`, \
0.6377807855606079`, 0.45867082476615906`, 0.05094962939620018`, \
-0.15966808795928955`], List[0.5137415528297424`, -0.05635056644678116`, \
-0.09681291878223419`, -0.12020998448133469`, 0.33463814854621887`, \
-0.44864973425865173`, -0.4670730531215668`, 0.022089192643761635`, \
0.03985021263360977`], List[0.4945376217365265`, 0.2686857581138611`, \
0.02619694359600544`, 0.09316994994878769`, -0.5147454738616943`, \
0.00003194186501787044`, 0.4488053619861603`, 0.029475048184394836`, \
0.4165897071361542`], List[0.10192635655403137`, 0.16523775458335876`, \
-0.3649407923221588`, -0.28525254130363464`, -0.4374057352542877`, \
0.11609647423028946`, 0.1119190976023674`, -0.18035545945167542`, \
-0.39385202527046204`], List[0.008347583934664726`, -0.030875926837325096`, \
-0.40197283029556274`, 0.35966363549232483`, -0.39540615677833557`, \
0.7158137559890747`, 0.02473270520567894`, -0.04938812181353569`, \
-0.30092036724090576`], List[-0.11759591847658157`, -0.20903363823890686`, \
-0.5148555636405945`, 0.17817626893520355`, -0.27291759848594666`, \
-0.24484644830226898`, -0.18339672684669495`, 0.4365241825580597`, \
0.34503376483917236`], List[-0.27016785740852356`, -0.3032154440879822`, \
0.14557714760303497`, -0.004026204813271761`, -0.2042412906885147`, \
-0.05541543290019035`, -0.09007949382066727`, -0.3386784791946411`, \
0.2163616418838501`], List[-0.25512051582336426`, -0.555943489074707`, \
0.2271685004234314`, 0.002664665225893259`, -0.028991980478167534`, \
0.33735859394073486`, -0.01685941591858864`, 0.06785374134778976`, \
0.12115045636892319`], List[0.19114458560943604`, -0.26101598143577576`, \
0.1306922882795334`, -0.2045592963695526`, -0.5453455448150635`, \
-0.23657923936843872`, -0.07316028326749802`, 0.44358763098716736`, \
0.5190718173980713`], List[0.28929367661476135`, -0.04139848053455353`, \
0.4321828782558441`, 0.05757157504558563`, -0.7157338261604309`, \
-0.6733927726745605`, 0.2062457650899887`, -0.07919652760028839`, \
-0.034575559198856354`], List[-0.17058050632476807`, -0.47358596324920654`, \
-0.5377767086029053`, 0.2026347517967224`, 0.27578452229499817`, \
-0.5120897889137268`, -0.7782192230224609`, -0.22768142819404602`, \
0.2469194233417511`], List[0.3176695704460144`, 0.27257832884788513`, \
-0.08534102141857147`, -0.5650151371955872`, -0.05241360887885094`, \
0.3704909682273865`, -0.17098914086818695`, -0.15058884024620056`, \
0.19686639308929443`], List[0.44953909516334534`, 0.2989118993282318`, \
0.17048557102680206`, -0.45194628834724426`, 0.3830479681491852`, \
-0.03288361057639122`, -0.5535257458686829`, -0.15517595410346985`, \
-0.18686699867248535`], List[0.34880876541137695`, -0.39536798000335693`, \
-0.10788843035697937`, -0.2720208168029785`, 0.010240682400763035`, \
-0.067329540848732`, -0.02201654203236103`, 0.19047990441322327`, \
0.11101661622524261`], List[-0.15041881799697876`, 0.4893346130847931`, \
0.30397912859916687`, 0.36038267612457275`, -0.06319575756788254`, \
0.07138068974018097`, 0.21132026612758636`, 0.6988100409507751`, \
0.049500755965709686`], List[-0.09202887117862701`, -0.22389046847820282`, \
0.06327538192272186`, -0.01170277502387762`, 0.4770478904247284`, \
-0.33844342827796936`, 0.28185132145881653`, -0.517094612121582`, \
0.06286593526601791`], List[-0.33838316798210144`, -0.056538816541433334`, \
0.05688149109482765`, 0.822517454624176`, 0.6388998627662659`, \
-0.9710853695869446`, -0.01693742349743843`, -0.12618644535541534`, \
-0.02343815751373768`], List[-0.17048659920692444`, -0.19733409583568573`, \
-0.5485324263572693`, 0.8215819597244263`, 0.12712737917900085`, \
-0.9577258229255676`, 0.3032202124595642`, 0.2738291323184967`, \
-0.2985136806964874`], List[-0.3545224666595459`, 0.45004957914352417`, \
-0.6168292164802551`, 0.15135636925697327`, 0.6445160508155823`, \
0.4037705957889557`, 0.3797319829463959`, -0.4245952069759369`, \
0.34834787249565125`], List[-0.2755165994167328`, -0.27297553420066833`, \
-0.44510653614997864`, -0.23024488985538483`, 0.1991884708404541`, \
-0.011666926555335522`, 0.3439676761627197`, 0.12889574468135834`, \
-0.32843124866485596`], List[1.135640263557434`, -0.2896031439304352`, \
-0.5909157395362854`, 0.2681869864463806`, -0.07719293236732483`, \
0.025726143270730972`, -0.4422725439071655`, 0.08118036389350891`, \
0.4022643268108368`], List[0.2895057499408722`, 0.49109306931495667`, \
-0.26828521490097046`, 0.22581180930137634`, -0.23162707686424255`, \
0.13656796514987946`, 0.4786456227302551`, -0.18079617619514465`, \
-0.751209557056427`], List[-0.13664263486862183`, -0.4362390637397766`, \
-0.08726069331169128`, 0.37119027972221375`, 0.4290711581707001`, \
-0.12117315083742142`, 0.16586771607398987`, -0.046279046684503555`, \
-0.041426774114370346`], List[0.32527920603752136`, -0.10341030359268188`, \
-0.5999037623405457`, -0.40323036909103394`, -0.5170480608940125`, \
-0.03897251933813095`, 0.026844944804906845`, 0.027356065809726715`, \
-0.07485645264387131`], List[-0.16217467188835144`, 0.45573607087135315`, \
-0.02746248058974743`, -0.02064630389213562`, 0.3925214111804962`, \
0.5437646508216858`, 0.3017883598804474`, 0.4940774440765381`, \
-1.1180137395858765`], List[0.13170428574085236`, 0.3766573667526245`, \
0.29200467467308044`, -0.44970521330833435`, 0.14408665895462036`, \
0.18625302612781525`, -0.16104869544506073`, 0.40859904885292053`, \
0.04328501224517822`], List[0.3922278881072998`, 0.34273743629455566`, \
0.23769144713878632`, 0.27898475527763367`, -0.1316114366054535`, \
-0.19414347410202026`, -0.12186639755964279`, 0.09938866645097733`, \
0.8567876815795898`], List[-0.002291486132889986`, 0.4477890133857727`, \
0.15745295584201813`, -0.0399809256196022`, 0.12120793014764786`, \
0.08749629557132721`, -0.1592520922422409`, 0.3721342980861664`, \
0.029020575806498528`], List[-0.31602802872657776`, 0.6225473284721375`, \
-0.8563281297683716`, 0.15810993313789368`, -0.0016780529404059052`, \
0.794868528842926`, -0.15702517330646515`, 0.40660157799720764`, \
-0.2862715721130371`], List[0.26271018385887146`, 0.0594397597014904`, \
-0.13240884244441986`, -0.17784692347049713`, -0.43241673707962036`, \
-0.03736482933163643`, -0.8969855904579163`, 0.2866676449775696`, \
0.5164644718170166`], List[0.1954335719347`, 0.36788269877433777`, \
-0.3774826228618622`, -0.6052183508872986`, 0.03395292907953262`, \
0.4752822816371918`, -0.12883968651294708`, -0.15887951850891113`, \
-0.013051191344857216`], List[-0.46760788559913635`, 0.3027907609939575`, \
-0.10701248049736023`, -0.42631059885025024`, 0.2369767278432846`, \
0.33754971623420715`, -0.05194045975804329`, 0.034607067704200745`, \
-0.35143211483955383`], List[0.33229339122772217`, -0.531445324420929`, \
-0.5026278495788574`, 0.2766217887401581`, -0.07150352001190186`, \
-0.19835497438907623`, -0.07548996061086655`, 0.9669865369796753`, \
-0.3782917559146881`], List[0.2801341712474823`, 0.24035079777240753`, \
-0.37582266330718994`, 0.1722068041563034`, -0.017151638865470886`, \
0.07818286120891571`, 0.3524913489818573`, 0.19016100466251373`, \
-0.31985175609588623`], List[0.26734471321105957`, 0.498241126537323`, \
0.2291247546672821`, -0.07707913219928741`, -0.0830126404762268`, \
-0.45659130811691284`, -0.10140009224414825`, 0.26879164576530457`, \
-0.09830139577388763`], List[-0.5061553120613098`, 0.0022589995060116053`, \
0.15630897879600525`, 0.27074459195137024`, -0.34838831424713135`, \
0.05315786600112915`, 0.18877987563610077`, -0.6017982363700867`, \
-0.296688437461853`], List[0.4245492219924927`, -0.07231033593416214`, \
-0.11533338576555252`, -0.39670872688293457`, 0.08166976273059845`, \
-0.22897163033485413`, -0.0373113639652729`, 0.2793227434158325`, \
-0.18566620349884033`], List[0.18960785865783691`, 0.3458932042121887`, \
-0.2384927123785019`, 0.5007370710372925`, 0.3138138949871063`, \
0.5495890378952026`, -0.4541100263595581`, 0.03354278951883316`, \
0.13985420763492584`], List[-0.04570317268371582`, 0.2460070252418518`, \
0.1416606456041336`, -0.12405139207839966`, 0.5932475328445435`, \
0.22795470058918`, 0.2934301197528839`, 0.0801498144865036`, \
0.3518645167350769`], List[0.209067240357399`, 0.3724527359008789`, \
-0.0009560862672515213`, 0.20147334039211273`, 0.3090948760509491`, \
-0.11240733414888382`, -0.32074207067489624`, -0.03590240702033043`, \
0.3936568796634674`], List[0.7877712249755859`, -0.059760406613349915`, \
0.08904169499874115`, -0.5875014066696167`, -0.010458369739353657`, \
0.2959323227405548`, -0.11536931246519089`, 0.21756604313850403`, \
0.06128077208995819`], List[0.4172285795211792`, -0.8073537945747375`, \
-0.024488475173711777`, 0.20084349811077118`, 0.011983875185251236`, \
-0.40770018100738525`, 0.19019122421741486`, 0.38737472891807556`, \
-0.09086863696575165`], List[0.405749648809433`, -0.22014188766479492`, \
0.09302785992622375`, 0.2780304253101349`, -0.09004358947277069`, \
0.14884944260120392`, 0.26140567660331726`, -0.06053468585014343`, \
-0.16611996293067932`], List[-0.4863741397857666`, 0.11291444301605225`, \
-0.22080586850643158`, -0.01880413107573986`, -0.26949167251586914`, \
0.1406985968351364`, -0.2938636243343353`, -0.04769033193588257`, \
0.15379184484481812`], List[-0.4810469448566437`, 0.42790284752845764`, \
0.07543817907571793`, 0.03599093109369278`, 0.30870798230171204`, \
0.05559595301747322`, -0.5172789096832275`, 0.07982054352760315`, \
0.16850009560585022`], List[0.7302711606025696`, -0.08916133642196655`, \
0.15067806839942932`, 0.12793047726154327`, -0.023067301139235497`, \
-0.48279643058776855`, -0.43929171562194824`, 0.505054771900177`, \
-0.08115485310554504`], List[0.20874284207820892`, 0.05076679587364197`, \
0.12299265712499619`, -0.7217181324958801`, -0.019509993493556976`, \
0.15758173167705536`, -0.0345248319208622`, 0.11166226863861084`, \
0.18876558542251587`], List[-0.12010371685028076`, 0.321214884519577`, \
-0.02837139181792736`, 0.3201087713241577`, -0.5156776309013367`, \
0.18898101150989532`, 0.9442706108093262`, -0.17375333607196808`, \
0.07108709216117859`], List[-0.1421143263578415`, 0.5067741274833679`, \
-0.0407596230506897`, 0.11688807606697083`, -0.36251118779182434`, \
0.3562803864479065`, 0.5460411310195923`, 0.043691910803318024`, \
-0.22718296945095062`], List[-0.17141854763031006`, 0.2273387759923935`, \
0.1747654527425766`, -0.08068513125181198`, 0.03283100202679634`, \
0.20663534104824066`, -0.21035172045230865`, 0.16613076627254486`, \
0.1552112102508545`], List[-0.22965364158153534`, 0.06731626391410828`, \
0.18348199129104614`, -0.2303047925233841`, 0.47871899604797363`, \
0.10031872987747192`, -0.14089933037757874`, -0.4233468770980835`, \
-0.0763261541724205`], List[0.17403720319271088`, -0.25425028800964355`, \
0.3281426429748535`, 0.05471377074718475`, -0.12443040311336517`, \
-0.4766627252101898`, 0.19267739355564117`, -0.1924499124288559`, \
0.7083666920661926`], List[-0.14741477370262146`, 0.3355497717857361`, \
-0.18246543407440186`, -0.7805359363555908`, 0.2118496596813202`, \
0.1836565136909485`, 0.49963635206222534`, 0.4303573668003082`, \
-0.05495163053274155`], List[0.1142817884683609`, 0.2165672928094864`, \
-0.1509932428598404`, -0.23356449604034424`, -0.6533068418502808`, \
-0.3126901388168335`, 0.4356204569339752`, -0.1037573292851448`, \
-0.17263923585414886`], List[0.10615052282810211`, -0.13845327496528625`, \
0.11688720434904099`, 0.3744066059589386`, -0.06057777628302574`, \
-0.001352898427285254`, -0.4351048171520233`, 0.29401692748069763`, \
0.24493823945522308`], List[-0.11228270828723907`, -0.11752118170261383`, \
-0.24018336832523346`, 0.20602847635746002`, 0.479596883058548`, \
0.15289942920207977`, 0.05293618142604828`, -0.1896096169948578`, \
-0.1874532401561737`], List[-0.28547245264053345`, 0.06183011829853058`, \
0.056735970079898834`, -0.22261790931224823`, -0.09154044091701508`, \
0.11074430495500565`, 0.7220212817192078`, -0.2596607506275177`, \
-0.22777961194515228`], List[-0.42526477575302124`, 0.5192554593086243`, \
-0.420825719833374`, -0.0542169027030468`, 0.18017897009849548`, \
0.22453317046165466`, -0.24235183000564575`, 0.21841475367546082`, \
-0.001013101078569889`], List[0.14115308225154877`, -0.012464858591556549`, \
0.006429685279726982`, -0.08338285982608795`, 0.6265051364898682`, \
-0.22742202877998352`, 0.1928739994764328`, 0.17434197664260864`, \
0.3389594256877899`], List[-0.22005556523799896`, -0.14710108935832977`, \
-0.13667117059230804`, 0.09441990405321121`, 0.6029067635536194`, \
0.4839520752429962`, -0.07971476018428802`, -0.020714128389954567`, \
0.16000643372535706`], List[-0.260475754737854`, 0.04291832074522972`, \
0.06834647804498672`, -0.044275157153606415`, 0.2958850562572479`, \
0.26289859414100647`, -0.29503950476646423`, -0.3533533215522766`, \
0.5557618141174316`], List[-0.4249122440814972`, -0.02453320100903511`, \
0.017422199249267578`, -0.38932114839553833`, -0.6915526390075684`, \
0.6158058643341064`, 0.7428083419799805`, -0.07605688273906708`, \
-0.08732659369707108`], List[-0.16582734882831573`, -0.07984234392642975`, \
-0.2491479367017746`, 0.38583648204803467`, 0.008080440573394299`, \
0.0248081237077713`, -0.08841446787118912`, -0.14144188165664673`, \
0.2815594971179962`], List[0.4693391025066376`, 0.34544867277145386`, \
0.09093966335058212`, 0.9134631156921387`, -0.3037063479423523`, \
0.20491115748882294`, -0.1763468086719513`, 0.0406094454228878`, \
0.021436158567667007`], List[-0.05411667004227638`, -0.08556566387414932`, \
-0.5068187713623047`, 0.4829022288322449`, -0.32183340191841125`, \
-0.002731087850406766`, 0.31877216696739197`, 0.2787071466445923`, \
-0.11707715690135956`], List[-0.5642439723014832`, 0.9004257321357727`, \
0.13841429352760315`, -0.11181846261024475`, -0.09364678710699081`, \
0.12097259610891342`, -0.3596777021884918`, -0.23452700674533844`, \
0.47726136445999146`], List[0.15933667123317719`, -0.5740842223167419`, \
0.1445559859275818`, 0.2009049504995346`, -0.6382194757461548`, \
-0.03401389345526695`, 0.4749314785003662`, -0.12053003907203674`, \
-0.07413347065448761`], List[-0.5170167088508606`, -0.20557083189487457`, \
-0.35917800664901733`, 0.16441187262535095`, -0.03164123743772507`, \
0.02816860005259514`, 0.20169007778167725`, 0.09221015125513077`, \
0.18106845021247864`], List[0.10130499303340912`, 0.090415358543396`, \
0.24919496476650238`, -0.21016179025173187`, 0.2283778339624405`, \
-0.27368810772895813`, -0.22004079818725586`, -0.2999582290649414`, \
0.021466970443725586`], List[-0.12525679171085358`, -0.1539241075515747`, \
-0.33230555057525635`, 0.0008387343259528279`, 0.2991461157798767`, \
0.3911428451538086`, 0.0949469804763794`, 0.04931199550628662`, \
-0.006370131392031908`], List[0.20528505742549896`, 0.30781155824661255`, \
-0.1751159280538559`, -0.2190442979335785`, -0.6560042500495911`, \
0.1538417935371399`, 0.5645711421966553`, -0.6282116770744324`, \
-0.36329326033592224`], List[0.7639521360397339`, 0.23927178978919983`, \
0.0008147930493578315`, -0.08375809341669083`, 0.009979203343391418`, \
0.2425236999988556`, -0.3833742141723633`, -0.024158474057912827`, \
0.3170769512653351`], List[-0.5365582704544067`, 0.014620231464505196`, \
-0.08051476627588272`, -0.3194691240787506`, -0.028943659737706184`, \
-0.6462967395782471`, 0.2136247456073761`, 0.18644101917743683`, \
0.7223593592643738`], List[-0.07527545839548111`, -0.6046292185783386`, \
-0.17468030750751495`, 0.06678745895624161`, -0.13348864018917084`, \
-0.6217470765113831`, -0.16058361530303955`, -0.40546488761901855`, \
-0.3769676387310028`]], \\\"Real32\\\"]]], Rule[\\\"Version\\\", List[12.`, \
0]], Rule[\\\"ID\\\", 7204649762786858506]]], \
MachineLearning`MLProcessor[\\\"FirstValues\\\", \
Association[Rule[\\\"Info\\\", Association[Rule[\\\"Weight\\\", 1], \
Rule[\\\"Type\\\", \\\"NumericalVector\\\"]]], Rule[\\\"Key\\\", \\\"f1\\\"], \
Rule[\\\"Invertibility\\\", \\\"Perfect\\\"], Rule[\\\"Missing\\\", \
\\\"Allowed\\\"]]]]], Rule[\\\"Invertibility\\\", \\\"Impossible\\\"], \
Rule[\\\"Missing\\\", \\\"Allowed\\\"]]]], Rule[\\\"Method\\\", \
\\\"NearestNeighbors\\\"], Rule[\\\"PostProcessor\\\", \
MachineLearning`MLProcessor[\\\"Identity\\\"]], Rule[\\\"Options\\\", \
Association[Rule[\\\"NeighborsNumber\\\", Association[Rule[\\\"Value\\\", \
50], Rule[\\\"Options\\\", Association[]]]], Rule[\\\"DistributionSmoothing\\\
\", Association[Rule[\\\"Value\\\", 0.5`], Rule[\\\"Options\\\", \
Association[]]]], Rule[\\\"NearestMethod\\\", Association[Rule[\\\"Value\\\", \
\\\"KDtree\\\"], Rule[\\\"Options\\\", Association[]]]]]]]], \
Rule[\\\"TrainingInformation\\\", Association[Rule[\\\"PanelCell\\\", \
CellObject[201681]], Rule[\\\"TrainingFunction\\\", Classify], \
Rule[\\\"EMIterations\\\", Missing[\\\"KeyAbsent\\\", \\\"EMIterations\\\"]], \
Rule[\\\"ProcessorEntropyShift\\\", 0], Rule[\\\"PreprocessingTime\\\", \
0.1200265`6.530822135653541], Rule[\\\"LossName\\\", \
\\\"MeanCrossEntropy\\\"], Rule[\\\"BestModelInformation\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"14\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]], Rule[\\\"Configurations\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"10\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]], Rule[\\\"MaxTrainingSize\\\", 137], \
Rule[\\\"PreprocessorEvaluationTime\\\", 4.6485139580686`3.*^-6], \
Rule[\\\"PreprocessorMemory\\\", 43368], Rule[\\\"InputDimension\\\", 1], \
Rule[\\\"OutputDimension\\\", 1], Rule[\\\"BaselineLogProbability\\\", \
-1.0717287302022056`], Rule[\\\"VariableBudget\\\", True], \
Rule[\\\"CheckpointingInfo\\\", Association[Rule[\\\"Checkpointing\\\", \
False]]], Rule[\\\"UserStop\\\", False], Rule[\\\"NaturalStop\\\", True], \
Rule[\\\"AbortStop\\\", False], Rule[\\\"LastReportingTime\\\", \
3.7710698432335728`17.32903956512167*^9], Rule[\\\"RoundPartitioning\\\", \
RawBoxes[RowBox[List[\\\"Dataset\\\", RowBox[List[\\\"[\\\", RowBox[List[\\\"\
\\\\[LeftSkeleton]\\\", \\\"2\\\", \\\"\\\\[RightSkeleton]\\\"]], \
\\\"]\\\"]]]]]]]], Rule[\\\"Log\\\", Association[Rule[\\\"Example\\\", \
MachineLearning`MLDataset[Association[Rule[\\\"f1\\\", \
Association[Rule[\\\"Type\\\", \\\"Nominal\\\"], Rule[\\\"Weight\\\", 1], \
Rule[\\\"Values\\\", List[\\\"For the function \
W(x)=ln(1+\\\\!\\\\(\\\\*SuperscriptBox[\\\\(x\\\\), \\\\(4\\\\)]\\\\)) and \
the point x=1, find the secants at point Q and the tangenet line\\\"]], Rule[\
\\\"ID\\\", 4654099653526711133]]]], Association[Rule[\\\"ExampleNumber\\\", \
1], Rule[\\\"ExampleWeights\\\", 1], Rule[\\\"LogDensityRatios\\\", 0], Rule[\
\\\"RawExample\\\", False]]]], Rule[\\\"TrainingTime\\\", \
1.1817953044690073`], Rule[\\\"MaxTrainingMemory\\\", 1446536], \
Rule[\\\"DataMemory\\\", 14552], Rule[\\\"FunctionMemory\\\", 230504], \
Rule[\\\"LanguageVersion\\\", List[12.`, 0]], Rule[\\\"Date\\\", \
DateObject[List[2019, 7, 2, 15, 24, 3.397786`8.283771003554588], \
\\\"Instant\\\", \\\"Gregorian\\\", -4.`]], Rule[\\\"ProcessorCount\\\", 2], \
Rule[\\\"ProcessorType\\\", \\\"x86-64\\\"], Rule[\\\"OperatingSystem\\\", \\\
\"Windows\\\"], Rule[\\\"SystemWordLength\\\", 64], Rule[\\\"Evaluations\\\", \
List[]]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]]\\) should be a rule, a list of rules, or an \
association.\"",2,165,13,15900704727939038710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771086416885186*^9},
 CellLabel->
  "During evaluation of \
In[165]:=",ExpressionUUID->"d13a2951-534a-4b20-b39f-63e88537474b"],

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["ClassifierFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Nominal\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Nominal\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["137", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ClassifierFunction[
     Association[
     "ExampleNumber" -> 137, "ClassNumber" -> 3, "Input" -> 
      Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
          Association[
          "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
             Association["Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor["WrapMLDataset", 
                 Association[
                 "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                  "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                  Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
           True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
          Association[
          "Input" -> Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
           "Processors" -> {
             MachineLearning`MLProcessor["ToVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
               "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], 
               "Version" -> {12., 0}, "ID" -> 1537627216228573037]], 
             MachineLearning`MLProcessor["ImputeMissing", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "VectorLength" -> 
               1, "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "Type" -> 
               "NominalVector", "Version" -> {12., 0}, "ID" -> 
               4026204838636604962]], 
             MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                 Association[
                 "2+3" -> 1, "2/3 x+3 =15" -> 2, 
                  "-3(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-2x+7)" -> 3, 
                  "5(2x+4)" -> 4, 
                  "-(5\!\(\*SuperscriptBox[\(x\), \(4\)]\)-8)" -> 5, 
                  "8x-2=22" -> 6, "Add 1/2 and 1/3" -> 7, 
                  "A salesman is paid a monthly salary of $2,300 plus 7% \
commission on his monthly sales.\nDetermine the amount of sales required for \
his total monthly income to be $3,000." -> 8, 
                  "A salesman tells you that the $140 earrings are already \
marked 20% off. What\nwas the original price?" -> 9, 
                  "A $750 watch is on sale for 15% off. Find the sale price." -> 
                  10, "Combine 2 \!\(\*SubscriptBox[\(log\), \(4\)]\)x +5 \
\!\(\*SubscriptBox[\(log\), \(4\)]\)y - 1/2 \!\(\*SubscriptBox[\(log\), \
\(4\)]\)x" -> 11, "Combine like terms of 3a-6a+10a-a" -> 12, 
                  "Combine like terms of 3n-5\!\(\*SuperscriptBox[\(n\), \
\(\(2\)\(\\ \)\)]\)+6n-10+2\!\(\*SuperscriptBox[\(n\), \(2\)]\)" -> 13, 
                  "Combine the like terms of 5x-10y+6z-3x" -> 14, 
                  "Compute  the difrence quotient for the given function" -> 
                  15, "Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 \
+ x^2 + 9" -> 16, "Determine ln(\!\(\*SuperscriptBox[\(e\), \(4\)]\))" -> 17, 
                  "Evaluate 2\!\(\*SuperscriptBox[\(x\), \(2\)]\)-9 for x=-3" -> 
                  18, "Evaluate a-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when \
a=4 and b=2" -> 19, 
                  "Evaluate f(x)=3-5x-2\!\(\*SuperscriptBox[\(x\), \(2\)]\) \
for the below values: f(0), f(x+h), f(6-t)" -> 20, 
                  "Evaluate \!\(\*SuperscriptBox[\(a\), \(2\)]\)+b when a=7 \
and b=1" -> 21, 
                  "Evaluate \!\(\*SuperscriptBox[\(a\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=5 and b=3" -> 22, 
                  "Evaluate the derivative" -> 23, 
                  "Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz" -> 24, 
                  "Expand (a+b\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 25, 
                  "express 12 1/3 as an improper fraction" -> 26, 
                  "express 3 2/7 as an improper fraction" -> 27, 
                  "Express 42/5 as a mixed number" -> 28, 
                  "Express 53/9 as a mixed number" -> 29, 
                  "Find a perpedicular line of y=3x+2 with y intercept of the \
origin" -> 30, 
                  "Find extrema of f(x)=12+6\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(x\), \(3\)]\)" -> 31, 
                  "Find extrema of g(w)=tan (w)sec(w)" -> 32, 
                  "Find inverse of W (x) =  (9 \
\[Minus]11x\!\(\*SuperscriptBox[\()\), \(1/5\)]\)" -> 33, 
                  "Find the area under the curve of |x| from -1 to 1" -> 34, 
                  "Find the Derivative" -> 35, 
                  "Find the derivative of 2 cos(x)+arccos(x)" -> 36, 
                  "Find the derivative of f(x)=2\!\(\*SuperscriptBox[\(e\), \
\(x\)]\)-\!\(\*SuperscriptBox[\(8\), \(x\)]\)" -> 37, 
                  "Find the derivative of g(t)=4 \!\(\*SubscriptBox[\(log\), \
\(3\)]\)(t)-ln(t)" -> 38, 
                  "Find the derivative of \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(y\), \(3\)]\)=1" -> 39, 
                  "Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3" -> 40, "Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)" -> 41,
                   "Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))" -> 
                  42, "Find the deriviative of  tan (w)sec(w)" -> 43, 
                  "Find the domain of (\!\(\*SuperscriptBox[\(w\), \
\(3\)]\)-3w+1)/(12 w-7)" -> 44, 
                  "Find the equation of best fit for the below listed data" -> 
                  45, "Find the exact value of cos(5 \[Pi]/6) without using a \
calculator" -> 46, 
                  "Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator" -> 47, "Find the integral" -> 48, 
                  "Find the inverse of f (x) = 6x +15" -> 49, 
                  "Find the MacLauren Expanision of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 50, 
                  "find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4" -> 51, 
                  "Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + \
csc(\[Theta] )] d\[Theta]" -> 52, 
                  "Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw" -> 53,
                   "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \
\[Minus]18x + 7" -> 54, 
                  "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 55, 
                  "For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), L'Hoptial's rule to \
find the limit as x approaches -1" -> 56, 
                  "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), find the values at the \
below listed points and th limit as x aproaches 2" -> 57, 
                  "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), use L'Hoptial's rule to \
find the limit as x aproaches 2" -> 58, 
                  "For the function f(y)= sin(y)/y find the value at the \
below listed points and the limit as y approaches 0" -> 59, 
                  "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \(4\
\)]\)) and the point x=1, find the secants at point Q and the tangenet line" -> 
                  60, "Graph the inequality y<3x+4" -> 61, 
                  "Graph the parabola give by \!\(\*SuperscriptBox[\(x\), \(2\
\)]\)+3x+2. Find the zeros, vertex and intercept" -> 62, 
                  "How many miutes are in a day?" -> 63, 
                  "Identify the property used in the equations below as \
distributive, inverse or associative" -> 64, 
                  "Is x=-8 a solution to 1/2x+6>3?" -> 65, 
                  "Multiply 24/3 and 27/8" -> 66, "Multiply 8 and 3/24" -> 67,
                   "Plot 1.25, 2/3 and 2 on a number line" -> 68, 
                  "Simplify 10-(7+1)" -> 69, "Simplify 10-7+1" -> 70, 
                  "Simplify (15-3)/(1+5)" -> 71, 
                  "Simplify 24/(4-2\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 
                  72, "Simplify (2-5\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 
                  73, "Simplify 2-\!\(\*SuperscriptBox[\(5\), \(2\)]\)" -> 74,
                   "Simplify 4+5(1+12/6\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 
                  75, "Sketch the graph of f(x)=\!\(\*SuperscriptBox[\(3\), \
\(1 + 2  x\)]\)" -> 76, 
                  "Sketch the graph of h(x)=8+3\!\(\*SuperscriptBox[\(e\), \
\(2  t - 4\)]\)" -> 77, "Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0" -> 78, 
                  "Solve 3(x-5)+4=10" -> 79, 
                  "Solve 3\[Minus]14sin (12t + 7) =13" -> 80, 
                  "Solve  4sin (3t ) = 2" -> 81, 
                  "Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\!\(\*SuperscriptBox[\(2\), \(0.5\)]\) = 0 in [\[Minus]7\[Pi] ,7\[Pi] }" -> 
                  82, "Solve 4x-9=11" -> 83, 
                  "Solve 4y sec(7 y) = \[Minus]21y" -> 84, 
                  "Solve and graph the solution to 2x-3<7" -> 85, 
                  "Solve and graph the solution to |3x-1|\[GreaterEqual]10" -> 
                  86, "Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift \
card to Toys R Us for his birthday.\nSales tax is currently 9%. Determine the \
price of the most expensive toy Tommy can buy with\nthe $50 gift card." -> 87,
                   "Use the chain rule to find the derivative of \
Q(t)=(3\!\(\*SuperscriptBox[\(t\), \(3\)]\)-4\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)" -> 88, 
                  "Use the definition of the derivative to find the \
derivative of f(x)=6" -> 89, 
                  "Use the definition of the derivative to find the \
derivative of V (t ) = 3\[Minus]14t" -> 90, 
                  "Use the definition of the derivative to find the \
derivative of z(n)= (n+1)/(n+4)" -> 91, 
                  "Use the law of sines to find the missing side of this \
triangle" -> 92, 
                  "Use the quotient rule to find the derivative of z(n)= (z+1\
\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 93, 
                  "What are the discontiuities in the function \
y=(x+2)/(x+3x+2). Which are fundamental and which are removable?" -> 94, 
                  "What are the domain and range of \
\!\(\*SuperscriptBox[\(e\), \(x\)]\) and ln(x)" -> 95, 
                  "What are the domain and range of the trigonometric \
functions?" -> 96, "What is |1|" -> 97, "What is 10% of 100" -> 98, 
                  "What is 1+1" -> 99, "What is  1/2 + 1/3" -> 100, 
                  "What is 12 1/3 as an improper fraction" -> 101, 
                  "What is 2+2" -> 102, "What is 2+3" -> 103, 
                  "What is  24/3 * 27/8" -> 104, "What is |-30|" -> 105, 
                  "What is 3/18 in simplest form" -> 106, "What is 3-(-2)?" -> 
                  107, "What is -3+4" -> 108, 
                  "What is 42/54 in simplest form" -> 109, 
                  "What is 42/5 as a mixed number" -> 110, 
                  "What is 4% of 16?" -> 111, 
                  "What is 53/9 as a mixed number" -> 112, 
                  "What is  8 * 3/24" -> 113, 
                  "What is (a+b\!\(\*SuperscriptBox[\()\), \(n\)]\) (Hint: \
What theorem is this?)" -> 114, "What is ln(1)?" -> 115, "What is sin(60)" -> 
                  116, "What is tan(30)" -> 117, 
                  "What is the absolute value of -1?" -> 118, 
                  "What is the area under the curve \
\!\(\*SuperscriptBox[\(sin\), \(2\)]\)x from 0 to \[Pi]/2" -> 119, 
                  "What is the Deriviative" -> 120, 
                  "What is the integral of sin(2x)?" -> 121, 
                  "What is the integral of x dx" -> 122, 
                  "What is the largest value for the missing side of this \
triangle" -> 123, 
                  "What is the most specific subset of the real numbers that \
-7 is a part of?" -> 124, "What is the next term in the series " -> 125, 
                  "What is the sum from 1 to 5 of a=10n+3" -> 126, 
                  "what is the sum of the geometric series from 1 to infinity \
of 9(1/10\!\(\*SuperscriptBox[\()\), \(n\)]\)?" -> 127, 
                  "What is \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 128, 
                  "Wrie the standard form of y=3/2 x+2" -> 129, 
                  "Write 30 degrees in radians" -> 130, 
                  "write 3/18 in simplest form" -> 131, 
                  "What is 3 2/7 as an improper fraction" 
                   "write 42/54 in simplest form" -> 132, 
                  "Write slope intercept form for a slope of 2 and \
y-intercept of 12" -> 133, "Write \[Pi]/4 in degrees" -> 134, "-x-2=12" -> 
                  135, Null -> 136]}, "MissingCode" -> 0, 
               "Version" -> {12., 0}, "ID" -> 8874348951581137712, "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]]]]}, 
           "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
      Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
          Association[
          "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
             Association["Processors" -> {
                MachineLearning`MLProcessor["List"], 
                MachineLearning`MLProcessor["WrapMLDataset", 
                 Association[
                 "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                  "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                  Automatic, "RawExample" -> 
                  Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
           True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
          Association[
          "Input" -> Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Output" -> 
           Association[
            "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
           "Processors" -> {
             MachineLearning`MLProcessor["ToVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
               "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], 
               "Version" -> {12., 0}, "ID" -> 7740907413418953510]], 
             MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                 Association[
                 "algebra 1" -> 1, "algebra 2" -> 2, "calc" -> 3]}, 
               "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
               3923291764372626615, "Output" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1]]]], 
             MachineLearning`MLProcessor["FromVector", 
              Association[
              "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1, 
                   "SetSize" -> {3}]], "Output" -> 
               Association[
                "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
               "Version" -> {12., 0}, "ID" -> 689381485439722164]], 
             MachineLearning`MLProcessor["FirstValues", 
              Association[
              "Info" -> Association[
                "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
               "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
        "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
        Association[
         "algebra 1" -> 0.37142857142857144`, "algebra 2" -> 
          0.22857142857142856`, "calc" -> 0.39999999999999997`]], "Prior" -> 
      Automatic, "Utility" -> 
      SparseArray[
       Automatic, {3, 4}, 0., {
        1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
      "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
      "BatchProcessing" -> Automatic, "Model" -> 
      Association[
       "NeighborsFunction" -> 
        MachineLearning`PackageScope`NeighborsFunction["Nearest", 
          NearestFunction[
           Hold[
            Nearest[CompressedData["
1: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
              "] -> Automatic, Method -> "KDtree"]]]], "NeighborsNumber" -> 
        50, "ClassPriors" -> {0.37142857142857144`, 0.22857142857142856`, 
         0.39999999999999997`}, "TrainingOutput" -> 
        RawArray["UnsignedInteger8",{1, 3, 1, 2, 3, 2, 3, 2, 3, 1, 1, 1, 1, 1,
           1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, 2, 3, 2, 3, 3, 1, 3, 1, 
          2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3,
           1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 
          3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1,
           1, 2, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 
          1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3}], "DistributionSmoothing" -> 0.5, 
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
          Association[
          "Input" -> Association[
            "f1" -> Association[
              "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {136}]], 
           "Output" -> 
           Association[
            "f1" -> Association["Weight" -> 1, "Type" -> "NumericalVector"]], 
           "Processors" -> {
             MachineLearning`MLProcessor["EmbedNominalVector", 
              Association[
              "Invertibility" -> "Impossible", "Missing" -> "Allowed", 
               "Input" -> 
               Association[
                "f1" -> Association[
                  "Type" -> "NominalVector", "Weight" -> 1, 
                   "SetSize" -> {136}]], "Index" -> {
                 Association[
                 1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                  8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14,
                   15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20,
                   21 -> 21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26,
                   27 -> 27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32,
                   33 -> 33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 38,
                   39 -> 39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 44,
                   45 -> 45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 50,
                   51 -> 51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 56,
                   57 -> 57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 62,
                   63 -> 63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 68,
                   69 -> 69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 74,
                   75 -> 75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 80,
                   81 -> 81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 86,
                   87 -> 87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 92,
                   93 -> 93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 98,
                   99 -> 99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 103, 
                  104 -> 104, 105 -> 105, 106 -> 106, 107 -> 107, 108 -> 108, 
                  109 -> 109, 110 -> 110, 111 -> 111, 112 -> 112, 113 -> 113, 
                  114 -> 114, 115 -> 115, 116 -> 116, 117 -> 117, 118 -> 118, 
                  119 -> 119, 120 -> 120, 121 -> 121, 122 -> 122, 123 -> 123, 
                  124 -> 124, 125 -> 125, 126 -> 126, 127 -> 127, 128 -> 128, 
                  129 -> 129, 130 -> 130, 131 -> 131, 132 -> 132, 133 -> 133, 
                  134 -> 134, 135 -> 135, 136 -> 136]}, "Output" -> 
               Association[
                "f1" -> Association[
                  "Weight" -> 1, "Type" -> "NumericalVector"]], 
               "EmbeddingVectors" -> CompressedData["
1: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

                "], "Version" -> {12., 0}, "ID" -> 7204649762786858506]], 
             MachineLearning`MLProcessor["FirstValues", 
              Association[
              "Info" -> Association[
                "Weight" -> 1, "Type" -> "NumericalVector"], "Key" -> "f1", 
               "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
           "Invertibility" -> "Impossible", "Missing" -> "Allowed"]], 
        "Method" -> "NearestNeighbors", "PostProcessor" -> 
        MachineLearning`MLProcessor["Identity"], "Options" -> 
        Association[
         "NeighborsNumber" -> 
          Association["Value" -> 50, "Options" -> Association[]], 
          "DistributionSmoothing" -> 
          Association["Value" -> 0.5, "Options" -> Association[]], 
          "NearestMethod" -> 
          Association["Value" -> "KDtree", "Options" -> Association[]]]], 
      "TrainingInformation" -> 
      Association[
       "PanelCell" -> CellObject[201681], "TrainingFunction" -> Classify, 
        "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
        "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
        0.1200265`6.530822135653541, "LossName" -> "MeanCrossEntropy", 
        "BestModelInformation" -> Dataset[
          Association[
          "MeanCrossEntropy" -> 
           Around[1.0596115829936994`, 0.06122631280938329], "Accuracy" -> 
           Around[0.4408005735886313, 0.13467140246648074`], "EvaluationTime" -> 
           0.000046626867103487635`, "TestSize" -> 27, "ModelMemory" -> 42744,
            "ModelUtility" -> -0.7625597954854385, "TrainingSize" -> 110, 
           "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
           437880, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
             Around[1.0596115829936994`, 0.0432935409745637]}, 
           "AccuracyHistory" -> {
             Around[0.4408005735886313, 0.09522706191595126]}, 
           "Configuration" -> {
            "NearestNeighbors", "NeighborsNumber" -> Automatic, 
             "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
           "FinalTrainingSize" -> 137], 
          
          TypeSystem`Struct[{
           "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
            "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
            "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
            "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Vector[TypeSystem`AnyType, 1], 
            TypeSystem`Tuple[{
              TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType,
               TypeSystem`AnyType}], 
            TypeSystem`Atom[Integer]}], 
          Association["ID" -> 124275052256403]], "Configurations" -> Dataset[
          Association[
          Association[
            "Value" -> "GradientBoostedTrees", "Options" -> 
             Association[
              "BoostingMethod" -> Association["Value" -> "Gradient"], 
               MaxTrainingRounds -> Association["Value" -> 50], 
               "LeavesNumber" -> Association["Value" -> 60], "LearningRate" -> 
               Association["Value" -> 0.1], ValidationSet -> 
               Association["Value" -> Automatic], "MaxBinNumber" -> 
               Association["Value" -> 255], "ThreadNumber" -> 
               Association["Value" -> 2], "MaxDepth" -> 
               Association["Value" -> 6], "LeafSize" -> 
               Association["Value" -> 35], "FeatureFraction" -> 
               Association["Value" -> 1], "BaggingFraction" -> 
               Association["Value" -> 1], "BaggingFrequency" -> 
               Association["Value" -> 0], "MinGainToSplit" -> 
               Association["Value" -> 0], "L1Regularization" -> 
               Association["Value" -> 0], "L2Regularization" -> 
               Association["Value" -> 0], "LossFunction" -> 
               Association["Value" -> Automatic]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0976536116647921`, 0.008130168130892507], "Accuracy" -> 
                Around[0.4164963546087643, 0.06298092808890327], 
                "EvaluationTime" -> 0.00004117846609032098, "TestSize" -> 122,
                 "ModelMemory" -> 27408, 
                "ModelUtility" -> -0.7878188025759316, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                68288, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0976536116647921`, 0.005748897017540849]}, 
                "AccuracyHistory" -> {
                  Around[0.4164963546087643, 0.044534241337085806`]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1742667790460415`, 0.08403278565139402], "Accuracy" -> 
                Around[0.19080057358863137`, 0.10449918945611414`], 
                "EvaluationTime" -> 0.0005869974786893012, "TestSize" -> 27, 
                "ModelMemory" -> 313528, "ModelUtility" -> -0.868085732303797,
                 "TrainingSize" -> 110, "TrainingTime" -> 
                0.19952623149688792`, "TrainingMemory" -> 1111640, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1742667790460415`, 0.05942015257609632]}, 
                "AccuracyHistory" -> {
                  Around[0.19080057358863137`, 0.07389208549291607]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.0005869974786893012, "MeanCrossEntropy" -> 
               Around[1.1742667790460415`, 0.08403278565139402], 
               "ModelMemory" -> 313528, "TrainingMemory" -> 1111640, 
               "TrainingTime" -> 0.26434978387982605`], "Index" -> 1], 
           Association[
            "Value" -> "RandomForest", "Options" -> 
             Association[
              "FeatureFraction" -> Association["Value" -> Automatic], 
               "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
               Association["Value" -> Automatic], "DistributionSmoothing" -> 
               Association["Value" -> 0.5], "Implementation" -> 
               Association["Value" -> Automatic]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1020994344135946`, 0.016300326077189217`], 
                "Accuracy" -> 
                Around[0.37962788178694723`, 0.06850855157524109], 
                "EvaluationTime" -> 0.0000630957344480193, "TestSize" -> 100, 
                "ModelMemory" -> 96272, "ModelUtility" -> -0.7933503818645214,
                 "TrainingSize" -> 15, "TrainingTime" -> 
                0.025118864315095794`, "TrainingMemory" -> 157344, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1020994344135946`, 0.011526071104732409`]}, 
                "AccuracyHistory" -> {
                  Around[0.37962788178694723`, 0.0484428613881213]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.0000630957344480193, "MeanCrossEntropy" -> 
               Around[1.1020994344135946`, 0.016300326077189217`], 
               "ModelMemory" -> 96272, "TrainingMemory" -> 157344, 
               "TrainingTime" -> 0.05953170842677703], "Index" -> 2], 
           Association[
            "Value" -> "NearestNeighbors", "Options" -> 
             Association[
              "NeighborsNumber" -> Association["Value" -> Automatic], 
               "DistributionSmoothing" -> Association["Value" -> 0.5], 
               "NearestMethod" -> Association["Value" -> Automatic]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1261639135238315`, 0.045770646384954705`], 
                "Accuracy" -> 
                Around[0.37916852977973536`, 0.037593651496341175`], 
                "EvaluationTime" -> 0.000022040597365289483`, "TestSize" -> 
                244, "ModelMemory" -> 17304., 
                "ModelUtility" -> -0.8200741591520756, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.0054444393724491225`, "TrainingMemory" -> 
                68096., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                  Around[1.0856221374570953`, 0.026777067745218062`], 
                  Around[1.1667056895905676`, 0.03489892119642117]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`], 
                  Around[0.4006549847888459, 0.04425615755465977]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0596115829936994`, 0.06122631280938329], "Accuracy" -> 
                Around[0.4408005735886313, 0.13467140246648074`], 
                "EvaluationTime" -> 0.000046626867103487635`, "TestSize" -> 
                27, "ModelMemory" -> 42744, 
                "ModelUtility" -> -0.7625597954854385, "TrainingSize" -> 110, 
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                437880, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0596115829936994`, 0.0432935409745637]}, 
                "AccuracyHistory" -> {
                  Around[0.4408005735886313, 0.09522706191595126]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000046626867103487635`, 
               "MeanCrossEntropy" -> 
               Around[1.0596115829936994`, 0.06122631280938329], 
               "ModelMemory" -> 42744, "TrainingMemory" -> 437880, 
               "TrainingTime" -> 0.025183563678555714`], "Index" -> 3], 
           Association[
            "Value" -> "DecisionTree", "Options" -> 
             Association[
              "DistributionSmoothing" -> Association["Value" -> 1], 
               "FeatureFraction" -> Association["Value" -> 1]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1177036461762946`, 0.03799495031562989], "Accuracy" -> 
                Around[0.37534938847134613`, 0.03984671598964482], 
                "EvaluationTime" -> 0.000024431215670146456`, "TestSize" -> 
                244, "ModelMemory" -> 20797.333333333332`, 
                "ModelUtility" -> -0.8112141587658148, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.00630957344480193, "TrainingMemory" -> 
                77850.66666666666, "ExperimentCount" -> 2, 
                "MeanCrossEntropyHistory" -> {
                  Around[1.1492898532562392`, 0.02937363815321428], 
                  Around[1.08611743909635, 0.030379665523616508`]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336], 
                  Around[0.4006549847888459, 0.04425615755465977]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0607894573706145`, 0.056467241345510115`], 
                "Accuracy" -> 
                Around[0.4408005735886313, 0.13467140246648074`], 
                "EvaluationTime" -> 0.000037037037037037037`, "TestSize" -> 
                27, "ModelMemory" -> 48744, 
                "ModelUtility" -> -0.7627720657504579, "TrainingSize" -> 110, 
                "TrainingTime" -> 0.01, "TrainingMemory" -> 102304, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0607894573706145`, 0.03992836927030759]}, 
                "AccuracyHistory" -> {
                  Around[0.4408005735886313, 0.09522706191595126]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000037037037037037037`, 
               "MeanCrossEntropy" -> 
               Around[1.0607894573706145`, 0.056467241345510115`], 
               "ModelMemory" -> 48744, "TrainingMemory" -> 102304, 
               "TrainingTime" -> 0.018764118899347385`], "Index" -> 4], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 100.], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0968882438802035`, 0.008558145266237417], "Accuracy" -> 
                Around[0.3500437921538463, 0.06058006533385557], 
                "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.7871983801331214, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
                76856, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0968882438802035`, 0.006051522552136028]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336]}], 
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0831672350421224`, 0.031914212155672285`], 
                "Accuracy" -> 
                Around[0.4408005735886313, 0.13467140246648074`], 
                "EvaluationTime" -> 0.000029419564249047453`, "TestSize" -> 
                27, "ModelMemory" -> 38008, 
                "ModelUtility" -> -0.7789309995210105, "TrainingSize" -> 110, 
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
                110680, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0831672350421224`, 0.022566755831502014`]}, 
                "AccuracyHistory" -> {
                  Around[0.4408005735886313, 0.09522706191595126]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000029419564249047453`, 
               "MeanCrossEntropy" -> 
               Around[1.0831672350421224`, 0.031914212155672285`], 
               "ModelMemory" -> 38008, "TrainingMemory" -> 110680, 
               "TrainingTime" -> 0.03232837842404826], "Index" -> 5], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 1.*^6], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.0976535090689574`, 0.008130167932434623], "Accuracy" -> 
                Around[0.3500437921538463, 0.06058006533385557], 
                "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.7878168578701964, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.01, "TrainingMemory" -> 73240, 
                "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.0976535090689574`, 0.005748896877209934]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.00001336850282360814, "MeanCrossEntropy" -> 
               Around[1.0976535090689574`, 0.008130167932434623], 
               "ModelMemory" -> 19576, "TrainingMemory" -> 73240, 
               "TrainingTime" -> 0.0237], "Index" -> 6], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 1.*^-6], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.295296040218015, 0.07466361217313978], "Accuracy" -> 
                Around[0.35768207477062475`, 0.06084237750627133], 
                "EvaluationTime" -> 0.00001851578206388661, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.9633636089627616, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
                82368, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.295296040218015, 0.0527951464755096]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.00001851578206388661, "MeanCrossEntropy" -> 
               Around[1.295296040218015, 0.07466361217313978], "ModelMemory" -> 
               19576, "TrainingMemory" -> 82368, "TrainingTime" -> 
               0.07494598054599058], "Index" -> 7], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 0.01], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.290089012623834, 0.07384836644867501], "Accuracy" -> 
                Around[0.35768207477062475`, 0.06084237750627133], 
                "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122,
                 "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.9592566021239609, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
                83400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.290089012623834, 0.052218680695407214`]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.00001336850282360814, "MeanCrossEntropy" -> 
               Around[1.290089012623834, 0.07384836644867501], "ModelMemory" -> 
               19576, "TrainingMemory" -> 83400, "TrainingTime" -> 
               0.05953170842677703], "Index" -> 8], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 10.], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1039938232077493`, 0.019599916896104085`], 
                "Accuracy" -> Around[0.3500437921538463, 0.06058006533385557],
                 "EvaluationTime" -> 0.000011682668682003888`, "TestSize" -> 
                122, "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.795640645593292, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
                79096, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1039938232077493`, 0.013859234147927986`]}, 
                "AccuracyHistory" -> {
                  Around[0.3500437921538463, 0.04283657500229336]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000011682668682003888`, 
               "MeanCrossEntropy" -> 
               Around[1.1039938232077493`, 0.019599916896104085`], 
               "ModelMemory" -> 19576, "TrainingMemory" -> 79096, 
               "TrainingTime" -> 0.029836532259521754`], "Index" -> 9], 
           Association[
            "Value" -> "LogisticRegression", "Options" -> 
             Association[
              "L1Regularization" -> Association["Value" -> 0], 
               "L2Regularization" -> Association["Value" -> 1.], 
               "OptimizationMethod" -> Association["Value" -> Automatic], 
               MaxIterations -> Association["Value" -> 30]]] -> 
           Association["Experiments" -> {
               Association[
               "MeanCrossEntropy" -> 
                Around[1.1693208449659471`, 0.0485671430402716], "Accuracy" -> 
                Around[0.35768207477062475`, 0.06084237750627133], 
                "EvaluationTime" -> 0.000011682668682003888`, "TestSize" -> 
                122, "ModelMemory" -> 19576, 
                "ModelUtility" -> -0.8578575433531915, "TrainingSize" -> 15, 
                "TrainingTime" -> 0.025118864315095794`, "TrainingMemory" -> 
                82328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                  Around[1.1693208449659471`, 0.03434215618663308]}, 
                "AccuracyHistory" -> {
                  Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
             "PredictedPerformances" -> 
             Association[
              "EvaluationTime" -> 0.000011682668682003888`, 
               "MeanCrossEntropy" -> 
               Around[1.1693208449659471`, 0.0485671430402716], "ModelMemory" -> 
               19576, "TrainingMemory" -> 82328, "TrainingTime" -> 
               0.05953170842677703], "Index" -> 10]], 
          TypeSystem`Assoc[
           TypeSystem`Struct[{"Value", "Options"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
               "NearestNeighbors", "RandomForest"]], 
             TypeSystem`Assoc[TypeSystem`AnyType, 
              TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
              TypeSystem`AnyLength]}], 
           
           TypeSystem`Struct[{
            "Experiments", "PredictedPerformances", "Index"}, {
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime",
                 "TrainingMemory", "ExperimentCount", 
                "MeanCrossEntropyHistory", "AccuracyHistory"}, {
               TypeSystem`AnyType, TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}],
               TypeSystem`AnyLength], 
             
             TypeSystem`Struct[{
              "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
               "TrainingMemory", "TrainingTime"}, {
               TypeSystem`Atom[Real], TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real]}], 
             TypeSystem`Atom[Integer]}], 10], 
          Association["ID" -> 124270757289107]], "MaxTrainingSize" -> 137, 
        "PreprocessorEvaluationTime" -> 4.6485139580686`3.*^-6, 
        "PreprocessorMemory" -> 43368, "InputDimension" -> 1, 
        "OutputDimension" -> 1, 
        "BaselineLogProbability" -> -1.0717287302022056`, "VariableBudget" -> 
        True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
        "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
        "LastReportingTime" -> 3.7710698432335728`17.32903956512167*^9, 
        "RoundPartitioning" -> Dataset[{
           Association[
           "TrainingSizes" -> 15, "TimeBudgets" -> 0.28, "ElapsedTimes" -> 
            0.27203499999999997`, "ExperimentCounts" -> 12], 
           Association[
           "TrainingSizes" -> 110, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
            0.48403660000000004`, "ExperimentCounts" -> 4]}, 
          TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
             "ExperimentCounts"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer]}], 2], 
          Association[
          "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
             Dataset`DatasetHandle[124279347223699]], "ID" -> 
           124283642190995]]], "Log" -> 
      Association["Example" -> MachineLearning`MLDataset[
          Association[
          "f1" -> Association[
            "Type" -> "Nominal", "Weight" -> 1, 
             "Values" -> {
              "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \
\(4\)]\)) and the point x=1, find the secants at point Q and the tangenet \
line"}, "ID" -> 4654099653526711133]], 
          Association[
          "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
           0, "RawExample" -> False]], "TrainingTime" -> 1.1817953044690073`, 
        "MaxTrainingMemory" -> 1446536, "DataMemory" -> 14552, 
        "FunctionMemory" -> 230504, "LanguageVersion" -> {12., 0}, "Date" -> 
        DateObject[{2019, 7, 2, 15, 24, 3.397786`8.283771003554588}, 
          "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
        "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
        "SystemWordLength" -> 64, "Evaluations" -> {}]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "\<\"TopProbabilities\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.771086416916438*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"70d85379-64bb-40c4-b3cc-05176b7623fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"questionClassifier", ",", " ", 
   RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7710864689863415`*^9, 3.7710865512215843`*^9}, {
  3.7710865999766264`*^9, 3.7710866060745277`*^9}, {3.77108667435854*^9, 
  3.771086677585741*^9}, {3.771086768559514*^9, 3.7710867704177914`*^9}, {
  3.7710890189351196`*^9, 3.7710890200072145`*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"15249994-5cb2-485d-b8e8-5a88f54402e2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Nominal\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Nominal\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NearestNeighbors\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["137", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 137, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 1537627216228573037]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "VectorLength" -> 1, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Type" -> "NominalVector", "Version" -> {12., 0}, "ID" -> 
             4026204838636604962]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "2+3" -> 1, "2/3 x+3 =15" -> 2, 
                "-3(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-2x+7)" -> 3, 
                "5(2x+4)" -> 4, "-(5\!\(\*SuperscriptBox[\(x\), \(4\)]\)-8)" -> 
                5, "8x-2=22" -> 6, "Add 1/2 and 1/3" -> 7, 
                "A salesman is paid a monthly salary of $2,300 plus 7% \
commission on his monthly sales.\nDetermine the amount of sales required for \
his total monthly income to be $3,000." -> 8, 
                "A salesman tells you that the $140 earrings are already \
marked 20% off. What\nwas the original price?" -> 9, 
                "A $750 watch is on sale for 15% off. Find the sale price." -> 
                10, "Combine 2 \!\(\*SubscriptBox[\(log\), \(4\)]\)x +5 \
\!\(\*SubscriptBox[\(log\), \(4\)]\)y - 1/2 \!\(\*SubscriptBox[\(log\), \
\(4\)]\)x" -> 11, "Combine like terms of 3a-6a+10a-a" -> 12, 
                "Combine like terms of 3n-5\!\(\*SuperscriptBox[\(n\), \
\(\(2\)\(\\ \)\)]\)+6n-10+2\!\(\*SuperscriptBox[\(n\), \(2\)]\)" -> 13, 
                "Combine the like terms of 5x-10y+6z-3x" -> 14, 
                "Compute  the difrence quotient for the given function" -> 15,
                 "Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + \
x^2 + 9" -> 16, "Determine ln(\!\(\*SuperscriptBox[\(e\), \(4\)]\))" -> 17, 
                "Evaluate 2\!\(\*SuperscriptBox[\(x\), \(2\)]\)-9 for x=-3" -> 
                18, "Evaluate a-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=4 \
and b=2" -> 19, 
                "Evaluate f(x)=3-5x-2\!\(\*SuperscriptBox[\(x\), \(2\)]\) for \
the below values: f(0), f(x+h), f(6-t)" -> 20, 
                "Evaluate \!\(\*SuperscriptBox[\(a\), \(2\)]\)+b when a=7 and \
b=1" -> 21, 
                "Evaluate \!\(\*SuperscriptBox[\(a\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=5 and b=3" -> 22, 
                "Evaluate the derivative" -> 23, 
                "Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz" -> 24, 
                "Expand (a+b\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 25, 
                "express 12 1/3 as an improper fraction" -> 26, 
                "express 3 2/7 as an improper fraction" -> 27, 
                "Express 42/5 as a mixed number" -> 28, 
                "Express 53/9 as a mixed number" -> 29, 
                "Find a perpedicular line of y=3x+2 with y intercept of the \
origin" -> 30, 
                "Find extrema of f(x)=12+6\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(x\), \(3\)]\)" -> 31, 
                "Find extrema of g(w)=tan (w)sec(w)" -> 32, 
                "Find inverse of W (x) =  (9 \[Minus]11x\!\(\*SuperscriptBox[\
\()\), \(1/5\)]\)" -> 33, "Find the area under the curve of |x| from -1 to 1" -> 
                34, "Find the Derivative" -> 35, 
                "Find the derivative of 2 cos(x)+arccos(x)" -> 36, 
                "Find the derivative of f(x)=2\!\(\*SuperscriptBox[\(e\), \(x\
\)]\)-\!\(\*SuperscriptBox[\(8\), \(x\)]\)" -> 37, 
                "Find the derivative of g(t)=4 \!\(\*SubscriptBox[\(log\), \
\(3\)]\)(t)-ln(t)" -> 38, 
                "Find the derivative of \!\(\*SuperscriptBox[\(x\), \(2\)]\)/\
\!\(\*SuperscriptBox[\(y\), \(3\)]\)=1" -> 39, 
                "Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3" -> 40, "Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)" -> 41,
                 "Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))" -> 42, 
                "Find the deriviative of  tan (w)sec(w)" -> 43, 
                "Find the domain of (\!\(\*SuperscriptBox[\(w\), \
\(3\)]\)-3w+1)/(12 w-7)" -> 44, 
                "Find the equation of best fit for the below listed data" -> 
                45, "Find the exact value of cos(5 \[Pi]/6) without using a \
calculator" -> 46, 
                "Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator" -> 47, "Find the integral" -> 48, 
                "Find the inverse of f (x) = 6x +15" -> 49, 
                "Find the MacLauren Expanision of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 50, 
                "find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4" -> 51, 
                "Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\
\[Theta] )] d\[Theta]" -> 52, 
                "Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw" -> 53, 
                "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \
\[Minus]18x + 7" -> 54, 
                "Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 55, 
                "For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), L'Hoptial's rule to \
find the limit as x approaches -1" -> 56, 
                "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), find the values at the \
below listed points and th limit as x aproaches 2" -> 57, 
                
                "For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), use L'Hoptial's rule to \
find the limit as x aproaches 2" -> 58, 
                "For the function f(y)= sin(y)/y find the value at the below \
listed points and the limit as y approaches 0" -> 59, 
                "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \
\(4\)]\)) and the point x=1, find the secants at point Q and the tangenet \
line" -> 60, "Graph the inequality y<3x+4" -> 61, 
                "Graph the parabola give by \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+3x+2. Find the zeros, vertex and intercept" -> 62, 
                "How many miutes are in a day?" -> 63, 
                "Identify the property used in the equations below as \
distributive, inverse or associative" -> 64, 
                "Is x=-8 a solution to 1/2x+6>3?" -> 65, 
                "Multiply 24/3 and 27/8" -> 66, "Multiply 8 and 3/24" -> 67, 
                "Plot 1.25, 2/3 and 2 on a number line" -> 68, 
                "Simplify 10-(7+1)" -> 69, "Simplify 10-7+1" -> 70, 
                "Simplify (15-3)/(1+5)" -> 71, 
                "Simplify 24/(4-2\!\(\*SuperscriptBox[\()\), \(3\)]\)" -> 72, 
                "Simplify (2-5\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 73, 
                "Simplify 2-\!\(\*SuperscriptBox[\(5\), \(2\)]\)" -> 74, 
                "Simplify 4+5(1+12/6\!\(\*SuperscriptBox[\()\), \(2\)]\)" -> 
                75, "Sketch the graph of f(x)=\!\(\*SuperscriptBox[\(3\), \(1 \
+ 2  x\)]\)" -> 76, 
                "Sketch the graph of h(x)=8+3\!\(\*SuperscriptBox[\(e\), \(2  \
t - 4\)]\)" -> 77, "Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0" -> 78, 
                "Solve 3(x-5)+4=10" -> 79, 
                "Solve 3\[Minus]14sin (12t + 7) =13" -> 80, 
                "Solve  4sin (3t ) = 2" -> 81, 
                "Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\!\(\*SuperscriptBox[\(2\), \(0.5\)]\) = 0 in [\[Minus]7\[Pi] ,7\[Pi] }" -> 
                82, "Solve 4x-9=11" -> 83, "Solve 4y sec(7 y) = \[Minus]21y" -> 
                84, "Solve and graph the solution to 2x-3<7" -> 85, 
                "Solve and graph the solution to |3x-1|\[GreaterEqual]10" -> 
                86, "Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift \
card to Toys R Us for his birthday.\nSales tax is currently 9%. Determine the \
price of the most expensive toy Tommy can buy with\nthe $50 gift card." -> 87,
                 "Use the chain rule to find the derivative of \
Q(t)=(3\!\(\*SuperscriptBox[\(t\), \(3\)]\)-4\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)" -> 88, 
                "Use the definition of the derivative to find the derivative \
of f(x)=6" -> 89, 
                "Use the definition of the derivative to find the derivative \
of V (t ) = 3\[Minus]14t" -> 90, 
                "Use the definition of the derivative to find the derivative \
of z(n)= (n+1)/(n+4)" -> 91, 
                "Use the law of sines to find the missing side of this \
triangle" -> 92, 
                "Use the quotient rule to find the derivative of z(n)= (z+1\!\
\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)" -> 93, 
                "What are the discontiuities in the function \
y=(x+2)/(x+3x+2). Which are fundamental and which are removable?" -> 94, 
                "What are the domain and range of \!\(\*SuperscriptBox[\(e\), \
\(x\)]\) and ln(x)" -> 95, 
                "What are the domain and range of the trigonometric \
functions?" -> 96, "What is |1|" -> 97, "What is 10% of 100" -> 98, 
                "What is 1+1" -> 99, "What is  1/2 + 1/3" -> 100, 
                "What is 12 1/3 as an improper fraction" -> 101, 
                "What is 2+2" -> 102, "What is 2+3" -> 103, 
                "What is  24/3 * 27/8" -> 104, "What is |-30|" -> 105, 
                "What is 3/18 in simplest form" -> 106, "What is 3-(-2)?" -> 
                107, "What is -3+4" -> 108, "What is 42/54 in simplest form" -> 
                109, "What is 42/5 as a mixed number" -> 110, 
                "What is 4% of 16?" -> 111, "What is 53/9 as a mixed number" -> 
                112, "What is  8 * 3/24" -> 113, 
                "What is (a+b\!\(\*SuperscriptBox[\()\), \(n\)]\) (Hint: What \
theorem is this?)" -> 114, "What is ln(1)?" -> 115, "What is sin(60)" -> 116, 
                "What is tan(30)" -> 117, "What is the absolute value of -1?" -> 
                118, "What is the area under the curve \
\!\(\*SuperscriptBox[\(sin\), \(2\)]\)x from 0 to \[Pi]/2" -> 119, 
                "What is the Deriviative" -> 120, 
                "What is the integral of sin(2x)?" -> 121, 
                "What is the integral of x dx" -> 122, 
                "What is the largest value for the missing side of this \
triangle" -> 123, 
                "What is the most specific subset of the real numbers that -7 \
is a part of?" -> 124, "What is the next term in the series " -> 125, 
                "What is the sum from 1 to 5 of a=10n+3" -> 126, 
                "what is the sum of the geometric series from 1 to infinity \
of 9(1/10\!\(\*SuperscriptBox[\()\), \(n\)]\)?" -> 127, 
                "What is \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx" -> 128, 
                "Wrie the standard form of y=3/2 x+2" -> 129, 
                "Write 30 degrees in radians" -> 130, 
                "write 3/18 in simplest form" -> 131, 
                "What is 3 2/7 as an improper fraction" 
                 "write 42/54 in simplest form" -> 132, 
                "Write slope intercept form for a slope of 2 and y-intercept \
of 12" -> 133, "Write \[Pi]/4 in degrees" -> 134, "-x-2=12" -> 135, Null -> 
                136]}, "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
             8874348951581137712, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 7740907413418953510]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association["algebra 1" -> 1, "algebra 2" -> 2, "calc" -> 3]}, 
             "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
             3923291764372626615, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {3}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 689381485439722164]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "algebra 1" -> 0.37142857142857144`, "algebra 2" -> 
        0.22857142857142856`, "calc" -> 0.39999999999999997`]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "NeighborsFunction" -> 
      MachineLearning`PackageScope`NeighborsFunction["Nearest", 
        NearestFunction[
         Hold[
          Nearest[CompressedData["
1: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
            "] -> Automatic, Method -> "KDtree"]]]], "NeighborsNumber" -> 50, 
      "ClassPriors" -> {0.37142857142857144`, 0.22857142857142856`, 
       0.39999999999999997`}, "TrainingOutput" -> 
      RawArray["UnsignedInteger8",{1, 3, 1, 2, 3, 2, 3, 2, 3, 1, 1, 1, 1, 1, 
        1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, 2, 3, 2, 3, 3, 1, 3, 1, 2, 
        3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 
        3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 
        3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 2, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 2, 
        3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 1, 3, 1, 2, 3, 
        1, 1, 1, 2, 3, 2, 3, 3}], "DistributionSmoothing" -> 0.5, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association[
            "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {136}]], 
         "Output" -> 
         Association[
          "f1" -> Association["Weight" -> 1, "Type" -> "NumericalVector"]], 
         "Processors" -> {
           MachineLearning`MLProcessor["EmbedNominalVector", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {136}]], "Index" -> {
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 21 -> 
                21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26, 27 -> 
                27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32, 33 -> 
                33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 38, 39 -> 
                39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 44, 45 -> 
                45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 50, 51 -> 
                51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 56, 57 -> 
                57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 62, 63 -> 
                63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 68, 69 -> 
                69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 74, 75 -> 
                75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 80, 81 -> 
                81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 86, 87 -> 
                87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 92, 93 -> 
                93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 98, 99 -> 
                99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 103, 104 -> 
                104, 105 -> 105, 106 -> 106, 107 -> 107, 108 -> 108, 109 -> 
                109, 110 -> 110, 111 -> 111, 112 -> 112, 113 -> 113, 114 -> 
                114, 115 -> 115, 116 -> 116, 117 -> 117, 118 -> 118, 119 -> 
                119, 120 -> 120, 121 -> 121, 122 -> 122, 123 -> 123, 124 -> 
                124, 125 -> 125, 126 -> 126, 127 -> 127, 128 -> 128, 129 -> 
                129, 130 -> 130, 131 -> 131, 132 -> 132, 133 -> 133, 134 -> 
                134, 135 -> 135, 136 -> 136]}, "Output" -> 
             Association[
              "f1" -> Association[
                "Weight" -> 1, "Type" -> "NumericalVector"]], 
             "EmbeddingVectors" -> CompressedData["
1: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

              "], "Version" -> {12., 0}, "ID" -> 7204649762786858506]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Allowed"]], "Method" -> "NearestNeighbors", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "NeighborsNumber" -> 
        Association["Value" -> 50, "Options" -> Association[]], 
        "DistributionSmoothing" -> 
        Association["Value" -> 0.5, "Options" -> Association[]], 
        "NearestMethod" -> 
        Association["Value" -> "KDtree", "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[266049], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.1359906`6.585053883416054, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[1.0596115829936994`, 0.06122631280938329], "Accuracy" -> 
         Around[0.4408005735886313, 0.13467140246648074`], "EvaluationTime" -> 
         0.000037037037037037037`, "TestSize" -> 27, "ModelMemory" -> 42744, 
         "ModelUtility" -> -0.7625597858909681, "TrainingSize" -> 110, 
         "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 438904, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.0596115829936994`, 0.0432935409745637]}, 
         "AccuracyHistory" -> {
           Around[0.4408005735886313, 0.09522706191595126]}, 
         "Configuration" -> {
          "NearestNeighbors", "NeighborsNumber" -> Automatic, 
           "DistributionSmoothing" -> 0.5, "NearestMethod" -> Automatic}, 
         "FinalTrainingSize" -> 137], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 124369541541757]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 2], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> Automatic]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0977893225926212`, 0.008343883369458639], "Accuracy" -> 
              Around[0.409330852083977, 0.06945052146308145], 
              "EvaluationTime" -> 0.0001, "TestSize" -> 100, "ModelMemory" -> 
              27408, "ModelUtility" -> -0.7879811854138467, "TrainingSize" -> 
              15, "TrainingTime" -> 0.01995262314968879, "TrainingMemory" -> 
              68416, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.0977893225926212`, 0.005900016511973862]}, 
              "AccuracyHistory" -> {
                Around[0.409330852083977, 0.04910893468348675]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.1742667790460415`, 0.08403278565139402], "Accuracy" -> 
              Around[0.19080057358863137`, 0.10449918945611414`], 
              "EvaluationTime" -> 0.0009303283079665108, "TestSize" -> 27, 
              "ModelMemory" -> 313528, "ModelUtility" -> -0.868086075629986, 
              "TrainingSize" -> 110, "TrainingTime" -> 0.19952623149688792`, 
              "TrainingMemory" -> 1224976, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1742667790460415`, 0.05942015257609632]}, 
              "AccuracyHistory" -> {
                Around[0.19080057358863137`, 0.07389208549291607]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0009303283079665108, "MeanCrossEntropy" -> 
             Around[1.1742667790460415`, 0.08403278565139402], "ModelMemory" -> 
             313528, "TrainingMemory" -> 1224976, "TrainingTime" -> 
             0.2684534751049037], "Index" -> 1], 
         Association[
          "Value" -> "RandomForest", "Options" -> 
           Association[
            "FeatureFraction" -> Association["Value" -> Automatic], 
             "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
             Association["Value" -> Automatic], "DistributionSmoothing" -> 
             Association["Value" -> 0.5], "Implementation" -> 
             Association["Value" -> Automatic]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.1049066319477259`, 0.015264180201640899`], "Accuracy" -> 
              Around[0.35768207477062475`, 0.06084237750627133], 
              "EvaluationTime" -> 0.00007371265608039089, "TestSize" -> 122, 
              "ModelMemory" -> 96272, "ModelUtility" -> -0.7956997778053186, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 158336, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1049066319477259`, 0.010793405329833722`]}, 
              "AccuracyHistory" -> {
                Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00007371265608039089, "MeanCrossEntropy" -> 
             Around[1.1049066319477259`, 0.015264180201640899`], 
             "ModelMemory" -> 96272, "TrainingMemory" -> 158336, 
             "TrainingTime" -> 0.05953170842677703], "Index" -> 2], 
         Association[
          "Value" -> "NearestNeighbors", "Options" -> 
           Association[
            "NeighborsNumber" -> Association["Value" -> Automatic], 
             "DistributionSmoothing" -> Association["Value" -> 0.5], 
             "NearestMethod" -> Association["Value" -> Automatic]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0856221374570953`, 0.03786849236587054], "Accuracy" -> 
              Around[0.35768207477062475`, 0.06084237750627133], 
              "EvaluationTime" -> 0.000027100120215031646`, "TestSize" -> 122,
               "ModelMemory" -> 17304, "ModelUtility" -> -0.7822667046043889, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.007943282347242814, 
              "TrainingMemory" -> 68224, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0856221374570953`, 0.026777067745218062`]}, 
              "AccuracyHistory" -> {
                Around[0.35768207477062475`, 0.043022057718196324`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0596115829936994`, 0.06122631280938329], "Accuracy" -> 
              Around[0.4408005735886313, 0.13467140246648074`], 
              "EvaluationTime" -> 0.000037037037037037037`, "TestSize" -> 27, 
              "ModelMemory" -> 42744, "ModelUtility" -> -0.7625597858909681, 
              "TrainingSize" -> 110, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 438904, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0596115829936994`, 0.0432935409745637]}, 
              "AccuracyHistory" -> {
                Around[0.4408005735886313, 0.09522706191595126]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000037037037037037037`, "MeanCrossEntropy" -> 
             Around[1.0596115829936994`, 0.06122631280938329], "ModelMemory" -> 
             42744, "TrainingMemory" -> 438904, "TrainingTime" -> 
             0.02362262611231562], "Index" -> 3], 
         Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.1177036461762946`, 0.03799495031562989], "Accuracy" -> 
              Around[0.37534938847134613`, 0.03984671598964482], 
              "EvaluationTime" -> 0.000026673669891500368`, "TestSize" -> 244,
               "ModelMemory" -> 20797.333333333332`, 
              "ModelUtility" -> -0.8112141610036286, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.006854143078948891, "TrainingMemory" -> 
              77872., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                Around[1.1492898532562392`, 0.02937363815321428], 
                Around[1.08611743909635, 0.030379665523616508`]}, 
              "AccuracyHistory" -> {
                Around[0.3500437921538463, 0.04283657500229336], 
                Around[0.4006549847888459, 0.04425615755465977]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0607894573706145`, 0.056467241345510115`], "Accuracy" -> 
              Around[0.4408005735886313, 0.13467140246648074`], 
              "EvaluationTime" -> 0.000046626867103487635`, "TestSize" -> 27, 
              "ModelMemory" -> 48744, "ModelUtility" -> -0.7627720753356476, 
              "TrainingSize" -> 110, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              101304, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.0607894573706145`, 0.03992836927030759]}, 
              "AccuracyHistory" -> {
                Around[0.4408005735886313, 0.09522706191595126]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000046626867103487635`, "MeanCrossEntropy" -> 
             Around[1.0607894573706145`, 0.056467241345510115`], 
             "ModelMemory" -> 48744, "TrainingMemory" -> 101304, 
             "TrainingTime" -> 0.019308688533494343`], "Index" -> 4], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0968882438802035`, 0.008558145266237417], "Accuracy" -> 
              Around[0.3500437921538463, 0.06058006533385557], 
              "EvaluationTime" -> 0.00001950181497692946, "TestSize" -> 122, 
              "ModelMemory" -> 19576, "ModelUtility" -> -0.7871983862617932, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 76512, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0968882438802035`, 0.006051522552136028]}, 
              "AccuracyHistory" -> {
                Around[0.3500437921538463, 0.04283657500229336]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0831672350421224`, 0.031914212155672285`], "Accuracy" -> 
              Around[0.4408005735886313, 0.13467140246648074`], 
              "EvaluationTime" -> 0.000029419564249047453`, "TestSize" -> 27, 
              "ModelMemory" -> 38008, "ModelUtility" -> -0.7789309995163701, 
              "TrainingSize" -> 110, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 110720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.0831672350421224`, 0.022566755831502014`]}, 
              "AccuracyHistory" -> {
                Around[0.4408005735886313, 0.09522706191595126]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000029419564249047453`, "MeanCrossEntropy" -> 
             Around[1.0831672350421224`, 0.031914212155672285`], 
             "ModelMemory" -> 38008, "TrainingMemory" -> 110720, 
             "TrainingTime" -> 0.03558805623071773], "Index" -> 5], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.0976535090689574`, 0.008130167932434623], "Accuracy" -> 
              Around[0.3500437921538463, 0.06058006533385557], 
              "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122, 
              "ModelMemory" -> 19576, "ModelUtility" -> -0.7878168578655561, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              73440, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.0976535090689574`, 0.005748896877209934]}, 
              "AccuracyHistory" -> {
                Around[0.3500437921538463, 0.04283657500229336]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00001336850282360814, "MeanCrossEntropy" -> 
             Around[1.0976535090689574`, 0.008130167932434623], "ModelMemory" -> 
             19576, "TrainingMemory" -> 73440, "TrainingTime" -> 0.0237], 
           "Index" -> 6], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.295296040218015, 0.07466361217313978], "Accuracy" -> 
              Around[0.35768207477062475`, 0.06084237750627133], 
              "EvaluationTime" -> 0.00001851578206388661, "TestSize" -> 122, 
              "ModelMemory" -> 19576, "ModelUtility" -> -0.9633636089581212, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 82136, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.295296040218015, 0.0527951464755096]}, 
              "AccuracyHistory" -> {
                Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00001851578206388661, "MeanCrossEntropy" -> 
             Around[1.295296040218015, 0.07466361217313978], "ModelMemory" -> 
             19576, "TrainingMemory" -> 82136, "TrainingTime" -> 
             0.05953170842677703], "Index" -> 7], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.290089012623834, 0.07384836644867501], "Accuracy" -> 
              Around[0.35768207477062475`, 0.06084237750627133], 
              "EvaluationTime" -> 0.00001336850282360814, "TestSize" -> 122, 
              "ModelMemory" -> 19576, "ModelUtility" -> -0.9592566021193206, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 82440, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.290089012623834, 0.052218680695407214`]}, 
              "AccuracyHistory" -> {
                Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00001336850282360814, "MeanCrossEntropy" -> 
             Around[1.290089012623834, 0.07384836644867501], "ModelMemory" -> 
             19576, "TrainingMemory" -> 82440, "TrainingTime" -> 
             0.05953170842677703], "Index" -> 8], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.1039938232077493`, 0.019599916896104085`], "Accuracy" -> 
              Around[0.3500437921538463, 0.06058006533385557], 
              "EvaluationTime" -> 0.000014707608481346569`, "TestSize" -> 122,
               "ModelMemory" -> 19576, "ModelUtility" -> -0.7956406486135914, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 79032, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1039938232077493`, 0.013859234147927986`]}, 
              "AccuracyHistory" -> {
                Around[0.3500437921538463, 0.04283657500229336]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000014707608481346569`, "MeanCrossEntropy" -> 
             Around[1.1039938232077493`, 0.019599916896104085`], 
             "ModelMemory" -> 19576, "TrainingMemory" -> 79032, 
             "TrainingTime" -> 0.03756196866132839], "Index" -> 9], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.1693208449659471`, 0.0485671430402716], "Accuracy" -> 
              Around[0.35768207477062475`, 0.06084237750627133], 
              "EvaluationTime" -> 0.000016829947922282356`, "TestSize" -> 122,
               "ModelMemory" -> 19576, "ModelUtility" -> -0.8578575484958304, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 82432, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1693208449659471`, 0.03434215618663308]}, 
              "AccuracyHistory" -> {
                Around[0.35768207477062475`, 0.043022057718196324`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000016829947922282356`, "MeanCrossEntropy" -> 
             Around[1.1693208449659471`, 0.0485671430402716], "ModelMemory" -> 
             19576, "TrainingMemory" -> 82432, "TrainingTime" -> 
             0.05953170842677703], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
             "NearestNeighbors", "RandomForest"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
            TypeSystem`AnyLength]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association["ID" -> 124365246574461]], "MaxTrainingSize" -> 137, 
      "PreprocessorEvaluationTime" -> 4.6438736111211`3.*^-6, 
      "PreprocessorMemory" -> 43368, "InputDimension" -> 1, "OutputDimension" -> 
      1, "BaselineLogProbability" -> -1.0717287302022056`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.7710746845415573`17.329040122669554*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 15, "TimeBudgets" -> 0.27999999999999997`, 
          "ElapsedTimes" -> 0.2760009, "ExperimentCounts" -> 11], 
         Association[
         "TrainingSizes" -> 110, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.4880342, "ExperimentCounts" -> 4]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[124373836509053]], "ID" -> 
         124378131476349]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Nominal", "Weight" -> 1, 
           "Values" -> {
            "For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \(4\)]\)) \
and the point x=1, find the secants at point Q and the tangenet line"}, "ID" -> 
           4654099653526711133]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 1.5287640332407193`, 
      "MaxTrainingMemory" -> 1565168, "DataMemory" -> 14552, "FunctionMemory" -> 
      230504, "LanguageVersion" -> {12., 0}, "Date" -> 
      DateObject[{2019, 7, 2, 16, 44, 45.0055935`9.405841359645812}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7710865150424547`*^9, 3.771086519423419*^9}, 
   3.771086606675706*^9, 3.77108667836231*^9, 3.7710867765327716`*^9, 
   3.77108902094326*^9, 3.7710890938083034`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"6c4b24f2-38c2-4cec-9e73-b2b9ea0fd8a3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7710890570251465`*^9, 
  3.7710890581492777`*^9}},ExpressionUUID->"a8b5a9d1-d0b0-4370-a554-\
8165477562c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"calctsetlist", "=", 
   RowBox[{"questionClassifier", "[", 
    RowBox[{"calcQs", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<calc\>\""}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7710866119201727`*^9, 3.771086666291473*^9}, {
  3.771086872370139*^9, 3.771087104959329*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"cec71298-5dc4-4dfd-b760-ced07c88411a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9985341600991385`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9985341600991385`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`", ",", 
   "0.9970747387051844`", ",", "0.9970747387051844`"}], "}"}]], "Output",
 CellChangeTimes->{3.7710871055938883`*^9, 3.771089028250362*^9, 
  3.7710891306217566`*^9, 3.77108933715136*^9, 3.771089598483617*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"58b10f6c-5ade-447b-973b-887ca7dd2d93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra1calctsetlist", "=", 
  RowBox[{"questionClassifier", "[", 
   RowBox[{"calcQs", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 1\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771087108687149*^9, 3.771087149551498*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"02349991-aa2f-441f-8a1b-b0b60134879c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0007293236798201931`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0007293236798201931`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`", ",", 
   "0.0014554538532595997`", ",", "0.0014554538532595997`"}], "}"}]], "Output",
 CellChangeTimes->{{3.771087144160257*^9, 3.771087150185966*^9}, 
   3.77108902684228*^9, 3.7710891327471275`*^9, 3.7710893410796404`*^9, 
   3.7710896007317743`*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"0c4ea780-e78c-4a13-9c40-e76fd93f88a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2calctsetlist", "=", 
  RowBox[{"questionClassifier", "[", 
   RowBox[{"calcQs", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 2\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710874312987213`*^9, 3.7710874339295807`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"672f949b-2b06-46fa-a108-1b768515055e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0007365162210413`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0007365162210413`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`", ",", 
   "0.0014698074415560461`", ",", "0.0014698074415560461`"}], "}"}]], "Output",
 CellChangeTimes->{3.771087434727148*^9, 3.771089029938055*^9, 
  3.7710891358873444`*^9, 3.771089343647815*^9, 3.771089604916066*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"6cb633f1-0775-464a-be46-741690780d06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lp", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"#clac", "/", "#alge"}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Training Set\>\"", ",", " ", 
         "\"\<Calculus Probability divided by highest other\>\""}], "}"}]}]}],
      "]"}], "&"}], "@", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<clac\>\"", "\[Rule]", "calctsetlist"}], ",", " ", 
     RowBox[{"\"\<alge\>\"", "\[Rule]", "algebra1calctsetlist"}], ",", " ", 
     RowBox[{"\"\<alge2\>\"", "\[Rule]", " ", "algebra2calctsetlist"}]}], 
    "|>"}], " "}]}]], "Input",
 CellChangeTimes->{{3.771087159242466*^9, 3.7710872661367846`*^9}, {
  3.771087346037738*^9, 3.771087377729265*^9}, {3.771087438251486*^9, 
  3.7710874727166023`*^9}, {3.7710876018865566`*^9, 3.7710876147470756`*^9}, {
  3.771089624798208*^9, 3.7710896955710807`*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"8f59734d-b1b0-4eda-a756-9cd6f7ab1729"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdzMsKAWEYh/F/SllaSLOwQJI0ydk4zudshpWNvSgL5QrIxsIFuBz35BKQ
Sc3z1dvb733qy2xP631EkvOZ7/69l5v07tHz4WaCgwk7BsfhBGzBKTgNZ+Ec
nIcLcBG24RJchitwFa7BdbgBN43/3Bwvu0fgFroDt+EO3IV7+L+PPoBd2IR9
hTVEhzVChzVGhzVBhzVFhzVDhzVHh7VAh+Whw/LRYS3RYa3+fgNz9rWR
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Training Set\"", TraditionalForm], 
    FormBox[
    "\"Calculus Probability divided by highest other\"", TraditionalForm]},
  AxesOrigin->{0., 647.0575782461901},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 56.}, {647.0575782461901, 1369.1234601697238`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7710896667074084`*^9, 3.7710896964870887`*^9}},
 CellLabel->
  "Out[314]=",ExpressionUUID->"339e0f54-b54b-43c3-ab19-ebe3c50969d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a2tsetlist", "=", 
   RowBox[{"questionClassifier", "[", 
    RowBox[{"algebra2Qs", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 2\>\""}], "}"}]}],
     "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7710872706102676`*^9, 3.771087282507819*^9}, {
   3.7710873397090874`*^9, 3.7710873407674494`*^9}, {3.771087905350844*^9, 
   3.7710879849347663`*^9}, 3.7710880573605947`*^9, {3.771088171269188*^9, 
   3.7710881755541124`*^9}, {3.7710883283270426`*^9, 3.771088342411822*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"07a92159-96f7-4925-ac0f-0b27053190ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`", ",", "0.9971232943848548`", ",", 
   "0.9971232943848548`"}], "}"}]], "Output",
 CellChangeTimes->{3.7710893568597517`*^9, 3.7710896992472625`*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"a0b6f771-e5fb-4d0a-9125-0092e8e5d864"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ca2tsetlist", "=", 
   RowBox[{"questionClassifier", "[", 
    RowBox[{"algebra2Qs", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<calc\>\""}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7710879975331326`*^9, 3.7710880352508326`*^9}, {
   3.7710881663248577`*^9, 3.7710881666280727`*^9}, {3.7710883547381783`*^9, 
   3.7710883591522913`*^9}, 3.771089147129603*^9},
 CellLabel->
  "In[316]:=",ExpressionUUID->"f7086d6f-3931-4a7a-a132-7b5b167fbdc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`", ",", "0.0014373677693534737`", ",", 
   "0.0014373677693534737`"}], "}"}]], "Output",
 CellChangeTimes->{3.771087283040802*^9, 3.7710879856802793`*^9, 
  3.7710880357902346`*^9, 3.7710881204240603`*^9, 3.771088179892213*^9, 
  3.7710883615404434`*^9, 3.7710890382694435`*^9, 3.7710891505178394`*^9, 
  3.771089365314748*^9, 3.7710897010153885`*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"77f47c09-b712-4efc-b415-c3987e1fa98e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1a2tsetlist", "=", 
  RowBox[{"questionClassifier", "[", 
   RowBox[{"algebra2Qs", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 1\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710883642486305`*^9, 3.7710884092532787`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"c11224b4-e70b-4b8c-8629-c999ba9c8ca8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`", ",", "0.0014393378457917315`", ",", 
   "0.0014393378457917315`"}], "}"}]], "Output",
 CellChangeTimes->{3.7710884098893485`*^9, 3.7710890399255743`*^9, 
  3.7710891523779855`*^9, 3.7710893676397724`*^9, 3.7710897049356623`*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"052727de-762d-4404-869e-aaf9e8d187e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lp1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"#alge1", "/", "#calc1"}], ",", " ", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "60", ",", " ", "1"}], "}"}], "}"}]}]}], 
     "]"}], "&"}], "@", 
   RowBox[{"<|", " ", 
    RowBox[{
     RowBox[{"\"\<alge1\>\"", "\[Rule]", "a1tsetlist"}], ",", " ", 
     RowBox[{"\"\<calc1\>\"", "\[Rule]", "ca1tsetlist"}]}], "|>"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.771086697149147*^9, 3.771086761065174*^9}, {
  3.7710880628095803`*^9, 3.771088085302696*^9}, {3.7710881295960007`*^9, 
  3.7710881464338026`*^9}, {3.771088187290975*^9, 3.771088212841522*^9}, {
  3.771088274084469*^9, 3.7710882761526127`*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"ece59ca5-eafd-44ee-9a82-d44d8fcb8403"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEf7FU9J6l4XvpgDxVwKDLqsCkQfQnlczj8npRp
+/f1MyhfwOHCZ5vzn2s+QfkiDpoCBzd6L/4C5Us4nFb4dCB0y3MoX8bh8OOZ
d01+vYfyFRze6hr9VN/6GcpXcph7kAuIHkP5Kg4L1qeHyTp/hfLVHORVLjyd
+gZmvgaa/VpofB2HqnnPK+ct/wjl6zmg+s/AIWvxBMeNZq+gfEOHskyRjgc3
YOqNHLovptzbKvEWyjd2qJ+81ISxEeZeEzT3maLZb4bGN3cAWT9pyRso38Jh
ymfVy1Xw8LCEuC8IZr4VWnhZo4WnjcM3oPE2/u+gfFs099k5qPe19QtUwOTt
0fzvgOr/BgeHl6t2XFs6CeZ/RwefTCam63eh6hscHar/Hj2p8OkJVN4J1fwG
J7TwcHZYAzLO8jVU3tlhyf9XtuxLYOnJBTV8GlwcpE9obdN4Dot/V4emNUnd
Rftg9rs6eBx257AphprH4IYang1uaOnP3eHeufcXLxyBmtfg7iDtIrejqwwW
3x4O4eVRdzNLf0LlPdDC0xM1fho84ekfAMfj/kY=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0, 60, 1}, {0, 60, 1}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {0, 1.5911654135338347`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.771086724973209*^9, 3.771086749471038*^9}, 
   3.771088064064953*^9, {3.771088097665348*^9, 3.7710881479581833`*^9}, {
   3.771088198980519*^9, 3.771088213765196*^9}, 3.771088283452655*^9, 
   3.7710890416690483`*^9, 3.7710893770924315`*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"e0e9173a-898f-41b4-9261-1a4c165c5615"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lp2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"#alge2", "/", "#calc1"}], ",", " ", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "60", ",", " ", "1"}], "}"}], "}"}]}]}], 
     "]"}], "&"}], "@", 
   RowBox[{"<|", " ", 
    RowBox[{
     RowBox[{"\"\<alge2\>\"", "\[Rule]", "a2tsetlist"}], ",", " ", 
     RowBox[{"\"\<calc1\>\"", "\[Rule]", "ca2tsetlist"}], ",", " ", 
     RowBox[{"\"\<alge1\>\"", "\[Rule]", " ", "a1a2tsetlist"}]}], "|>"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.7710884410405846`*^9, 3.77108850322477*^9}, {
  3.771089398146514*^9, 3.771089517933527*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"59d42430-2f72-491e-9a7a-43a002d85117"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQEf7G9c+v5i+9pWB6iAAyqfA40vgMYXQeNLoPFl
0PgKaHwlNL4KGl8Nja+BxtdC4+ug8fXQ+AZofEM0vhEa3xiNb4LGN0Xjm6Hx
zdH4Fmh8SzS+FRrfGo1vg8a3RePbofHt4XwAyjnAGg==
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0, 60, 1}, {0, 60, 1}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 31.}, {0, 1387.4295996401252`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7710885050135603`*^9, 3.771089158715576*^9, {3.7710893832492323`*^9, 
   3.7710894015147657`*^9}, {3.771089444609096*^9, 3.7710895192339563`*^9}, 
   3.7710897090101833`*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"568c61d2-b23b-45bd-ab6a-69aae7749d22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\pset_trained.pdf\>\"", ",", " ", 
   RowBox[{"{", 
    RowBox[{"lp", ",", " ", "lp1", ",", " ", "lp2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771088511261034*^9, 3.7710885620567923`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"7e3689c8-2174-4c64-891a-e1d405b42a2e"],

Cell[BoxData["\<\"C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\pset_trained.pdf\"\>"], "Output",
 CellChangeTimes->{3.7710885632648225`*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"b1b3860f-8aea-41a1-8376-a411b3df81ca"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7710883122777357`*^9, 3.7710883204823074`*^9}, {
  3.771088420900962*^9, 
  3.771088426201332*^9}},ExpressionUUID->"d1ec6521-5d52-4665-927a-\
fa1d165f502a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "include", " ", "the", " ", "above", " ", "graphs", " ", "and", " ", "the", 
   " ", "test", " ", "functions", " ", "to", " ", "show", " ", 
   "infeasiability", " ", "of", " ", "doing", " ", "the", " ", "classifier"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.771088662797636*^9, 
  3.7710886895019336`*^9}},ExpressionUUID->"1927aef9-607f-4a49-a59a-\
07062997209f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"questionClassifier", "[", "calcQs", "]"}]], "Input",
 CellChangeTimes->{{3.7710874950764313`*^9, 3.771087504555478*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"e0826fce-1f30-4b69-97ad-70f1ed35d2bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"algebra 1\"\>", 
   ",", "\<\"algebra 1\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", ",", "\<\"calc\"\>", 
   ",", "\<\"calc\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771087504963769*^9, 3.7710892560774336`*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"6d97a385-78f0-468f-a23b-f1db200df424"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"questionClassifier", "[", 
  RowBox[{
   RowBox[{"calcQs", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
   RowBox[{"{", "\"\<Probabilities\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771087516811983*^9, 3.771087571109525*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"b07a053c-212b-405e-97f7-a08f80b051c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"algebra 1\"\>", "\[Rule]", "0.32378946941777276`"}], ",", 
    RowBox[{"\<\"algebra 2\"\>", "\[Rule]", "0.31368420174247336`"}], ",", 
    RowBox[{"\<\"calc\"\>", "\[Rule]", "0.36252632883975383`"}]}], 
   "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{{3.7710875418320837`*^9, 3.771087571684924*^9}, 
   3.771089533803198*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"73d7195b-9e6d-47ba-b34a-255d39dcb17b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"questionClassifier", "[", 
  "\"\<Derivative of f(x)=\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.771088753943815*^9, 3.771088782367765*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"e903e0f7-e7f1-4e62-a358-64e5d55a3935"],

Cell[BoxData["\<\"calc\"\>"], "Output",
 CellChangeTimes->{3.7710887830878205`*^9, 3.771089259874141*^9, 
  3.771089527991534*^9, 3.771089718920719*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"2295da71-8871-40c6-bd76-43c88645dbb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"questionClassifier", "[", "\"\<Integral of 1+x dx\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.771089720780864*^9, 3.7710897364426413`*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"b63a329d-aa82-410f-b0d9-db258d20851e"],

Cell[BoxData["\<\"calc\"\>"], "Output",
 CellChangeTimes->{3.77108973690266*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"051a4c7f-edc2-40d9-96ea-6edd05ce5076"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"questionClassifier", "[", "\"\<2+3\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7710897395468607`*^9, 3.7710897491123204`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"245660ab-2d6c-4479-b896-190a9b2a3a0b"],

Cell[BoxData["\<\"algebra 1\"\>"], "Output",
 CellChangeTimes->{3.7710897495723543`*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"e89e9681-a072-4244-ba57-42e5aa5a0de6"]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 310, 6, 28, "Input",ExpressionUUID->"d8080331-3884-41e3-a9b8-483a4eefee11"],
Cell[893, 30, 320, 6, 32, "Output",ExpressionUUID->"99ac3636-f538-4a0b-a2b3-4b4975ad4517"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250, 41, 277, 5, 28, "Input",ExpressionUUID->"379c9f38-0152-4658-9aaa-fb297370a64c"],
Cell[1530, 48, 260, 5, 32, "Output",ExpressionUUID->"d1c614f9-308e-4455-9797-bd06c02e4bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1827, 58, 328, 7, 28, "Input",ExpressionUUID->"57844fb0-228a-49b0-b92d-dc2d3e5913f9"],
Cell[2158, 67, 200, 3, 32, "Output",ExpressionUUID->"06a258e4-a32d-4ea1-829c-0814e153a265"]
}, Open  ]],
Cell[2373, 73, 1087, 22, 48, "Input",ExpressionUUID->"ca103606-2001-4c22-95d6-7f6812162636"],
Cell[CellGroupData[{
Cell[3485, 99, 387, 6, 28, "Input",ExpressionUUID->"327492a1-5562-407b-ad9f-9f3d81f65ef7"],
Cell[3875, 107, 185, 2, 32, "Output",ExpressionUUID->"3166eba5-74c7-4118-9beb-1571cf9f1e6b"]
}, Open  ]],
Cell[4075, 112, 198, 3, 28, "Input",ExpressionUUID->"c0d88217-4674-41ff-b96b-6296a8aa3712"],
Cell[CellGroupData[{
Cell[4298, 119, 322, 7, 28, "Input",ExpressionUUID->"fd86d2db-90e5-48aa-be3e-c2a178ae623f"],
Cell[4623, 128, 221, 3, 32, "Output",ExpressionUUID->"b0df8974-4a35-41c1-b7c7-9541301ae2e1"]
}, Open  ]],
Cell[4859, 134, 172, 2, 28, "Input",ExpressionUUID->"be88db5b-6c33-4813-b4ef-96e5eba24bbb"],
Cell[5034, 138, 515, 12, 28, "Input",ExpressionUUID->"290df51f-42d1-453c-8405-7019b78ac303"],
Cell[5552, 152, 172, 2, 28, "Input",ExpressionUUID->"e39348c0-d198-4de1-bacf-0f006e66bab1"],
Cell[CellGroupData[{
Cell[5749, 158, 656, 12, 105, "Input",ExpressionUUID->"d5556197-0257-4b55-ac11-67cf3d84fa35"],
Cell[6408, 172, 8766, 227, 92, "Output",ExpressionUUID->"f1d8ddb4-aae4-4dd2-ae15-3187804f8393"]
}, Open  ]],
Cell[15189, 402, 602, 12, 105, "Input",ExpressionUUID->"36d4ada3-9de4-4fe8-9564-16b385821ace"],
Cell[CellGroupData[{
Cell[15816, 418, 494, 10, 28, "Input",ExpressionUUID->"53b94c62-a924-4c28-8c9a-87e4eb51b9a0"],
Cell[16313, 430, 412, 10, 21, "Message",ExpressionUUID->"4b97ee72-d1ca-46f9-9cf0-9a7419adf611"],
Cell[16728, 442, 412, 10, 21, "Message",ExpressionUUID->"69680344-6e4f-4cf2-978c-e2d24c711e46"],
Cell[17143, 454, 415, 10, 21, "Message",ExpressionUUID->"1f53d58a-aa51-40cf-b99b-80633653da0a"],
Cell[17561, 466, 494, 11, 21, "Message",ExpressionUUID->"f91fad76-1fae-4bae-ab40-2a59823bc1b0"],
Cell[18058, 479, 207, 3, 32, "Output",ExpressionUUID->"771e8ce5-1f08-43c3-ab04-f67d2089c772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18302, 487, 1062, 17, 55, "Input",ExpressionUUID->"2333ef13-77fd-4cdf-b6bd-0173171dc2ca"],
Cell[19367, 506, 835, 14, 36, "Output",ExpressionUUID->"db1a8277-9de3-48bc-a1d2-061376a9de50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20239, 525, 971, 19, 67, "Input",ExpressionUUID->"2d263997-c8cc-4cfe-a7ea-3727e1faf43b"],
Cell[21213, 546, 865, 16, 71, "Output",ExpressionUUID->"33fcc5d8-090b-4187-b660-d35494bec8c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22115, 567, 1830, 42, 148, "Input",ExpressionUUID->"6c60326b-e42a-4217-9c4b-5a627cce92a1"],
Cell[23948, 611, 535, 10, 32, "Output",ExpressionUUID->"58d43feb-94c2-4021-9226-d133f795e416"],
Cell[24486, 623, 551, 11, 36, "Output",ExpressionUUID->"2be9504e-33db-48ac-b35f-52e824b72a2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25074, 639, 600, 11, 48, "Input",ExpressionUUID->"13a45433-da7c-48b3-b716-61b7e0f7a0b0"],
Cell[25677, 652, 573, 11, 52, "Output",ExpressionUUID->"2c91046c-d051-43fa-b322-4096603a793f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26287, 668, 510, 9, 32, "Input",ExpressionUUID->"a7ae84c8-e77e-4163-a09b-03f6288de0b4"],
Cell[26800, 679, 495, 9, 36, "Output",ExpressionUUID->"e55fbc79-3667-4ea8-b5c7-257e2764b1c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27332, 693, 459, 9, 32, "Input",ExpressionUUID->"965f7365-78f2-4e84-8c81-fb88f95c8219"],
Cell[27794, 704, 397, 8, 36, "Output",ExpressionUUID->"674f73da-4a5a-4ee2-91d5-54d2bdeaf0e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28228, 717, 333, 7, 28, "Input",ExpressionUUID->"e9cacc85-48d6-4d31-ab94-5d755d539cc0"],
Cell[28564, 726, 307, 6, 32, "Output",ExpressionUUID->"38508468-4f5f-49a0-b9b6-ccbdc537c13d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28908, 737, 514, 10, 32, "Input",ExpressionUUID->"7421c56f-d5af-4df6-8034-ece5d5384058"],
Cell[29425, 749, 452, 8, 36, "Output",ExpressionUUID->"b56c9ee5-cbbe-47e4-b57e-b00b4bd61698"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29914, 762, 1084, 18, 124, "Input",ExpressionUUID->"e86a1b17-fc00-41b9-8941-ba78eb4e043a"],
Cell[31001, 782, 938, 14, 109, "Output",ExpressionUUID->"16476eb4-4b0f-4071-a8fd-e752b372148f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31976, 801, 566, 11, 28, "Input",ExpressionUUID->"5d0e39cd-11b1-4595-aeb9-0fdbd16ece9d"],
Cell[32545, 814, 3437, 56, 231, "Output",ExpressionUUID->"317e876d-b761-45fe-b735-aeb1b42d3ac8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36019, 875, 701, 18, 28, "Input",ExpressionUUID->"55418531-eb2f-4ce3-b5de-d405d37af7b6"],
Cell[36723, 895, 641, 17, 32, "Output",ExpressionUUID->"25f96a6c-d290-44be-921d-8dca07a60bfd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37401, 917, 392, 8, 28, "Input",ExpressionUUID->"69141ec0-ae4d-4df6-aeb8-ad4d030f5348"],
Cell[37796, 927, 374, 8, 32, "Output",ExpressionUUID->"342ae51b-057d-48ea-8543-c084d9ac15fd"]
}, Open  ]],
Cell[38185, 938, 274, 4, 28, "Input",ExpressionUUID->"f201e9fa-a6dd-4b18-b67d-f11e9d21e13f"],
Cell[CellGroupData[{
Cell[38484, 946, 194, 2, 28, "Input",ExpressionUUID->"ded583d0-6e0f-4eec-868b-b2134852c12e"],
Cell[38681, 950, 2053, 31, 108, "Message",ExpressionUUID->"410ca968-fe6b-423f-a026-13ed4cb14f28"],
Cell[40737, 983, 3528, 58, 231, "Output",ExpressionUUID->"0e03e21e-c7ab-401d-89a0-661cf5008a5f"]
}, Open  ]],
Cell[44280, 1044, 173, 2, 28, "Input",ExpressionUUID->"1760b367-3e57-4f97-81ef-1f5ac4d411d5"],
Cell[CellGroupData[{
Cell[44478, 1050, 257, 4, 28, "Input",ExpressionUUID->"2a472862-58b0-4b0f-803a-4e77b423fc29"],
Cell[44738, 1056, 11106, 263, 150, "Output",ExpressionUUID->"51765e9b-b321-481d-aa1a-07c527a922e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55881, 1324, 361, 8, 28, "Input",ExpressionUUID->"3eb571b7-d401-4b9c-b389-6b9984e7cec4"],
Cell[56245, 1334, 11224, 266, 150, "Output",ExpressionUUID->"15cae407-c72a-4967-a61a-d49a7bb7434f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67506, 1605, 340, 5, 28, "Input",ExpressionUUID->"d0dbf12a-c39a-4ca3-a5e6-bad8d5325af4"],
Cell[67849, 1612, 13294, 415, 280, "Output",ExpressionUUID->"cfaf858c-339e-4a9a-bbed-61aca9559bc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81180, 2032, 225, 3, 28, "Input",ExpressionUUID->"18ea2485-4bf9-4e7f-b32b-cee37ff6fa97"],
Cell[81408, 2037, 224, 4, 32, "Output",ExpressionUUID->"8ecbbbca-544d-4cd7-99e9-2a3e81729399"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81669, 2046, 617, 15, 28, "Input",ExpressionUUID->"9727eebb-e54d-4181-ac82-9062755a35c4"],
Cell[82289, 2063, 2854, 44, 41, "Message",ExpressionUUID->"7c7c67f6-4a36-42a6-8aeb-7682efc300db"],
Cell[85146, 2109, 2854, 44, 41, "Message",ExpressionUUID->"9c1c6fc8-d58f-4d12-9778-62128492147a"],
Cell[88003, 2155, 8765, 227, 92, "Output",ExpressionUUID->"24db8482-d54c-49e2-89af-8b447019b70d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96805, 2387, 180, 2, 28, "Input",ExpressionUUID->"ccc1bba4-6162-4c1a-9594-9a244047aa85"],
Cell[96988, 2391, 8731, 227, 92, "Output",ExpressionUUID->"c67d886d-2483-49eb-9fe8-ede49641bd05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105756, 2623, 322, 6, 28, "Input",ExpressionUUID->"a315aa41-887f-4376-b5a7-9f6614771663"],
Cell[106081, 2631, 2858, 44, 93, "Message",ExpressionUUID->"9df41896-50ba-4059-b7b7-d3abd3b2a3cd"],
Cell[108942, 2677, 11316, 267, 226, "Output",ExpressionUUID->"fa696d60-f362-49d1-90eb-dbaa2f27e817"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120295, 2949, 2839, 47, 417, "Input",ExpressionUUID->"82a03de3-0e12-4c59-bb42-528749c4d97e"],
Cell[123137, 2998, 2510, 43, 402, "Output",ExpressionUUID->"63273941-8aa2-4dca-9759-cec561ed68c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125684, 3046, 2548, 44, 381, "Input",ExpressionUUID->"a376c96d-0f17-43df-a243-6359725f0331"],
Cell[128235, 3092, 2157, 35, 289, "Output",ExpressionUUID->"ca489a86-d409-42d3-8179-180391086847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130429, 3132, 3027, 52, 400, "Input",ExpressionUUID->"222a3863-676a-4a91-8ed5-bf086815e19f"],
Cell[133459, 3186, 2530, 42, 384, "Output",ExpressionUUID->"84159903-7ae2-4247-850b-ac7f383494c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136026, 3233, 1890, 32, 204, "Input",ExpressionUUID->"82bd9a2c-9f48-402b-90c8-7cb9d90eee9e"],
Cell[137919, 3267, 1608, 27, 166, "Output",ExpressionUUID->"36a1e071-2c1a-46b2-ae97-45c50dbdd44f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139564, 3299, 403, 10, 28, "Input",ExpressionUUID->"9c835307-f52b-4c42-8b0e-c58da6c73503"],
Cell[139970, 3311, 5931, 97, 779, "Output",ExpressionUUID->"0eb4dbc2-40c3-4fe9-8a56-9c219c46ebfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145938, 3413, 955, 17, 86, "Input",ExpressionUUID->"4a6c27e2-f698-4942-9e0f-b4b815b04b6b"],
Cell[146896, 3432, 38152, 694, 104, "Output",ExpressionUUID->"7fd6d8ab-4369-4901-8ed0-1dc64cdb3611"]
}, Open  ]],
Cell[185063, 4129, 396, 9, 28, "Input",ExpressionUUID->"c7c8062e-a44d-44d6-9860-e4bb30b9612d"],
Cell[185462, 4140, 497, 11, 28, "Input",ExpressionUUID->"ffe598d9-2e62-453f-bf80-2e355ce20f82"],
Cell[CellGroupData[{
Cell[185984, 4155, 362, 9, 28, "Input",ExpressionUUID->"d6e8e70f-1930-4c2a-950c-7644ca9f37a6"],
Cell[186349, 4166, 437, 10, 32, "Output",ExpressionUUID->"eaad2f17-29e1-459c-aa9a-672fdb831a51"]
}, Open  ]],
Cell[186801, 4179, 457, 10, 28, "Input",ExpressionUUID->"7be7aa86-af93-47b9-b972-8d4991397820"],
Cell[187261, 4191, 890, 25, 48, "Input",ExpressionUUID->"f1b8e95c-f7a7-4e5f-9042-b8c41a06cf16"],
Cell[188154, 4218, 372, 8, 28, "Input",ExpressionUUID->"cf5243df-9a66-4949-b392-be01d5b85888"],
Cell[188529, 4228, 343, 8, 28, "Input",ExpressionUUID->"d978e4ff-0fbd-47c0-96b0-bdd7f16386c4"],
Cell[188875, 4238, 461, 12, 28, "Input",ExpressionUUID->"935017ba-4976-4faf-b131-247609eb5a57"],
Cell[189339, 4252, 1075, 32, 67, "Input",ExpressionUUID->"e1deccb3-d248-4637-b277-3c9d353f90c5"],
Cell[190417, 4286, 311, 6, 28, "Input",ExpressionUUID->"ecc6eb26-7077-496d-aa11-d4049496a36a"],
Cell[CellGroupData[{
Cell[190753, 4296, 10787, 182, 1416, "Input",ExpressionUUID->"8d9e2242-8d9a-48f7-acf8-2b1c5994aa2f"],
Cell[201543, 4480, 3509, 51, 261, "Output",ExpressionUUID->"a31d0526-3fab-4227-8ea2-e3a3d63cbb3a"],
Cell[205055, 4533, 3509, 51, 261, "Output",ExpressionUUID->"d5f82828-1bb8-440f-ade2-5ca309298811"],
Cell[208567, 4586, 171, 3, 32, "Output",ExpressionUUID->"9d053158-a81e-45e7-b75b-2d8081102251"],
Cell[208741, 4591, 169, 3, 32, "Output",ExpressionUUID->"18e5cbca-eb72-4f81-ab7b-2b45dbdc2e9d"],
Cell[208913, 4596, 169, 3, 32, "Output",ExpressionUUID->"13cf98d7-07f4-4ce6-a3f4-02e7c8f43e94"],
Cell[209085, 4601, 171, 3, 32, "Output",ExpressionUUID->"e6588a40-412d-4e89-bd12-1e7cbe3f79ac"],
Cell[209259, 4606, 171, 3, 32, "Output",ExpressionUUID->"a47f18cc-e468-4e02-a3d6-e4e4aa6f686a"],
Cell[209433, 4611, 169, 3, 32, "Output",ExpressionUUID->"87cc3d60-1445-4dd1-9543-19f8f63e6ede"],
Cell[209605, 4616, 171, 3, 32, "Output",ExpressionUUID->"33e65e1a-0a52-4511-8308-2fbc13cbd8e8"],
Cell[209779, 4621, 171, 3, 32, "Output",ExpressionUUID->"84228bad-c3a0-4c37-8acf-ff5911906412"],
Cell[209953, 4626, 1485, 23, 109, "Output",ExpressionUUID->"bee3d38a-63be-4892-a32b-90364fa4b363"],
Cell[211441, 4651, 1487, 23, 109, "Output",ExpressionUUID->"37c393a2-0f2b-4012-84c0-4e298f2d8e23"],
Cell[212931, 4676, 1447, 23, 109, "Output",ExpressionUUID->"69353170-8eab-49fb-9685-13593440d0fa"],
Cell[214381, 4701, 1606, 30, 147, "Output",ExpressionUUID->"327a1bf9-122e-45c6-a364-b3de74e021c5"],
Cell[215990, 4733, 169, 3, 32, "Output",ExpressionUUID->"1f8662fe-9e51-4619-9bda-3744ce0f55ed"],
Cell[216162, 4738, 169, 3, 32, "Output",ExpressionUUID->"62258152-0a44-4dd0-9122-a6b38ab338fa"],
Cell[216334, 4743, 168, 3, 32, "Output",ExpressionUUID->"e54f0032-4fd6-44a4-8db4-d5c6f11a6c99"],
Cell[216505, 4748, 169, 3, 32, "Output",ExpressionUUID->"32003aba-8777-4dbc-8b2c-601c95588d44"],
Cell[216677, 4753, 171, 3, 32, "Output",ExpressionUUID->"649a501c-227c-405c-8aa2-5ffb0a33a724"],
Cell[216851, 4758, 171, 3, 32, "Output",ExpressionUUID->"11a57aff-3dad-4c98-9699-0d8fadd9e6c0"],
Cell[217025, 4763, 934, 15, 71, "Output",ExpressionUUID->"f1e9e882-f152-4720-9763-583bd201deb1"],
Cell[217962, 4780, 934, 15, 71, "Output",ExpressionUUID->"17b3238e-96ed-4237-b850-a85bf981e79f"],
Cell[218899, 4797, 1445, 23, 109, "Output",ExpressionUUID->"d288c110-8b9c-4058-85d5-e6efc68e6c58"],
Cell[220347, 4822, 1445, 23, 109, "Output",ExpressionUUID->"d7166bb4-45c4-49a3-8bf8-18acab3d06d7"],
Cell[221795, 4847, 164, 3, 32, "Output",ExpressionUUID->"14e095c0-f0c3-4bb0-b686-219fab5be7b6"],
Cell[221962, 4852, 166, 3, 32, "Output",ExpressionUUID->"31f5f5f8-6601-4a88-aa7a-7aea8c8e73ac"],
Cell[222131, 4857, 169, 3, 32, "Output",ExpressionUUID->"b23ff88e-bd10-487c-9369-002f2a9a2119"],
Cell[222303, 4862, 171, 3, 32, "Output",ExpressionUUID->"5a244283-fa1a-4b46-bf92-93f46e187185"],
Cell[222477, 4867, 78191, 1368, 71, "Output",ExpressionUUID->"cfd00889-1aac-45e0-882b-25282befe7b4"],
Cell[300671, 6237, 93137, 1330, 84, "Message",ExpressionUUID->"f292ed84-5f1a-4523-8b56-e4765be64c1e"],
Cell[393811, 7569, 93064, 1328, 84, "Message",ExpressionUUID->"1d8f8f8b-c4e6-46ce-8c8a-26728a5e6575"]
}, {32}]],
Cell[CellGroupData[{
Cell[486910, 8902, 497, 11, 48, InheritFromParent,ExpressionUUID->"0e5167e4-a541-4d73-b849-a55c13d9c21b"],
Cell[487410, 8915, 164, 3, 32, "Output",ExpressionUUID->"dac32faf-ccdb-44a9-a09c-d244ee808903"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487611, 8923, 285, 6, 28, "Input",ExpressionUUID->"7a7b582e-f1b0-45c7-9a14-0ec0c8432fc4"],
Cell[487899, 8931, 93004, 1326, 84, "Message",ExpressionUUID->"d13a2951-534a-4b20-b39f-63e88537474b"],
Cell[580906, 10259, 78194, 1368, 71, "Output",ExpressionUUID->"70d85379-64bb-40c4-b3cc-05176b7623fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659137, 11632, 515, 9, 28, "Input",ExpressionUUID->"15249994-5cb2-485d-b8e8-5a88f54402e2"],
Cell[659655, 11643, 75574, 1323, 103, "Output",ExpressionUUID->"6c4b24f2-38c2-4cec-9e73-b2b9ea0fd8a3"]
}, Open  ]],
Cell[735244, 12969, 156, 3, 28, "Input",ExpressionUUID->"a8b5a9d1-d0b0-4370-a554-8165477562c4"],
Cell[CellGroupData[{
Cell[735425, 12976, 469, 11, 48, "Input",ExpressionUUID->"cec71298-5dc4-4dfd-b760-ced07c88411a"],
Cell[735897, 12989, 1951, 34, 147, "Output",ExpressionUUID->"58b10f6c-5ade-447b-973b-887ca7dd2d93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[737885, 13028, 390, 9, 28, "Input",ExpressionUUID->"02349991-aa2f-441f-8a1b-b0b60134879c"],
Cell[738278, 13039, 2150, 35, 166, "Output",ExpressionUUID->"0c4ea780-e78c-4a13-9c40-e76fd93f88a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740465, 13079, 394, 9, 28, "Input",ExpressionUUID->"672f949b-2b06-46fa-a108-1b768515055e"],
Cell[740862, 13090, 2112, 34, 166, "Output",ExpressionUUID->"6cb633f1-0775-464a-be46-741690780d06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743011, 13129, 1011, 24, 86, "Input",ExpressionUUID->"8f59734d-b1b0-4eda-a756-9cd6f7ab1729"],
Cell[744025, 13155, 1942, 48, 165, "Output",ExpressionUUID->"339e0f54-b54b-43c3-ab19-ebe3c50969d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746004, 13208, 657, 13, 48, "Input",ExpressionUUID->"07a92159-96f7-4925-ac0f-0b27053190ef"],
Cell[746664, 13223, 1135, 21, 90, "Output",ExpressionUUID->"a0b6f771-e5fb-4d0a-9125-0092e8e5d864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747836, 13249, 555, 12, 48, "Input",ExpressionUUID->"f7086d6f-3931-4a7a-a132-7b5b167fbdc6"],
Cell[748394, 13263, 1423, 24, 109, "Output",ExpressionUUID->"77f47c09-b712-4efc-b415-c3987e1fa98e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749854, 13292, 390, 9, 28, "Input",ExpressionUUID->"c11224b4-e70b-4b8c-8629-c999ba9c8ca8"],
Cell[750247, 13303, 1303, 22, 109, "Output",ExpressionUUID->"052727de-762d-4404-869e-aaf9e8d187e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751587, 13330, 880, 22, 48, "Input",ExpressionUUID->"ece59ca5-eafd-44ee-9a82-d44d8fcb8403"],
Cell[752470, 13354, 2338, 54, 245, "Output",ExpressionUUID->"e0e9173a-898f-41b4-9261-1a4c165c5615"]
}, Open  ]],
Cell[CellGroupData[{
Cell[754845, 13413, 804, 21, 48, "Input",ExpressionUUID->"59d42430-2f72-491e-9a7a-43a002d85117"],
Cell[755652, 13436, 1850, 47, 239, "Output",ExpressionUUID->"568c61d2-b23b-45bd-ab6a-69aae7749d22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[757539, 13488, 460, 10, 67, "Input",ExpressionUUID->"7e3689c8-2174-4c64-891a-e1d405b42a2e"],
Cell[758002, 13500, 300, 5, 52, "Output",ExpressionUUID->"b1b3860f-8aea-41a1-8376-a411b3df81ca"]
}, Open  ]],
Cell[758317, 13508, 205, 4, 28, "Input",ExpressionUUID->"d1ec6521-5d52-4665-927a-fa1d165f502a"],
Cell[758525, 13514, 411, 9, 48, "Input",ExpressionUUID->"1927aef9-607f-4a49-a59a-07062997209f"],
Cell[CellGroupData[{
Cell[758961, 13527, 227, 4, 28, "Input",ExpressionUUID->"e0826fce-1f30-4b69-97ad-70f1ed35d2bf"],
Cell[759191, 13533, 1454, 23, 90, "Output",ExpressionUUID->"6d97a385-78f0-468f-a23b-f1db200df424"]
}, Open  ]],
Cell[CellGroupData[{
Cell[760682, 13561, 351, 8, 28, "Input",ExpressionUUID->"b07a053c-212b-405e-97f7-a08f80b051c0"],
Cell[761036, 13571, 516, 11, 32, "Output",ExpressionUUID->"73d7195b-9e6d-47ba-b34a-255d39dcb17b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761589, 13587, 288, 6, 32, "Input",ExpressionUUID->"e903e0f7-e7f1-4e62-a358-64e5d55a3935"],
Cell[761880, 13595, 235, 4, 32, "Output",ExpressionUUID->"2295da71-8871-40c6-bd76-43c88645dbb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762152, 13604, 250, 5, 28, "Input",ExpressionUUID->"b63a329d-aa82-410f-b0d9-db258d20851e"],
Cell[762405, 13611, 163, 3, 32, "Output",ExpressionUUID->"051a4c7f-edc2-40d9-96ea-6edd05ce5076"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762605, 13619, 234, 4, 28, "Input",ExpressionUUID->"245660ab-2d6c-4479-b896-190a9b2a3a0b"],
Cell[762842, 13625, 171, 3, 65, "Output",ExpressionUUID->"e89e9681-a072-4244-ba57-42e5aa5a0de6"]
}, Open  ]]
}
]
*)

