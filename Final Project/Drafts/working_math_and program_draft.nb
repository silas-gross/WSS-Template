(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    152532,       3421]
NotebookOptionsPosition[    144698,       3283]
NotebookOutlinePosition[    145039,       3298]
CellTagsIndexPosition[    144996,       3295]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Pattern", "[", 
  RowBox[{"addition", ",", " ", 
   RowBox[{"{", 
    RowBox[{"_", ",", "\"\<+\>\"", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7709911793368444`*^9, 3.7709912668424406`*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"d8080331-3884-41e3-a9b8-483a4eefee11"],

Cell[BoxData[
 FormBox[
  RowBox[{"addition", ":", 
   RowBox[{"{", 
    RowBox[{"_", ",", "\<\"+\"\>", ",", "_"}], "}"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.770991252444203*^9, 3.7709912674835777`*^9}},
 CellLabel->
  "Out[467]=",ExpressionUUID->"21329dcc-e6da-470c-84a8-6a36016e3d22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"additionRules", "=", 
  RowBox[{"{", 
   RowBox[{"__", ",", " ", "\"\<+\>\"", ",", "__"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.770992790473785*^9, 3.770992825719166*^9}},
 CellLabel->
  "In[542]:=",ExpressionUUID->"379c9f38-0152-4658-9aaa-fb297370a64c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"__", ",", "\<\"+\"\>", ",", "__"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.770992826671591*^9},
 CellLabel->
  "Out[542]=",ExpressionUUID->"7beb424a-8043-4f13-bab3-10cdaa9a1a0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "\"\<+\>\"", ",", " ", "2"}], "}"}], ",", " ", 
   "additionRules"}], "]"}]], "Input",
 CellChangeTimes->{{3.7709928308898954`*^9, 3.7709928767796574`*^9}},
 CellLabel->
  "In[543]:=",ExpressionUUID->"57844fb0-228a-49b0-b92d-dc2d3e5913f9"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.770992878227332*^9},
 CellLabel->
  "Out[543]=",ExpressionUUID->"2088e1a6-4f92-4e88-bdc3-962f2aeef324"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"commutativeGraph", "=", 
  RowBox[{
   RowBox[{"[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"RelationGraph", "[", 
      RowBox[{"commutativeAddition", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "x"}], "}"}]}], "]"}]}], "]"}], "[", 
   RowBox[{"Range", "[", "100", "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Want", " ", "to", " ", "be", " ", "able", " ", "to", " ", "define", " ", 
    "this", " ", "functionally"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.770992911428092*^9, 3.7709929368562984`*^9}, {
   3.770993022136916*^9, 3.7709931072953763`*^9}, {3.770993199099123*^9, 
   3.770993221490551*^9}, 3.7709932810526342`*^9, {3.770993329082049*^9, 
   3.7709933603328967`*^9}, {3.77099346402757*^9, 3.7709935632084007`*^9}, {
   3.770993762999999*^9, 3.7709937807946587`*^9}, {3.7709938147903724`*^9, 
   3.770993821237516*^9}, {3.770993858783887*^9, 3.770993947894869*^9}, {
   3.7709940389405856`*^9, 3.7709941562013664`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[580]:=",ExpressionUUID->"ca103606-2001-4c22-95d6-7f6812162636"],

Cell[BoxData[
 RowBox[{"commutativeGraph", " "}]], "Input",
 CellChangeTimes->{{3.7709931149551783`*^9, 3.7709931804253874`*^9}, {
   3.7709932975154576`*^9, 3.7709933111748667`*^9}, {3.770993789892692*^9, 
   3.7709937942546215`*^9}, {3.770993828768509*^9, 3.7709938403052235`*^9}, 
   3.770993891951488*^9},
 CellLabel->
  "In[580]:=",ExpressionUUID->"327492a1-5562-407b-ad9f-9f3d81f65ef7"],

Cell[BoxData[
 FormBox["", TraditionalForm]], "Input",
 CellChangeTimes->{{3.770994177470024*^9, 
  3.770994177493599*^9}},ExpressionUUID->"c0d88217-4674-41ff-b96b-\
6296a8aa3712"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"1", "+", "2"}], ",", 
   RowBox[{"2", "+", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77099314253762*^9, 3.770993153813862*^9}, {
  3.770993243405223*^9, 3.770993245426115*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"fd86d2db-90e5-48aa-be3e-c2a178ae623f"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.770993154294287*^9, 3.7709932461360345`*^9},
 CellLabel->
  "Out[552]=",ExpressionUUID->"cd28df79-b33e-4b1f-b2b7-73206d0cc681"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.770993249806549*^9, 
  3.7709932758694115`*^9}},ExpressionUUID->"be88db5b-6c33-4813-b4ef-\
96e5eba24bbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"commutativeAddition", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "+", "y"}], "\[Equal]", 
     RowBox[{"y", "+", "x"}]}], ",", " ", "True", ",", " ", "False"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.770991275618235*^9, 3.770991276866707*^9}, {
   3.770993618465212*^9, 3.7709937519224043`*^9}, 
   3.7709941870885496`*^9},ExpressionUUID->"290df51f-42d1-453c-8405-\
7019b78ac303"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7709927851204185`*^9, 
  3.770992785752986*^9}},ExpressionUUID->"e39348c0-d198-4de1-bacf-\
0f006e66bab1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSet", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\CK-12-Algebra-II-with-Trigonometry-Concepts_b_v78_eiy_s1.\
pdf\>\"", ",", " ", "\"\<Plaintext\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77099375583887*^9, 3.77099375736931*^9}, {
   3.7709987964463296`*^9, 3.7709988599210796`*^9}, 3.770998903194763*^9, {
   3.7710010287054644`*^9, 3.7710010331796556`*^9}, {3.771001138904239*^9, 
   3.771001178099668*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d5556197-0257-4b55-ac11-67cf3d84fa35"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{"1462420"},
          "OutputSizeLimit`Skeleton"],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 15900165660389849415, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 15900165660389849415, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 15900165660389849415, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900165660389849415 === $SessionID, 
   Out[4], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771001146114941*^9, 3.7710012361196218`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2ae5ee6f-cd25-4794-8859-b96431d0cb3a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"introAlgebraPSet", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\scc_introductory_algebra_workbook_spring_2013.pdf\>\"", 
     ",", " ", "\"\<Plaintext\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7709989062874613`*^9, 3.7709989626550627`*^9}, {
  3.771001059542406*^9, 3.7710010670087366`*^9}, {3.7710012605077686`*^9, 
  3.771001264116997*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"36d4ada3-9de4-4fe8-9564-16b385821ace"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcPSet", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\Silas \
Grossberndt\\\\Documents\\\\GitHub\\\\WSS-Template\\\\Final Project\\\\Drafts\
\\\\problem_sets\\\\CalcI_Complete_Problems.pdf\>\"", ",", " ", 
    "\"\<Plaintext\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7709990423991756`*^9, 3.77099907067227*^9}, {
  3.771001250738564*^9, 3.771001252973305*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"53b94c62-a924-4c28-8c9a-87e4eb51b9a0"],

Cell[BoxData[
 TemplateBox[{
  "Import","general",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Expected cross reference \
table\\\\\\\"\\\"}]\\)\"",2,5,3,15900165660389849415,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710012553433323`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"dbe2cb6e-facc-4c93-b1c6-e9a3524f9f36"],

Cell[BoxData[
 TemplateBox[{
  "Import","general",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Expected cross reference \
table\\\\\\\"\\\"}]\\)\"",2,5,4,15900165660389849415,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710012554313955`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"5b6f405d-83de-4b28-83e2-f41b86fd00cf"],

Cell[BoxData[
 TemplateBox[{
  "Import","general",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Could not find document \
trailer\\\\\\\"\\\"}]\\)\"",2,5,5,15900165660389849415,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771001255446906*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"e76771e1-18d9-4315-a79d-1d85eb8dd156"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Import\\\", \\\"::\\\", \
\\\"general\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,5,6,15900165660389849415,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771001255496441*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"3e8933cc-3ac4-4ecc-8b2c-0c62f1934297"],

Cell[BoxData["\<\"\"\>"], "Output",
 CellChangeTimes->{3.7710012555154543`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ec94d3f8-6614-4085-9cb8-5c728e2407c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsPEMDAS", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Simplify (2-5\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", ",", " ", 
    "\"\<Simplify 2-\!\(\*SuperscriptBox[\(5\), \(2\)]\)\>\"", ",", " ", 
    "\"\<Simplify 10-7+1\>\"", ",", " ", "\"\<Simplify 10-(7+1)\>\"", ",", 
    " ", "\"\<Simplify 24/(4-2\!\(\*SuperscriptBox[\()\), \(3\)]\)\>\"", ",", 
    " ", "\"\<Simplify 4+5(1+12/6\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\"", 
    ",", " ", "\"\<Simplify (15-3)/(1+5)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710111217256823`*^9, 3.7710111540272284`*^9}, {
  3.7710111885866814`*^9, 3.7710113104444427`*^9}, {3.771011349072077*^9, 
  3.7710114614252415`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"2333ef13-77fd-4cdf-b6bd-0173171dc2ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Simplify (2-5\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>",
    ",", "\<\"Simplify 2-\\!\\(\\*SuperscriptBox[\\(5\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 10-7+1\"\>", ",", "\<\"Simplify 10-(7+1)\"\>", 
   ",", "\<\"Simplify 24/(4-2\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\"\>", 
   ",", "\<\"Simplify 4+5(1+12/6\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\"\>", ",", "\<\"Simplify (15-3)/(1+5)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771011462913172*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"1465c286-3d7d-449d-ac64-1641b5b5a6c9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"a1QsFractions", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<express 3 2/7 as an improper fraction\>\"", ",", " ", 
    "\"\<express 12 1/3 as an improper fraction\>\"", ",", " ", 
    "\"\<Express 42/5 as a mixed number\>\"", ",", " ", 
    "\"\<Express 53/9 as a mixed number\>\"", ",", " ", 
    "\"\<write 3/18 in simplest form\>\"", ",", " ", 
    "\"\<write 42/54 in simplest form\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710119043974237`*^9, 3.771012096049966*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"2d263997-c8cc-4cfe-a7ea-3727e1faf43b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "\"\<express 3 2/7 as an improper fraction\>\"", ",", 
   "\"\<express 12 1/3 as an improper fraction\>\"", ",", 
   "\"\<Express 42/5 as a mixed number\>\"", ",", 
   "\"\<Express 53/9 as a mixed number\>\"", ",", 
   "\"\<write 3/18 in simplest form\>\"", ",", 
   "\"\<write 42/54 in simplest form\>\""}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1QsOppFrac", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Multiply 24/3 and 27/8\>\"", ",", " ", "\"\<Multiply 8 and 3/24\>\"",
      ",", " ", "\"\<Add 1/2 and 1/3\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1QsAbsoluteVal", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<What is the absolute value of -1?\>\"", ",", " ", 
     "\"\<What is |1|\>\"", ",", " ", "\"\<What is |-30|\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1QsNegatice", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<What is 3-(-2)?\>\"", ",", " ", "\"\<What is -3+4\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"a1QsIntovars", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Evaluate \!\(\*SuperscriptBox[\(a\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=5 and b=3\>\"", ",", 
    " ", "\"\<Evaluate a-\!\(\*SuperscriptBox[\(b\), \(2\)]\) when a=4 and \
b=2\>\"", ",", " ", 
    "\"\<Evaluate \!\(\*SuperscriptBox[\(a\), \(2\)]\)+b when a=7 and \
b=1\>\""}], "}"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7710183957665844`*^9, 3.771018693615785*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"6c60326b-e42a-4217-9c4b-5a627cce92a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"express 3 2/7 as an improper fraction\"\>", 
   ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"Express 42/5 as a mixed number\"\>", 
   ",", "\<\"Express 53/9 as a mixed number\"\>", 
   ",", "\<\"write 3/18 in simplest form\"\>", 
   ",", "\<\"write 42/54 in simplest form\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771018605464325*^9, 3.771018696019617*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"13a45433-da7c-48b3-b716-61b7e0f7a0b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=5 and \
b=3\"\>", 
   ",", "\<\"Evaluate a-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=4 \
and b=2\"\>", 
   ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+b when a=7 \
and b=1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771018605464325*^9, 3.7710186960261207`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"15d20242-de08-421f-8f19-eb8816fdbd45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsCombineLikeTerms", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Combine like terms of 3a-6a+10a-a\>\"", ",", " ", 
    "\"\<Combine the like terms of 5x-10y+6z-3x\>\"", ",", " ", 
    "\"\<Combine like terms of 3n-5\!\(\*SuperscriptBox[\(n\), \(\(2\)\(\\\ \
\)\)]\)+6n-10+2\!\(\*SuperscriptBox[\(n\), \(2\)]\)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710187153865156`*^9, 3.7710188213954906`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"a7ae84c8-e77e-4163-a09b-03f6288de0b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Combine like terms of 3a-6a+10a-a\"\>", 
   ",", "\<\"Combine the like terms of 5x-10y+6z-3x\"\>", 
   ",", "\<\"Combine like terms of 3n-5\\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\\(2\\)\\(\\\\ \\)\\)]\\)+6n-10+2\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\
\\)\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771018823308611*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"c46b8fac-bc63-49f3-9a12-0c8b86036468"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsDistrbutive", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<5(2x+4)\>\"", ",", " ", 
    "\"\<-3(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-2x+7)\>\"", ",", " ", 
    "\"\<-(5\!\(\*SuperscriptBox[\(x\), \(4\)]\)-8)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710188742668247`*^9, 3.7710188984740705`*^9}, {
  3.771019155256483*^9, 3.7710192378708935`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"965f7365-78f2-4e84-8c81-fb88f95c8219"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"5(2x+4)\"\>", 
   ",", "\<\"-3(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-2x+7)\"\>", 
   ",", "\<\"-(5\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\)-8)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771019238729371*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"eb1ce775-5664-429a-8237-d494f846fade"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsSolving", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<8x-2=22\>\"", ",", " ", "\"\<-x-2=12\>\"", ",", " ", 
    "\"\<2/3 x+3 =15\>\""}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.7710193041936626`*^9, 3.771019361406973*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"e9cacc85-48d6-4d31-ab94-5d755d539cc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8x-2=22\"\>", ",", "\<\"-x-2=12\"\>", 
   ",", "\<\"2/3 x+3 =15\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7710193622781944`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"fd4a51a0-cb2d-4f9b-95bf-0ecd1af517b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsPolynomials", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Factor 3\!\(\*SuperscriptBox[\(x\), \(2\)]\)+4x+1\>\"", ",", " ", 
    "\"\<Factor \!\(\*SuperscriptBox[\(n\), \(2\)]\)+5n+6\>\"", ",", " ", 
    "\"\<Factor \!\(\*SuperscriptBox[\(a\), \(2\)]\)+3a+2\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.771019367476872*^9, 3.7710193984622173`*^9}, {
  3.7710194762827587`*^9, 3.7710195744093504`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"7421c56f-d5af-4df6-8034-ece5d5384058"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Factor 3\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)+4x+1\"\>",
    ",", "\<\"Factor \\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\\)+5n+6\"\>", 
   ",", "\<\"Factor \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+3a+2\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771019577320595*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"6dcd3860-f6a5-4f5b-b636-09856545ebe3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a1QsPercent", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<A $750 watch is on sale for 15% off. Find the sale price.\>\"", ",", 
    " ", "\"\<A salesman tells you that the $140 earrings are already marked \
20% off. What\nwas the original price?\>\"", ",", " ", 
    "\"\<Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to Toys R \
Us for his birthday.\nSales tax is currently 9%. Determine the price of the \
most expensive toy Tommy can buy with\nthe $50 gift card.\>\"", ",", " ", 
    "\"\<A salesman is paid a monthly salary of $2,300 plus 7% commission on \
his monthly sales.\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.77101961019419*^9, 3.7710196924983225`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"e86a1b17-fc00-41b9-8941-ba78eb4e043a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A $750 watch is on sale for 15% off. Find the sale price.\"\>",
    ",", "\<\"A salesman tells you that the $140 earrings are already marked \
20% off. What\\nwas the original price?\"\>", 
   ",", "\<\"Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to \
Toys R Us for his birthday.\\nSales tax is currently 9%. Determine the price \
of the most expensive toy Tommy can buy with\\nthe $50 gift card.\"\>", 
   ",", "\<\"A salesman is paid a monthly salary of $2,300 plus 7% commission \
on his monthly sales.\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771019694683964*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"6e4264d6-04df-4787-9c89-e51e66f25b13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra1Questions", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
    "a1QsAbsoluteVal", ",", " ", "a1QsCombineLikeTerms", ",", " ", 
     "a1QsDistrbutive", ",", " ", "a1QsFractions", ",", " ", "a1QsIntovars", 
     ",", " ", "a1QsPEMDAS", ",", " ", "a1QsSolving", ",", " ", "a1QsOppFrac",
      ",", " ", "a1QsPercent", ",", " ", "a1QsNegatice"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710197639313936`*^9, 3.77101991115589*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"5d0e39cd-11b1-4595-aeb9-0fdbd16ece9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What is the absolute value of -1?\"\>", 
   ",", "\<\"What is |1|\"\>", ",", "\<\"What is |-30|\"\>", 
   ",", "\<\"Combine like terms of 3a-6a+10a-a\"\>", 
   ",", "\<\"Combine the like terms of 5x-10y+6z-3x\"\>", 
   ",", "\<\"Combine like terms of 3n-5\\!\\(\\*SuperscriptBox[\\(n\\), \
\\(\\(2\\)\\(\\\\ \\)\\)]\\)+6n-10+2\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\
\\)\"\>", ",", "\<\"5(2x+4)\"\>", 
   ",", "\<\"-3(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-2x+7)\"\>", 
   ",", "\<\"-(5\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\)-8)\"\>", 
   ",", "\<\"express 3 2/7 as an improper fraction\"\>", 
   ",", "\<\"express 12 1/3 as an improper fraction\"\>", 
   ",", "\<\"Express 42/5 as a mixed number\"\>", 
   ",", "\<\"Express 53/9 as a mixed number\"\>", 
   ",", "\<\"write 3/18 in simplest form\"\>", 
   ",", "\<\"write 42/54 in simplest form\"\>", 
   ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=5 and \
b=3\"\>", 
   ",", "\<\"Evaluate a-\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\) when a=4 \
and b=2\"\>", 
   ",", "\<\"Evaluate \\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)+b when a=7 \
and b=1\"\>", 
   ",", "\<\"Simplify (2-5\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 2-\\!\\(\\*SuperscriptBox[\\(5\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Simplify 10-7+1\"\>", ",", "\<\"Simplify 10-(7+1)\"\>", 
   ",", "\<\"Simplify 24/(4-2\\!\\(\\*SuperscriptBox[\\()\\), \
\\(3\\)]\\)\"\>", 
   ",", "\<\"Simplify 4+5(1+12/6\\!\\(\\*SuperscriptBox[\\()\\), \
\\(2\\)]\\)\"\>", ",", "\<\"Simplify (15-3)/(1+5)\"\>", 
   ",", "\<\"8x-2=22\"\>", ",", "\<\"-x-2=12\"\>", ",", "\<\"2/3 x+3 =15\"\>",
    ",", "\<\"Multiply 24/3 and 27/8\"\>", ",", "\<\"Multiply 8 and 3/24\"\>",
    ",", "\<\"Add 1/2 and 1/3\"\>", 
   ",", "\<\"A $750 watch is on sale for 15% off. Find the sale price.\"\>", 
   ",", "\<\"A salesman tells you that the $140 earrings are already marked \
20% off. What\\nwas the original price?\"\>", 
   ",", "\<\"Tommy\[CloseCurlyQuote]s grandma gave him a $50 gift card to \
Toys R Us for his birthday.\\nSales tax is currently 9%. Determine the price \
of the most expensive toy Tommy can buy with\\nthe $50 gift card.\"\>", 
   ",", "\<\"A salesman is paid a monthly salary of $2,300 plus 7% commission \
on his monthly sales.\\nDetermine the amount of sales required for his total \
monthly income to be $3,000.\"\>", ",", "\<\"What is 3-(-2)?\"\>", 
   ",", "\<\"What is -3+4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771019911996387*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"fb6119d6-ebe5-4971-b9f6-d22179b7c088"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771020335128747*^9, 
  3.7710203513826475`*^9}},ExpressionUUID->"1760b367-3e57-4f97-81ef-\
1f5ac4d411d5"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"1462420\\\", \\\"\[RightSkeleton]\\\"}], \\\"\[LeftDoubleBracket]\\\", \
\\\"15\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is longer than depth of \
object.\"",2,204,15,15900165660389849415,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7710203437747526`*^9},
 CellLabel->
  "During evaluation of \
In[204]:=",ExpressionUUID->"00f0af5d-2c9a-470a-8c19-82c2f0e27c0c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          TemplateBox[{"1462420"},
           "OutputSizeLimit`Skeleton"], "\[LeftDoubleBracket]", "15", 
          "\[RightDoubleBracket]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 204, 15900165660389849415, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 204, 15900165660389849415, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 204, 15900165660389849415, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900165660389849415 === $SessionID, 
   Out[204], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771020343835795*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"c6ef9c07-65d2-4d97-8118-c73657de2b6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSetList", "=", 
  RowBox[{"StringSplit", "[", "algebra2PSet", "]"}]}]], "Input",
 CellChangeTimes->{{3.77102049397332*^9, 3.771020557833073*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"2a472862-58b0-4b0f-803a-4e77b423fc29"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          
          RowBox[{"\<\"CK-12\"\>", ",", "\<\"Algebra\"\>", ",", "\<\"II\"\>", 
           ",", "\<\"with\"\>", ",", "\<\"Trigonometry\"\>", 
           ",", "\<\"Concepts\"\>", ",", "\<\"Lori\"\>", 
           ",", "\<\"Jordan\"\>", ",", "\<\"Kate\"\>", ",", "\<\"Dirga\"\>", 
           ",", "\<\"SayThanks\"\>", ",", "\<\"to\"\>", 
           ",", "\<\"theAuthors\"\>", ",", "\<\"Click\"\>", 
           ",", "\<\"http://www.ck12.org/saythanks\"\>", ",", "\<\"(No\"\>", 
           ",", "\<\"sign\"\>", ",", 
           TemplateBox[{"201690"},
            "OutputSizeLimit`Skeleton"], ",", "\<\"You\"\>", 
           ",", "\<\"will\"\>", ",", "\<\"use\"\>", ",", "\<\"these\"\>", 
           ",", "\<\"identities\"\>", ",", "\<\"and\"\>", 
           ",", "\<\"formulas\"\>", ",", "\<\"to\"\>", 
           ",", "\<\"simplify\"\>", ",", "\<\"expressions,\"\>", 
           ",", "\<\"prove\"\>", ",", "\<\"trigonometric\"\>", 
           ",", "\<\"statements,\"\>", ",", "\<\"and\"\>", 
           ",", "\<\"solve\"\>", ",", "\<\"equations.\"\>", 
           ",", "\<\"983\"\>"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 211, 15900165660389849415, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 211, 15900165660389849415, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 211, 15900165660389849415, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900165660389849415 === $SessionID, 
   Out[211], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7710205588911505`*^9, 3.771057793301521*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"f0fa8df0-bad5-426d-95fe-576d376f8cc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSetList", "=", 
  RowBox[{"algebra2PSetList", "[", 
   RowBox[{"20", ";;", 
    RowBox[{
     RowBox[{"Length", "[", "algebra2PSetList", "]"}], "-", "10"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710205859087086`*^9, 3.771020630493934*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"3eb571b7-d401-4b9c-b389-6b9984e7cec4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"CK-12\"\>", ",", "\<\"Algebra\"\>", ",", "\<\"II\"\>",
             ",", "\<\"with\"\>", ",", "\<\"Trigonometry\"\>", 
            ",", "\<\"Concepts\"\>", ",", "\<\"Lori\"\>", 
            ",", "\<\"Jordan\"\>", ",", "\<\"Kate\"\>", ",", "\<\"Dirga\"\>", 
            ",", "\<\"SayThanks\"\>", ",", "\<\"to\"\>", 
            ",", "\<\"theAuthors\"\>", ",", "\<\"Click\"\>", 
            ",", "\<\"http://www.ck12.org/saythanks\"\>", ",", "\<\"(No\"\>", 
            ",", 
            TemplateBox[{"201692"},
             "OutputSizeLimit`Skeleton"], ",", "\<\"will\"\>", 
            ",", "\<\"use\"\>", ",", "\<\"these\"\>", 
            ",", "\<\"identities\"\>", ",", "\<\"and\"\>", 
            ",", "\<\"formulas\"\>", ",", "\<\"to\"\>", 
            ",", "\<\"simplify\"\>", ",", "\<\"expressions,\"\>", 
            ",", "\<\"prove\"\>", ",", "\<\"trigonometric\"\>", 
            ",", "\<\"statements,\"\>", ",", "\<\"and\"\>", 
            ",", "\<\"solve\"\>", ",", "\<\"equations.\"\>", 
            ",", "\<\"983\"\>"}], "}"}], "[", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 206, 15900165660389849415, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 206, 15900165660389849415, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 206, 15900165660389849415, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[15900165660389849415 === $SessionID, 
   Out[206], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7710206396218257`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"99cc9495-b2de-4866-8ae2-911cd3c854a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"algebra2PSetList", ",", " ", "\"\<ExampleA\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.771020470127348*^9, 3.7710204865296173`*^9}, {
   3.771057675347929*^9, 3.771057709112612*^9}, 3.7710579429814596`*^9},
 CellLabel->
  "In[216]:=",ExpressionUUID->"d0dbf12a-c39a-4ca3-a5e6-bad8d5325af4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "7936", "}"}], ",", 
   RowBox[{"{", "8501", "}"}], ",", 
   RowBox[{"{", "9237", "}"}], ",", 
   RowBox[{"{", "10028", "}"}], ",", 
   RowBox[{"{", "10711", "}"}], ",", 
   RowBox[{"{", "11398", "}"}], ",", 
   RowBox[{"{", "12532", "}"}], ",", 
   RowBox[{"{", "13214", "}"}], ",", 
   RowBox[{"{", "14025", "}"}], ",", 
   RowBox[{"{", "14987", "}"}], ",", 
   RowBox[{"{", "15646", "}"}], ",", 
   RowBox[{"{", "16295", "}"}], ",", 
   RowBox[{"{", "17107", "}"}], ",", 
   RowBox[{"{", "17787", "}"}], ",", 
   RowBox[{"{", "18422", "}"}], ",", 
   RowBox[{"{", "19182", "}"}], ",", 
   RowBox[{"{", "20586", "}"}], ",", 
   RowBox[{"{", "21564", "}"}], ",", 
   RowBox[{"{", "22638", "}"}], ",", 
   RowBox[{"{", "23556", "}"}], ",", 
   RowBox[{"{", "24610", "}"}], ",", 
   RowBox[{"{", "25532", "}"}], ",", 
   RowBox[{"{", "26211", "}"}], ",", 
   RowBox[{"{", "26999", "}"}], ",", 
   RowBox[{"{", "27883", "}"}], ",", 
   RowBox[{"{", "29054", "}"}], ",", 
   RowBox[{"{", "29821", "}"}], ",", 
   RowBox[{"{", "30959", "}"}], ",", 
   RowBox[{"{", "31872", "}"}], ",", 
   RowBox[{"{", "33035", "}"}], ",", 
   RowBox[{"{", "34229", "}"}], ",", 
   RowBox[{"{", "34694", "}"}], ",", 
   RowBox[{"{", "35920", "}"}], ",", 
   RowBox[{"{", "36621", "}"}], ",", 
   RowBox[{"{", "37967", "}"}], ",", 
   RowBox[{"{", "38805", "}"}], ",", 
   RowBox[{"{", "39988", "}"}], ",", 
   RowBox[{"{", "40705", "}"}], ",", 
   RowBox[{"{", "41625", "}"}], ",", 
   RowBox[{"{", "42666", "}"}], ",", 
   RowBox[{"{", "43905", "}"}], ",", 
   RowBox[{"{", "44913", "}"}], ",", 
   RowBox[{"{", "45880", "}"}], ",", 
   RowBox[{"{", "47545", "}"}], ",", 
   RowBox[{"{", "48901", "}"}], ",", 
   RowBox[{"{", "50084", "}"}], ",", 
   RowBox[{"{", "51068", "}"}], ",", 
   RowBox[{"{", "51982", "}"}], ",", 
   RowBox[{"{", "53307", "}"}], ",", 
   RowBox[{"{", "54444", "}"}], ",", 
   RowBox[{"{", "56231", "}"}], ",", 
   RowBox[{"{", "57164", "}"}], ",", 
   RowBox[{"{", "58333", "}"}], ",", 
   RowBox[{"{", "59319", "}"}], ",", 
   RowBox[{"{", "61042", "}"}], ",", 
   RowBox[{"{", "61985", "}"}], ",", 
   RowBox[{"{", "62051", "}"}], ",", 
   RowBox[{"{", "63256", "}"}], ",", 
   RowBox[{"{", "64402", "}"}], ",", 
   RowBox[{"{", "65816", "}"}], ",", 
   RowBox[{"{", "66671", "}"}], ",", 
   RowBox[{"{", "67729", "}"}], ",", 
   RowBox[{"{", "68640", "}"}], ",", 
   RowBox[{"{", "69264", "}"}], ",", 
   RowBox[{"{", "70254", "}"}], ",", 
   RowBox[{"{", "70937", "}"}], ",", 
   RowBox[{"{", "71628", "}"}], ",", 
   RowBox[{"{", "72157", "}"}], ",", 
   RowBox[{"{", "73106", "}"}], ",", 
   RowBox[{"{", "74602", "}"}], ",", 
   RowBox[{"{", "75501", "}"}], ",", 
   RowBox[{"{", "75558", "}"}], ",", 
   RowBox[{"{", "76337", "}"}], ",", 
   RowBox[{"{", "77409", "}"}], ",", 
   RowBox[{"{", "78518", "}"}], ",", 
   RowBox[{"{", "79405", "}"}], ",", 
   RowBox[{"{", "80766", "}"}], ",", 
   RowBox[{"{", "81694", "}"}], ",", 
   RowBox[{"{", "82627", "}"}], ",", 
   RowBox[{"{", "83641", "}"}], ",", 
   RowBox[{"{", "84316", "}"}], ",", 
   RowBox[{"{", "85290", "}"}], ",", 
   RowBox[{"{", "86088", "}"}], ",", 
   RowBox[{"{", "86833", "}"}], ",", 
   RowBox[{"{", "87753", "}"}], ",", 
   RowBox[{"{", "88808", "}"}], ",", 
   RowBox[{"{", "89908", "}"}], ",", 
   RowBox[{"{", "91234", "}"}], ",", 
   RowBox[{"{", "92456", "}"}], ",", 
   RowBox[{"{", "93662", "}"}], ",", 
   RowBox[{"{", "94762", "}"}], ",", 
   RowBox[{"{", "95937", "}"}], ",", 
   RowBox[{"{", "96665", "}"}], ",", 
   RowBox[{"{", "97744", "}"}], ",", 
   RowBox[{"{", "98727", "}"}], ",", 
   RowBox[{"{", "99384", "}"}], ",", 
   RowBox[{"{", "100103", "}"}], ",", 
   RowBox[{"{", "100694", "}"}], ",", 
   RowBox[{"{", "101504", "}"}], ",", 
   RowBox[{"{", "102147", "}"}], ",", 
   RowBox[{"{", "102405", "}"}], ",", 
   RowBox[{"{", "103414", "}"}], ",", 
   RowBox[{"{", "105316", "}"}], ",", 
   RowBox[{"{", "106371", "}"}], ",", 
   RowBox[{"{", "107390", "}"}], ",", 
   RowBox[{"{", "109035", "}"}], ",", 
   RowBox[{"{", "110026", "}"}], ",", 
   RowBox[{"{", "110854", "}"}], ",", 
   RowBox[{"{", "111573", "}"}], ",", 
   RowBox[{"{", "112222", "}"}], ",", 
   RowBox[{"{", "112756", "}"}], ",", 
   RowBox[{"{", "112896", "}"}], ",", 
   RowBox[{"{", "113638", "}"}], ",", 
   RowBox[{"{", "114153", "}"}], ",", 
   RowBox[{"{", "115044", "}"}], ",", 
   RowBox[{"{", "116060", "}"}], ",", 
   RowBox[{"{", "117131", "}"}], ",", 
   RowBox[{"{", "118305", "}"}], ",", 
   RowBox[{"{", "119212", "}"}], ",", 
   RowBox[{"{", "120583", "}"}], ",", 
   RowBox[{"{", "121730", "}"}], ",", 
   RowBox[{"{", "122435", "}"}], ",", 
   RowBox[{"{", "123270", "}"}], ",", 
   RowBox[{"{", "124276", "}"}], ",", 
   RowBox[{"{", "125083", "}"}], ",", 
   RowBox[{"{", "126010", "}"}], ",", 
   RowBox[{"{", "126820", "}"}], ",", 
   RowBox[{"{", "127853", "}"}], ",", 
   RowBox[{"{", "128539", "}"}], ",", 
   RowBox[{"{", "129903", "}"}], ",", 
   RowBox[{"{", "130906", "}"}], ",", 
   RowBox[{"{", "131897", "}"}], ",", 
   RowBox[{"{", "132736", "}"}], ",", 
   RowBox[{"{", "133937", "}"}], ",", 
   RowBox[{"{", "134946", "}"}], ",", 
   RowBox[{"{", "136199", "}"}], ",", 
   RowBox[{"{", "137221", "}"}], ",", 
   RowBox[{"{", "138242", "}"}], ",", 
   RowBox[{"{", "139487", "}"}], ",", 
   RowBox[{"{", "140399", "}"}], ",", 
   RowBox[{"{", "141095", "}"}], ",", 
   RowBox[{"{", "142613", "}"}], ",", 
   RowBox[{"{", "143310", "}"}], ",", 
   RowBox[{"{", "143853", "}"}], ",", 
   RowBox[{"{", "144786", "}"}], ",", 
   RowBox[{"{", "145855", "}"}], ",", 
   RowBox[{"{", "146567", "}"}], ",", 
   RowBox[{"{", "147272", "}"}], ",", 
   RowBox[{"{", "147804", "}"}], ",", 
   RowBox[{"{", "149169", "}"}], ",", 
   RowBox[{"{", "150135", "}"}], ",", 
   RowBox[{"{", "151617", "}"}], ",", 
   RowBox[{"{", "152965", "}"}], ",", 
   RowBox[{"{", "154326", "}"}], ",", 
   RowBox[{"{", "155084", "}"}], ",", 
   RowBox[{"{", "156042", "}"}], ",", 
   RowBox[{"{", "156819", "}"}], ",", 
   RowBox[{"{", "157821", "}"}], ",", 
   RowBox[{"{", "158813", "}"}], ",", 
   RowBox[{"{", "160040", "}"}], ",", 
   RowBox[{"{", "160652", "}"}], ",", 
   RowBox[{"{", "161107", "}"}], ",", 
   RowBox[{"{", "162140", "}"}], ",", 
   RowBox[{"{", "163471", "}"}], ",", 
   RowBox[{"{", "164742", "}"}], ",", 
   RowBox[{"{", "166766", "}"}], ",", 
   RowBox[{"{", "167898", "}"}], ",", 
   RowBox[{"{", "169062", "}"}], ",", 
   RowBox[{"{", "169128", "}"}], ",", 
   RowBox[{"{", "170501", "}"}], ",", 
   RowBox[{"{", "171552", "}"}], ",", 
   RowBox[{"{", "172415", "}"}], ",", 
   RowBox[{"{", "173566", "}"}], ",", 
   RowBox[{"{", "174285", "}"}], ",", 
   RowBox[{"{", "175551", "}"}], ",", 
   RowBox[{"{", "176444", "}"}], ",", 
   RowBox[{"{", "177497", "}"}], ",", 
   RowBox[{"{", "178515", "}"}], ",", 
   RowBox[{"{", "179361", "}"}], ",", 
   RowBox[{"{", "180787", "}"}], ",", 
   RowBox[{"{", "181783", "}"}], ",", 
   RowBox[{"{", "182776", "}"}], ",", 
   RowBox[{"{", "183844", "}"}], ",", 
   RowBox[{"{", "185238", "}"}], ",", 
   RowBox[{"{", "186228", "}"}], ",", 
   RowBox[{"{", "187019", "}"}], ",", 
   RowBox[{"{", "187738", "}"}], ",", 
   RowBox[{"{", "189396", "}"}], ",", 
   RowBox[{"{", "190308", "}"}], ",", 
   RowBox[{"{", "191047", "}"}], ",", 
   RowBox[{"{", "192046", "}"}], ",", 
   RowBox[{"{", "193219", "}"}], ",", 
   RowBox[{"{", "193913", "}"}], ",", 
   RowBox[{"{", "194617", "}"}], ",", 
   RowBox[{"{", "194844", "}"}], ",", 
   RowBox[{"{", "195615", "}"}], ",", 
   RowBox[{"{", "196303", "}"}], ",", 
   RowBox[{"{", "196927", "}"}], ",", 
   RowBox[{"{", "197724", "}"}], ",", 
   RowBox[{"{", "198418", "}"}], ",", 
   RowBox[{"{", "199053", "}"}], ",", 
   RowBox[{"{", "199462", "}"}], ",", 
   RowBox[{"{", "200347", "}"}], ",", 
   RowBox[{"{", "200881", "}"}], ",", 
   RowBox[{"{", "201247", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7710577100003815`*^9, 3.7710577977638984`*^9, 
  3.7710579441253877`*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"a5052fe3-61c5-4c70-b925-e0b3d85b4989"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "algebra2PSetList", "]"}]], "Input",
 CellChangeTimes->{{3.7710577164626236`*^9, 3.771057729677744*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"18ea2485-4bf9-4e7f-b32b-cee37ff6fa97"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.7710577305441217`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"5235aad1-c553-4a75-bf62-7add5433e184"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2Qs", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"algebra2PSetList", "[", 
      RowBox[{"[", 
       RowBox[{"7937", ";;", "7952"}], "]"}], "]"}], ",", " ", 
     RowBox[{"algebra2PSetList", "[", 
      RowBox[{"[", 
       RowBox[{"8502", ";;", "8510"}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7710577350276003`*^9, 3.771057849938543*^9}, {
  3.7710579168623095`*^9, 3.7710579273036275`*^9}, {3.771057957470724*^9, 
  3.7710581301741076`*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"9727eebb-e54d-4181-ac82-9062755a35c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What\"\>", ",", "\<\"is\"\>", ",", "\<\"the\"\>", 
   ",", "\<\"most\"\>", ",", "\<\"speci\.02c\"\>", ",", "\<\"subset\"\>", 
   ",", "\<\"of\"\>", ",", "\<\"the\"\>", ",", "\<\"real\"\>", 
   ",", "\<\"numbers\"\>", ",", "\<\"that\"\>", ",", "\<\"-7\"\>", 
   ",", "\<\"is\"\>", ",", "\<\"a\"\>", ",", "\<\"part\"\>", 
   ",", "\<\"of?\"\>", ",", "\<\"p\"\>", ",", "\<\"7\"\>", 
   ",", "\<\"Plot\"\>", ",", "\<\"1:25;\"\>", ",", "\<\",\"\>", 
   ",", "\<\"and\"\>", ",", "\<\"2\"\>", ",", "\<\"6\"\>", 
   ",", "\<\"on\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7710581139757175`*^9, 3.7710581311440864`*^9}},
 CellLabel->
  "Out[227]=",ExpressionUUID->"67f6d6bd-4bc4-45ee-b84e-6101f261af05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["algebra2Qs"], "Input",
 CellChangeTimes->{{3.771058064301793*^9, 3.77105807237717*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"ccc1bba4-6162-4c1a-9594-9a244047aa85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What\"\>", ",", "\<\"is\"\>", ",", "\<\"the\"\>", 
   ",", "\<\"most\"\>", ",", "\<\"speci\.02c\"\>", ",", "\<\"subset\"\>", 
   ",", "\<\"of\"\>", ",", "\<\"the\"\>", ",", "\<\"real\"\>", 
   ",", "\<\"numbers\"\>", ",", "\<\"that\"\>", ",", "\<\"-7\"\>", 
   ",", "\<\"is\"\>", ",", "\<\"a\"\>", ",", "\<\"part\"\>", 
   ",", "\<\"of?\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771058073839203*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"16a0f908-e7d3-4daf-8259-b406181b3899"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2PSetList", "[", 
  RowBox[{"[", 
   RowBox[{"8503", ";;", "8510"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7710581376943464`*^9, 3.7710581674301476`*^9}, {
  3.7710581977897487`*^9, 3.77105819797186*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"a315aa41-887f-4376-b5a7-9f6614771663"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"Plot\"\>", ",", "\<\"1:25;\"\>", 
   ",", "\<\",\"\>", ",", "\<\"and\"\>", ",", "\<\"2\"\>", ",", "\<\"6\"\>", 
   ",", "\<\"on\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771058169182247*^9, 3.771058201520108*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"8a987b53-a802-4e6b-8a9c-5f2d5e4cbab6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"algebra2Qs", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<What is the most specific subset of the real numbers that -7 is a \
part of?\>\"", ",", " ", "\"\<Plot 1.25, 2/3 and 2 on a number line\>\"", ",",
     " ", "\"\<Identify the property used in the equations below as \
distributive, inverse or associative\>\"", ",", " ", 
    "\"\<Evaluate 2\!\(\*SuperscriptBox[\(x\), \(2\)]\)-9 for x=-3\>\"", ",", 
    " ", "\"\<Simplify 5x-12-3x+4\>\"", ",", 
    "\"\<Solve for x in the equation 3x-4y=12\>\"", ",", 
    "\"\<Solve 7+y=16 for y\>\"", ",", " ", 
    "\"\<Expand (a+b\!\(\*SuperscriptBox[\()\), \(3\)]\)\>\"", ",", " ", 
    "\"\<What is (a+b\!\(\*SuperscriptBox[\()\), \(n\)]\) (Hint: What theorem \
is this?)\>\"", ",", " ", "\"\<Solve 4x-9=11\>\"", ",", " ", 
    "\"\<Evaluate sin(15)cos(15)\>\"", ",", " ", "\"\<Solve 3(x-5)+4=10\>\"", 
    ",", " ", 
    "\"\<Use the law of sines to find the missing side of this triangle\>\"", 
    ",", " ", 
    "\"\<What is the largest value for the missing side of this triangle\>\"",
     ",", " ", "\"\<What is sin(60)\>\"", ",", " ", "\"\<What is tan(30)\>\"",
     ",", " ", "\"\<Write 30 degrees in radians\>\"", ",", " ", 
    "\"\<Write \[Pi]/4 in degrees\>\"", ",", " ", 
    "\"\<Is x=-8 a solution to 1/2x+6>3?\>\"", ",", "  ", 
    "\"\<Solve and graph the solution to 2x-3<7\>\"", ",", " ", 
    "\"\<Solve and graph the solution to |3x-1|\[GreaterEqual]10\>\"", ",", 
    "  ", "\"\<How many miutes are in a day?\>\"", ",", " ", 
    "\"\<Wrie the standard form of y=3/2 x+2\>\"", ",", " ", 
    "\"\<Write slope intercept form for a slope of 2 and y-intercept of \
12\>\"", ",", " ", 
    "\"\<Find a perpedicular line of y=3x+2 with y intercept of the \
origin\>\"", ",", 
    "\"\<What are the domain and range of the trigonometric functions?\>\"", 
    " ", ",", " ", "\"\<Graph the inequality y<3x+4\>\"", ",", " ", 
    "\"\<Find the equation of best fit for the below listed data\>\"", ",", 
    " ", "\"\<Graph the parabola give by \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)+3x+2. Find the zeros, vertex and intercept\>\"", ",", " ", 
    "\"\<What is the sum from 1 to 5 of a=10n+3\>\"", ",", " ", 
    "\"\<What is the next term in the series \>\"", ",", " ", 
    "\"\<what is the sum of the geometric series from 1 to infinity of 9(1/10\
\!\(\*SuperscriptBox[\()\), \(n\)]\)?\>\"", ",", " ", 
    "\"\<What are the discontiuities in the function y=(x+2)/(x+3x+2). Which \
are fundamental and which are removable?\>\"", ",", " ", 
    "\"\<What is ln(1)?\>\"", ",", " ", 
    "\"\<What are the domain and range of \!\(\*SuperscriptBox[\(e\), \
\(x\)]\) and ln(x)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710582068470354`*^9, 3.771058864236945*^9}, {
  3.77105889644958*^9, 3.771059060194398*^9}, {3.771059094253581*^9, 
  3.7710591689725113`*^9}, {3.771059213441484*^9, 3.771059436664031*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"82a03de3-0e12-4c59-bb42-528749c4d97e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"What is the most specific subset of the real numbers that -7 \
is a part of?\"\>", ",", "\<\"Plot 1.25, 2/3 and 2 on a number line\"\>", 
   ",", "\<\"Identify the property used in the equations below as \
distributive, inverse or associative\"\>", 
   ",", "\<\"Evaluate 2\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-9 for \
x=-3\"\>", ",", "\<\"Simplify 5x-12-3x+4\"\>", 
   ",", "\<\"Solve for x in the equation 3x-4y=12\"\>", 
   ",", "\<\"Solve 7+y=16 for y\"\>", 
   ",", "\<\"Expand (a+b\\!\\(\\*SuperscriptBox[\\()\\), \\(3\\)]\\)\"\>", 
   ",", "\<\"What is (a+b\\!\\(\\*SuperscriptBox[\\()\\), \\(n\\)]\\) (Hint: \
What theorem is this?)\"\>", ",", "\<\"Solve 4x-9=11\"\>", 
   ",", "\<\"Evaluate sin(15)cos(15)\"\>", ",", "\<\"Solve 3(x-5)+4=10\"\>", 
   ",", "\<\"Use the law of sines to find the missing side of this triangle\"\
\>", ",", "\<\"What is the largest value for the missing side of this \
triangle\"\>", ",", "\<\"What is sin(60)\"\>", ",", "\<\"What is tan(30)\"\>",
    ",", "\<\"Write 30 degrees in radians\"\>", 
   ",", "\<\"Write \[Pi]/4 in degrees\"\>", 
   ",", "\<\"Is x=-8 a solution to 1/2x+6>3?\"\>", 
   ",", "\<\"Solve and graph the solution to 2x-3<7\"\>", 
   ",", "\<\"Solve and graph the solution to |3x-1|\[GreaterEqual]10\"\>", 
   ",", "\<\"How many miutes are in a day?\"\>", 
   ",", "\<\"Wrie the standard form of y=3/2 x+2\"\>", 
   ",", "\<\"Write slope intercept form for a slope of 2 and y-intercept of \
12\"\>", ",", "\<\"Find a perpedicular line of y=3x+2 with y intercept of the \
origin\"\>", 
   ",", "\<\"What are the domain and range of the trigonometric \
functions?\"\>", ",", "\<\"Graph the inequality y<3x+4\"\>", 
   ",", "\<\"Find the equation of best fit for the below listed data\"\>", 
   ",", "\<\"Graph the parabola give by \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\
\\)]\\)+3x+2. Find the zeros, vertex and intercept\"\>", 
   ",", "\<\"What is the sum from 1 to 5 of a=10n+3\"\>", 
   ",", "\<\"What is the next term in the series \"\>", 
   ",", "\<\"what is the sum of the geometric series from 1 to infinity of \
9(1/10\\!\\(\\*SuperscriptBox[\\()\\), \\(n\\)]\\)?\"\>", 
   ",", "\<\"What are the discontiuities in the function y=(x+2)/(x+3x+2). \
Which are fundamental and which are removable?\"\>", 
   ",", "\<\"What is ln(1)?\"\>", 
   ",", "\<\"What are the domain and range of \
\\!\\(\\*SuperscriptBox[\\(e\\), \\(x\\)]\\) and ln(x)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.771059437937356*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"5fb90799-a6c9-456e-bfdd-bee4e6020314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQspcalc", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Evaluate f(x)=3-5x-2\!\(\*SuperscriptBox[\(x\), \(2\)]\) for the \
below values: f(0), f(x+h), f(6-t)\>\"", ",", " ", 
    "\"\<Compute  the difrence quotient for the given function\>\"", ",", 
    " ", "\"\<Find the domian and range of the given function \
12\[Sqrt](14+3y)\>\"", ",", " ", 
    "\"\<Find the domain of (\!\(\*SuperscriptBox[\(w\), \(3\)]\)-3w+1)/(12 \
w-7)\>\"", ",", "\"\<Find the inverse of f (x) = 6x +15\>\"", ",", " ", 
    "\"\<Find inverse of W (x) =  (9 \[Minus]11x\!\(\*SuperscriptBox[\()\), \
\(1/5\)]\)\>\"", ",", " ", 
    "\"\<Find the exact value of cos(5 \[Pi]/6) without using a \
calculator\>\"", ",", " ", 
    "\"\<Find the exact value of sin(-4 \[Pi]/3) without using a calculator\>\
\"", ",", " ", "\"\<Solve  4sin (3t ) = 2\>\"", ",", " ", 
    "\"\<Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\!\(\*SuperscriptBox[\(2\), \(0.5\)]\) = 0 in [\[Minus]7\[Pi] ,7\[Pi] }\>\"",
     ",", " ", "\"\<Solve 4y sec(7 y) = \[Minus]21y\>\"", ",", " ", 
    "\"\<Solve 3\[Minus]14sin (12t + 7) =13\>\"", ",", " ", 
    "\"\<Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0\>\"", ",", " ", 
    "\"\<Sketch the graph of f(x)=\!\(\*SuperscriptBox[\(3\), \(1 + 2  x\)]\)\
\>\"", ",", " ", 
    "\"\<Sketch the graph of h(x)=8+3\!\(\*SuperscriptBox[\(e\), \(2  t - \
4\)]\)\>\"", ",", " ", 
    "\"\<Determine the value of \!\(\*SubscriptBox[\(log\), \(9\)]\)(81)\>\"",
     ",", " ", "\"\<Determine \!\(\*SubscriptBox[\(log\), \(1/4\)]\)(16)\>\"",
     ",", " ", "\"\<Determine ln(\!\(\*SuperscriptBox[\(e\), \(4\)]\))\>\"", 
    ",", " ", 
    "\"\<Combine 2 \!\(\*SubscriptBox[\(log\), \(4\)]\)x +5 \
\!\(\*SubscriptBox[\(log\), \(4\)]\)y - 1/2 \!\(\*SubscriptBox[\(log\), \
\(4\)]\)x\>\"", " ", ",", " ", 
    "\"\<For the function f(x)=3(x+2\!\(\*SuperscriptBox[\()\), \(\(2\)\(\\\ \
\)\)]\) and the point P at x=-3 find the tangent of x and the secant from P \
to Q\>\"", ",", " ", 
    "\"\<For the function W(x)=ln(1+\!\(\*SuperscriptBox[\(x\), \(4\)]\)) and \
the point x=1, find the secants at point Q and the tangenet line\>\"", ",", 
    " ", "\"\<For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), find the values at the \
below listed points and th limit as x aproaches 2\>\"", ",", "  ", 
    "\"\<For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), find the values at \
the below listed point and the limit as x approaches -1\>\"", ",", " ", 
    "\"\<For the function f(y)= sin(y)/y find the value at the below listed \
points and the limit as y approaches 0\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710601633187313`*^9, 3.7710602840576377`*^9}, {
  3.7710603739809523`*^9, 3.7710610326160107`*^9}, {3.7710611060732737`*^9, 
  3.771061255410469*^9}, {3.7710613977488184`*^9, 3.771061607861419*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"a376c96d-0f17-43df-a243-6359725f0331"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Evaluate f(x)=3-5x-2\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\) for the below values: f(0), f(x+h), f(6-t)\"\>", 
   ",", "\<\"Compute  the difrence quotient for the given function\"\>", 
   ",", "\<\"Find the domian and range of the given function 12\[Sqrt](14+3y)\
\"\>", ",", "\<\"Find the domain of (\\!\\(\\*SuperscriptBox[\\(w\\), \
\\(3\\)]\\)-3w+1)/(12 w-7)\"\>", 
   ",", "\<\"Find the inverse of f (x) = 6x +15\"\>", 
   ",", "\<\"Find inverse of W (x) =  (9 \
\[Minus]11x\\!\\(\\*SuperscriptBox[\\()\\), \\(1/5\\)]\\)\"\>", 
   ",", "\<\"Find the exact value of cos(5 \[Pi]/6) without using a \
calculator\"\>", 
   ",", "\<\"Find the exact value of sin(-4 \[Pi]/3) without using a \
calculator\"\>", ",", "\<\"Solve  4sin (3t ) = 2\"\>", 
   ",", "\<\"Solve 4sin (3t ) = 2 in [0, 4\[Pi]/3], 2cos(x/3) \
+\\!\\(\\*SuperscriptBox[\\(2\\), \\(0.5\\)]\\) = 0 in [\[Minus]7\[Pi] \
,7\[Pi] }\"\>", ",", "\<\"Solve 4y sec(7 y) = \[Minus]21y\"\>", 
   ",", "\<\"Solve 3\[Minus]14sin (12t + 7) =13\"\>", 
   ",", "\<\"Solve 3sec(4 \[Minus] 9z) \[Minus] 24 = 0\"\>", 
   ",", "\<\"Sketch the graph of f(x)=\\!\\(\\*SuperscriptBox[\\(3\\), \\(1 + \
2  x\\)]\\)\"\>", 
   ",", "\<\"Sketch the graph of h(x)=8+3\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2  t - 4\\)]\\)\"\>", 
   ",", "\<\"Determine the value of \\!\\(\\*SubscriptBox[\\(log\\), \\(9\\)]\
\\)(81)\"\>", 
   ",", "\<\"Determine \\!\\(\\*SubscriptBox[\\(log\\), \
\\(1/4\\)]\\)(16)\"\>", 
   ",", "\<\"Determine ln(\\!\\(\\*SuperscriptBox[\\(e\\), \\(4\\)]\\))\"\>", 
   ",", "\<\"Combine 2 \\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)x +5 \
\\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)y - 1/2 \
\\!\\(\\*SubscriptBox[\\(log\\), \\(4\\)]\\)x\"\>", 
   ",", "\<\"For the function f(x)=3(x+2\\!\\(\\*SuperscriptBox[\\()\\), \
\\(\\(2\\)\\(\\\\ \\)\\)]\\) and the point P at x=-3 find the tangent of x \
and the secant from P to Q\"\>", 
   ",", "\<\"For the function W(x)=ln(1+\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\
\\)]\\)) and the point x=1, find the secants at point Q and the tangenet line\
\"\>", ",", "\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), find the \
values at the below listed points and th limit as x aproaches 2\"\>", 
   ",", "\<\"For the function (2-(\\!\\(\\*SuperscriptBox[\\(t\\), \
\\(2\\)]\\)+3\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\))/(t+1), find the \
values at the below listed point and the limit as x approaches -1\"\>", 
   ",", "\<\"For the function f(y)= sin(y)/y find the value at the below \
listed points and the limit as y approaches 0\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771061257185913*^9, 3.7710616926667566`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"2e053673-f71a-4e88-ba52-d5e9a638f5cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQsderivs", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<For the function f(x)=(8-\!\(\*SuperscriptBox[\(x\), \
\(2\)]\))/(\!\(\*SuperscriptBox[\(x\), \(2\)]\)-4), use L'Hoptial's rule to \
find the limit as x aproaches 2\>\"", ",", "  ", 
    "\"\<For the function (2-(\!\(\*SuperscriptBox[\(t\), \
\(2\)]\)+3\!\(\*SuperscriptBox[\()\), \(1/2\)]\))/(t+1), L'Hoptial's rule to \
find the limit as x approaches -1\>\"", ",", " ", 
    "\"\<Use the definition of the derivative to find the derivative of \
f(x)=6\>\"", ",", " ", 
    "\"\<Use the definition of the derivative to find the derivative of V (t \
) = 3\[Minus]14t\>\"", ",", " ", 
    "\"\<Use the definition of the derivative to find the derivative of g(x)=\
\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", ",", " ", 
    "\"\<Use the definition of the derivative to find the derivative of \
Q(t)=(3t-4\!\(\*SuperscriptBox[\()\), \(1/2\)]\)\>\"", ",", 
    "\[IndentingNewLine]", " ", 
    "\"\<Use the definition of the derivative to find the derivative of z(n)= \
(n+1)/(n+4)\>\"", ",", "\[IndentingNewLine]", 
    "\"\<Use the chain rule to find the derivative of \
Q(t)=(3\!\(\*SuperscriptBox[\(t\), \(3\)]\)-4\!\(\*SuperscriptBox[\()\), \
\(1/2\)]\)\>\"", ",", " ", 
    "\"\<Use the quotient rule to find the derivative of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)\>\"", ",", " ", 
    "\[IndentingNewLine]", 
    "\"\<Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + 3\>\"", 
    ",", " ", 
    "\"\<Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)\>\"", 
    ",", " ", "\"\<Find the deriviative of  tan (w)sec(w)\>\"", ",", " ", 
    "\"\<Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))\>\"", ",", " ", 
    "\"\<Find the derivative of f(x)=2\!\(\*SuperscriptBox[\(e\), \(x\)]\)-\!\
\(\*SuperscriptBox[\(8\), \(x\)]\)\>\"", ",", " ", 
    "\"\<Find the derivative of g(t)=4 \!\(\*SubscriptBox[\(log\), \
\(3\)]\)(t)-ln(t)\>\"", ",", " ", 
    "\"\<Find the derivative of 2 cos(x)+arccos(x)\>\"", " ", ",", " ", 
    "\"\<Find the derivative of \!\(\*SuperscriptBox[\(x\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(y\), \(3\)]\)=1\>\"", ",", " ", 
    "\"\<Find extrema of f(x)=12+6\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(x\), \(3\)]\)\>\"", ",", " ", 
    "\"\<Find extrema of g(w)=tan (w)sec(w)\>\"", ",", " ", 
    "\"\<find the taylor expanision of g(w)=tan (w)sec(w) at w=\[Pi]/4\>\"", 
    ",", " ", 
    "\"\<Find the MacLauren Expanision of z(n)= \
(z+1\!\(\*SuperscriptBox[\()\), \(1/2\)]\)/(z+4)\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710613709186153`*^9, 3.771061384907164*^9}, {
  3.7710616124774094`*^9, 3.7710616655644417`*^9}, {3.7710617100829606`*^9, 
  3.7710618108407326`*^9}, {3.771061850599373*^9, 3.7710619681588216`*^9}, {
  3.771062006314955*^9, 3.7710621511121435`*^9}, {3.771062535101706*^9, 
  3.7710626530990715`*^9}, {3.771062685514902*^9, 3.771062905169672*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"222a3863-676a-4a91-8ed5-bf086815e19f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\
\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), use L'Hoptial's \
rule to find the limit as x aproaches 2\"\>", 
   ",", "\<\"For the function (2-(\\!\\(\\*SuperscriptBox[\\(t\\), \
\\(2\\)]\\)+3\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\))/(t+1), \
L'Hoptial's rule to find the limit as x approaches -1\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
f(x)=6\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of V \
(t ) = 3\[Minus]14t\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
g(x)=\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
Q(t)=(3t-4\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
z(n)= (n+1)/(n+4)\"\>", 
   ",", "\<\"Use the chain rule to find the derivative of \
Q(t)=(3\\!\\(\\*SuperscriptBox[\\(t\\), \\(3\\)]\\)-4\\!\\(\\*SuperscriptBox[\
\\()\\), \\(1/2\\)]\\)\"\>", 
   ",", "\<\"Use the quotient rule to find the derivative of z(n)= (z+1\\!\\(\
\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>", 
   ",", "\<\"Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3\"\>", ",", "\<\"Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)\
\"\>", ",", "\<\"Find the deriviative of  tan (w)sec(w)\"\>", 
   ",", "\<\"Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))\"\>", 
   ",", "\<\"Find the derivative of f(x)=2\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(x\\)]\\)-\\!\\(\\*SuperscriptBox[\\(8\\), \\(x\\)]\\)\"\>", 
   ",", "\<\"Find the derivative of g(t)=4 \\!\\(\\*SubscriptBox[\\(log\\), \
\\(3\\)]\\)(t)-ln(t)\"\>", 
   ",", "\<\"Find the derivative of 2 cos(x)+arccos(x)\"\>", 
   ",", "\<\"Find the derivative of \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\
\\)/\\!\\(\\*SuperscriptBox[\\(y\\), \\(3\\)]\\)=1\"\>", 
   ",", "\<\"Find extrema of f(x)=12+6\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", 
   ",", "\<\"Find extrema of g(w)=tan (w)sec(w)\"\>", 
   ",", "\<\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4\"\>", 
   ",", "\<\"Find the MacLauren Expanision of z(n)= \
(z+1\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7710629170946207`*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"08412a87-a76c-4c5a-8d57-45fbc18d5e3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQsIntegral", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) \
\[Minus]18\!\(\*SuperscriptBox[\(x\), \(2\)]\) + 7 dx\>\"", ",", " ", 
    "\"\<Find \[Integral]6\!\(\*SuperscriptBox[\(x\), \(5\)]\) dx \[Minus]18x \
+ 7\>\"", ",", " ", "\"\<Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz\>\"", 
    " ", ",", 
    "\"\<Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + x^2 + \
9\>\"", ",", " ", 
    "\"\<Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw\>\"", ",", " ", 
    "\"\<Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\[Theta] \
)] d\[Theta]\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7710629557064366`*^9, 3.771063175011337*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"82bd9a2c-9f48-402b-90c8-7cb9d90eee9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) \
\[Minus]18\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + 7 dx\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) dx \
\[Minus]18x + 7\"\>", 
   ",", "\<\"Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz\"\>", 
   ",", "\<\"Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + x^2 + 9\
\"\>", ",", "\<\"Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw\"\>", 
   ",", "\<\"Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\
\[Theta] )] d\[Theta]\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.771063176028121*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"d073b457-db9f-4056-a6f8-89c1766dd4bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calcQs", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"calcQs", ",", " ", "calcQsIntegral", ",", " ", "calcQsderivs"}], 
    "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771063178168848*^9, 3.771063202032632*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"9c835307-f52b-4c42-8b0e-c58da6c73503"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Evaluate f(x)=3-5x-2\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\) for the below values: f(0), f(x+h), f(6-t)\"\>", 
   ",", "\<\"Compute  the difrence quotient for the given function\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) \
\[Minus]18\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + 7 dx\"\>", 
   ",", "\<\"Find \[Integral]6\\!\\(\\*SuperscriptBox[\\(x\\), \\(5\\)]\\) dx \
\[Minus]18x + 7\"\>", 
   ",", "\<\"Evaluate \[Integral]z^6 + 4z^4 \[Minus] z^2 dz\"\>", 
   ",", "\<\"Determine f (x) given that f'(x) = 6x^8 \[Minus] 20x^4 + x^2 + 9\
\"\>", ",", "\<\"Find \[Integral] 2cos (w) \[Minus] sec(w) tan (w)dw\"\>", 
   ",", "\<\"Find \[Integral]12 + csc(\[Theta] ) [sin (\[Theta] ) + csc(\
\[Theta] )] d\[Theta]\"\>", 
   ",", "\<\"For the function f(x)=(8-\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\))/(\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)-4), use \
L'Hoptial's rule to find the limit as x aproaches 2\"\>", 
   ",", "\<\"For the function (2-(\\!\\(\\*SuperscriptBox[\\(t\\), \
\\(2\\)]\\)+3\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\))/(t+1), \
L'Hoptial's rule to find the limit as x approaches -1\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
f(x)=6\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of V \
(t ) = 3\[Minus]14t\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
g(x)=\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
Q(t)=(3t-4\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)\"\>", 
   ",", "\<\"Use the definition of the derivative to find the derivative of \
z(n)= (n+1)/(n+4)\"\>", 
   ",", "\<\"Use the chain rule to find the derivative of \
Q(t)=(3\\!\\(\\*SuperscriptBox[\\(t\\), \\(3\\)]\\)-4\\!\\(\\*SuperscriptBox[\
\\()\\), \\(1/2\\)]\\)\"\>", 
   ",", "\<\"Use the quotient rule to find the derivative of z(n)= (z+1\\!\\(\
\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>", 
   ",", "\<\"Find the deriviative of f (x) = 2cos(x) \[Minus] 6sec(x) + \
3\"\>", ",", "\<\"Find the deriviative of g (z) =10 tan (z) \[Minus] 2cot (z)\
\"\>", ",", "\<\"Find the deriviative of  tan (w)sec(w)\"\>", 
   ",", "\<\"Find the deriviative of R(t)=(t+ tan(t))/(1+csc(t))\"\>", 
   ",", "\<\"Find the derivative of f(x)=2\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(x\\)]\\)-\\!\\(\\*SuperscriptBox[\\(8\\), \\(x\\)]\\)\"\>", 
   ",", "\<\"Find the derivative of g(t)=4 \\!\\(\\*SubscriptBox[\\(log\\), \
\\(3\\)]\\)(t)-ln(t)\"\>", 
   ",", "\<\"Find the derivative of 2 cos(x)+arccos(x)\"\>", 
   ",", "\<\"Find the derivative of \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\
\\)/\\!\\(\\*SuperscriptBox[\\(y\\), \\(3\\)]\\)=1\"\>", 
   ",", "\<\"Find extrema of f(x)=12+6\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[\\(x\\), \\(3\\)]\\)\"\>", 
   ",", "\<\"Find extrema of g(w)=tan (w)sec(w)\"\>", 
   ",", "\<\"find the taylor expanision of g(w)=tan (w)sec(w) at \
w=\[Pi]/4\"\>", 
   ",", "\<\"Find the MacLauren Expanision of z(n)= \
(z+1\\!\\(\\*SuperscriptBox[\\()\\), \\(1/2\\)]\\)/(z+4)\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7710632027441273`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"4587e965-0b95-4170-bc92-b47d08357059"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"questionClassifier", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<algebra 1\>\"", "\[Rule]", "algebra1Questions"}], ",", " ", 
     RowBox[{"\"\<algebra 2\>\"", "\[Rule]", "algebra2Qs"}], ",", " ", 
     RowBox[{"\"\<calc\>\"", "\[Rule]", "calcQs"}]}], "|>"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771063215443462*^9, 3.7710633502457542`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"4a6c27e2-f698-4942-9e0f-b4b815b04b6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"algebra 1\"", "\"algebra 2\"", 
                    "\"calc\""}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Markov\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["101", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 101, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Text"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Text"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Fill" -> 
             "", "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Type" -> 
             "Text", "Version" -> {12., 0}, "ID" -> 7263179337424669307]], 
           MachineLearning`MLProcessor["ToLowerCase", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 8362939175913313252, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["RemoveDiacritics", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 1602110507922425163, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["TextToNominalSequence", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Forbidden", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Tokens" -> {{
               " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", "(", 
                ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", "{", "}", 
                "|", "\\", ">", "/", "~", "`", "#", "^"}, {
               ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", ":P",
                 ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
               "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
             "Version" -> {12., 0}, "ID" -> 7774961058889587341, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association["KeyHashes" -> CompressedData["
1:eJxFmUvObjkNRS8SE+AxAQaAlPdjCCXRYgg0kGjRKOYv1kqc81+qqCv7nJzE
3t7ezve3f/33n/8uf/j16/c//vr16x//+f1/v/2Vv/x9p733arvs1scedaX8
HDkl/m2pt1Z6ratdx9q9rdrHHLmXNFJrMxxrtzZWqXnUPddosz/H2qXknmbe
re49yvfGGLvNNupYq+e6++dIq3fW76mwasrzxzHy6iOtNtkSzzzHrCw0965z
FLa1e3qOtOrMqWY2UHpO++2K45ZUSxlsLrGvUT9HaRzAM6+WE1t/jrEqJ2DB
VniKTz0HcUu6eWnmlvv3RuqFM9aU2iwp7fq+wc6J4FiNF3bP5TsHJxq9EuRe
c+uc/Xsjd8I6MkFco5c6ft4gfPjyKMZl/7yROFTabZCVXEjk224jmb2nnsl2
b3XWF6u6cvMjvJEwE5fnKLX22QvB5XgjjxfEMkTCZnlCksVJODJJ4sxz57b2
YIvv4zxaeiukBYjxnb2uY5IAjr7mBEW1meZwgJ8OQjPbmWUTn/gGT/dJWF0d
9JLg8RwFT9s7Z/ANhr9vcIbKEeYuqwAXgBkO/l5rWxyAAE5yPJ8DqHu+Udkp
b/USDmLF1/Nm32xujdmeo2+QCQDZ2ppAN38OQcqLp+LW/Fkq19TnAr0gB5h+
Bywciu/kKiha/xI100x7ztTJWANeAOU6QCDfS72msnnDf58jA/PthijCufKM
bwyeL3lxtETdEsc9noNIDILVW6KWK/gLB2FvggMYAYQ8XhB5ajSrsFENMAOp
DwcYZ7Oj8Qpx6V8+QDN7BT/kvRSqc79dEeydCi4qqx+MPUedFEzfReI5vuvo
G7bCV7Ll43Hj4yCKGliEaowKRvOjJSx1AkZSSLRIyssHjlz4eCmkKC/qPD1H
EYqEZIAruS/O0dnn5A+RARVyzfu4MPe5RmgJJmH8HBlq41EA2fekqMIhW4DP
yTl6WgUieo5xEAe77NShkv12dQqNteULVoINwtHyzou6LJA81bNHJKpnKBXe
Zw8AorG79wZhPzGd0A/UTKCvg1qCqQhlneJEADzHhBIXISG+tY700A72+ISr
mBX4+OcNamxyZOIO6NKXqLZOja1UMgtBfO+ALE8KcpUWiDuFFbGC79spfTbX
oH3++hysDrvMBV1IQq9/UCzSEb5B+Cm5mj8H1NcPuwCY3st+DkBqiNgDHwGi
b1edxamz0jJ/oP36vsGfw++NGKQ6PjCwV+LRKPwmxUqAn4NaOtTDKmX3R32t
1pLpw+wsD2ogzc9B7UMNUF/ZNApILhwGD/6ZPTVokYbzPp4HrJMFeyJWi409
B7xC9+BNjg2MXnemEdDnIP7ixlr/KIPVOTQxXnY62s6jvgoOMjQmUiTe/XIu
h0HI9A+KjNcAbzgAQubpU7s0A+AeDoXELTXI3E79vmFvInNUCIAfMHp+DvA2
uzAo1Qf6226XdngpJVi5tfz4ykBR36aeXshJH+nXs38iAjx8K+dgBrNhqtka
nZ3ItOeAQQEs/6vdrUPcn2OKAj69V9rlSy0WyrNBNEQKacD2niNffMBVSSJa
cY5ymjlPu2IBDe/jIAACgMXJHWEeHDccchcihn+QZKQ/jecADNtNw7icZz0W
JTlwBYRBXNAV8N17wwDJfSBvt+JBwkGUCDbdYgguODM/B52fLACUjGAiweXH
YecAo3S83TlPOJQYaEiKE25dkvnngC8BLakbRuC1iWJCBvhnb4mYz/IchBbK
AmhonwbJPjlIgPYpQoh8oPHmt6vcYDhCAg2RP874Dgh0iaqtlvbcf1SfmSGw
DTqCtVi4BEQzZ8q3A9KkKOiHKxaHXoQJK9GoPy2a7cEUdEo0CKrqwy5UK6g2
W0KWdLnuOVCWiQWhchlgvbbNVsmdLY9H1AIvJPQl8lBUdg3NRBaeg9Jm9VoU
OBVp3/ZzyFj2ensOFPVyDrFwKgXO9ngQ6ft4hSemEU5Hin9dLYtqhQwMw8vU
3XMgwbNyD8Ylr6i4F0QOQVBZP21njfS4BAfw7ISKDjPor+kFUeW0BvSpdke9
rPIcFJK9i9ZVPSLb/YuODaDYrJKMFTlg2J1XQDq0BFOi+WnBfwmJejY6pl27
2NKu3QFDpS9hQawjnj81OlStdiF0wbOj11l8ouGJHZRRwt788CBq4BLoAqhr
ZwVgQykBaUeYdO3KX/QbVEVMKMMS++8mky6zqz0IfRz7bHa2Wu3hkIG69to5
fmP/S/53aGixfj3V7siRDQNVdu2MAZSj0liI8N3Yp5yh3qbVmACmn9/+dMWn
6GYdPk1XWNdK5CnSA/xJu+q//RkrcVRB2e5QAIXWH+bZkgaEK5qGVF0zlFYd
FFHvZBDRcsyVM1heMElx8tjXjGCEqhiLkM9NmpzXTOYxg0K7wIYTjrnbx1TE
SK4zC6Zr3mpG+ORMzBDGPmYbPWVIpwao/LekMHsWKK0LNZIXZnfIGzRDhhMA
OcM8ENdbmAINUrKuGbbOClpaOqElMMcM6pgoJ9xDfRZH5mtWEzG49iP7GKrG
MSP9iQZFoWhSm9yYMFYxUqOMh7pgg/VrNjkw2oQGySnt6GSY7DjaDAM77Od1
h52ebv9mDQdVCu7aeYyKGbL3GadTC7tSjwryA86hM9ahESKDEHTIUngTlfbs
HB9mY+19howS9qawgIOqlTwN+7Uv4444qwo3Kffaq8MVIg9WYyYnbvFdsMp3
kdtA0nkq3YrJNjwkH/iifdFtQOmxo85BM8LwKCaFa9hBhRcjqEHiBwVG3Ngi
RU83RcU1eSLsdBA2VP0wxIv52c88Vk6rag4uETcIEqRD6wxADCeWR9h3Uf1Y
JaqXdc/Ffrd7ZBA2yrTCEnZVMZXmsK0emzc+1GI/1aimR1lykLBvRb9oaPLG
iO+Wc6cxFHtNaQ1Mw95UIeOwqoK7t7BTrGiaKdfSH8v7LjMK7QKEJ7mUbcfz
1YnZSyMY0Mafw25Lr8p7hqVenF/DzgikVqiOY14l9LDzOpLeobvbJgKf2Clx
5c8RyzDXs2/vLpKjCj03W7dhh23NFxJXWtyxPnxFtVYNnMUhMezVolBqZK8c
2sphV92gG2BE72JqMGuxf8Et1V05bQY+iw3nRtgJpDszXbsKuZ7Z1nluvu96
dnqS9ZyBJ7m7ds9fUV/DKR04RD0WBSVVy2wG71Kd6z5fz6iQva2gnhxXW9in
KPSNpiJ7HYO2jiJnO9QRfK90Dzv1XOlQU2HUTPW1N1mJdo3cSiiVmmvY2f3w
joN2zbQG0Vx7P41no/Voqam06MBEgDMi/Ytt1vupsA8vpk6LoMJJQpyX5u03
jXYz9TVwTpUeCURcj9ZbwQMyNHiAsygalWK7eayHVan+cW7G6KAj7NCRL1BI
VnV7+0d1N1s2IxVj1VZ9akfDdW9BqnXcvH4YYRdj9OTiNUmSpa/d2iQZnION
MUgG75HZRQqqAwoVg56432207uEct7zHYb4M3DYVussj4g+io46oIsaf5X2i
GgXVEPt0oPRoSQnBFBDxaTQP88TkJYNSlDfOTRqZh2boO/a6WMf2fFLCW6yJ
oAs7vYmI4s6nOZa7H9SefcKLTA4N78X6gBJqI1pWXVZK1bCzQ2/MKC1VMB++
dhrDYARjp1vOmsHDjjqg7Eya5289ngeV5MQJd9n4aiip7sxD3NiXd3fCPuwW
MzRy2ircEv3CXRR7GMSAYIedYp90LuBAue+iLMtv/zKel3VEwFoo0UdQEIkM
ow9EO9URPEBX8JZun7sqajwHD8DY3oTYg5HG6Yy+x67aAZgcrcrc9O+wi1U0
E4AY3mT3HPZtt1T5QCVjfHnZ3tNzHq/1q1cld33VEBTNrhbFoki/+xlEpdlr
u4rLm4X07I4FkiUQA6Er7MT/1G+q6hyqoYb9sFtRnbDX5AXWsbsTKsnPLGeq
iPOw00Mz3oBC0suR89ib6oARn1lhS7zRX86FI9k9l6+MB/t9dyRnMyHe1aI9
6g47C3mBNM5M9HgDfMOsd2DJ6pbgT8jKC2cSosof+SlrBwNYD5GFZKJd5egX
5M5fT6g69d50gAw7jR342AObdzqRd2Zre0jyNwrwyHJhd36A4JcTvJcxEQdC
BViXs8T2tyAKOewyQFW+LosXsrl2j3O+pwqi+nbYVbXQ11AFLnvKxa2ah296
t6ZcaE9PTgHn8ERZoDEoi3sugl8dVKpSlUmiRX8h64DG6+J0VU3Ex18B0ALJ
C1OaKjvoz84M6k9R6uEhaYWdXoB0pxk516b62VXdnfa8/WFK3Xft0I4dB7h1
+3WLvLMszOcVVVKY2v+vncGfrmCp0638aaGGvZ8fLZSGaBNvG8NOUBZJg3FB
horj2Jc3f2IL7eDvYDvw402Bv95QQ3SjQYJn2L15AKLW39FUN49Mh86l6jCp
kc/sZ19Kd/qBlwPq1mv3EsBbMbZjoT09vI6k87ZiO16q1a/dCx1rmP8vxmn0
sNMzvbUk+ID3/LJx7E6ZRAfpDkRATPAkCpVnQPU405KN7doBTHZaKCokOTrW
8Xcv8dDsnlRV4AEAr3P1C3IAp1m69myrK16bTnVfiXqxmRJqEE5uSB5F9n9f
RS4+
                 "], "Values" -> None, "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {12., 0}]], "MissingCode" -> 0, 
             "Version" -> {12., 0}, "ID" -> 7567618247040909227, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Impossible", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 6706460005522195289]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association["algebra 1" -> 1, "algebra 2" -> 2, "calc" -> 3]}, 
             "MissingCode" -> 0, "Version" -> {12., 0}, "ID" -> 
             8126956889782973912, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {3}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12., 0}, "ID" -> 4000194590343313063]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "algebra 1" -> 0.3653846153846154, "algebra 2" -> 0.34615384615384615`,
         "calc" -> 0.2884615384615385]], "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "ClassPriors" -> 
      Association[
       1 -> 0.3653846153846154, 2 -> 0.34615384615384615`, 3 -> 
        0.2884615384615385], "LogCounts" -> CompressedData["
1:eJy1WU1IVFEUfs40wzgJo8FoGCEtVaSgXCXMDTKizURBMRFUTgMZQQzipkWM
0KIWRVG2yGUp5SKHyEbpxyELlFaiEUwRtCrJCoRaRFAt/N7iDIdz7n3jbC7v
vvPu+f/OOXe29Z0/lAt5nrezzvPC/9fkx+xsSyFk0kvLW0eO/00NVu40DzT9
Ti3fTYzsOjflr73xxbHCzV+pa9mNk6P9oTLWxNhw6uiLz6lNPfMrx1pXq95z
+/R8rBwdtw95IV/xxL1H7c88A7k4eem+lg58i7fP5ha+//H1luil8yldpjKc
mSxFDPiMp9ump29tMJIdOX0kP2rl5Ogl/tw5nDxaObV6Yw2qj2Qn2zjQ2t01
bl3zSmtfW/0Rz5KfMt/CVwc2x83rx5dirathf5XwxDWObN9T3MMq2ZWTHzgM
PUtNXT/ntzRW5TvFHTxDT8i148PFKzfG60z3j09v80+iLB6Cn++XA3PXy7Mx
Q3ENq6vdguaXdA7dl/KFvuf8QtehcqQ9vydc5Rcu72i8c3IGxaXskZb+U50R
g7oxc3l05uvpmOHkQ52E/13xhOYBztPiBrU7953kH9q32MYVxQnoBf8hn6T4
onnC2Y/7Hnx8/mt+ClpPJL4UX7jnoPhJ+aPvHDrzvhLbHTUXUh33uwbrWZyX
6kZQO9H8oDhJ40DKT9u+qFZ1maO39ad2H/gDf0p6ufLT4jzXN3P5yfEFrnD9
mFYvv15b5jOVg+5T/NbWEW0/qcVzrfwcnkpxAnze3jARzc/Vs/lnW/eD4gRw
K2h/r+Vnixu+nGt9i62cyGv4S7K/K27Vqj+kdNr+isaZq39c6wHXh9PvpPsG
27hDvwj/Yu7SnsfhEpWX+oPOTdI5tapTtnlk62/tnIQ4w9yHOlUqJN4d7Gus
mr+4c0AH/9G5D/WG9lMv9/cWumNJ0/l8Zenwl6SZevim5+S+ZvVcY2tfSqft
+2m8SPdY3D4Xt7WuF664QeO/1nFue09oG+9aOvSH2jjx+1bSN7nej0n2g3zr
VY/Wyy9Uf5oHwBngA+KtVnMWzU+pXkj2tb2foXxt7S3hhvZ82/tJqV5y+Cbd
L7jK49p/auNEu2+b33S+pfcnrnlqW+8onfT/mC1uc/bVyon8X8ilFx9MxE3H
3rZXT4sN1nOBK14FxVWP+f0DDUgBfw==
       "], 
      "LogNorms" -> {6.544818772311871, 6.575954951975905, 6.882058527412924},
       "VocabularyPosition" -> MachineLearning`SortedHashAssociation[
        Association["KeyHashes" -> CompressedData["
1:eJwl1Gl8CAQYBvCNjdlhbDabOTbHZuwgZxElypEj9y3kCBmVSFEilRK5VW6h
3Ec5y5EzR67cKUpylSuiqP9+Pvyf9/Pz4XmTumQ17RsYEBDwkMi+OchJEMHk
Ijch5CGUMMKJIC+R5CM/UURTgBhiKUgc8RQigcIUoSjFSCSJ4pSgJKVIJoXS
pFKGsqSRTgaZlKN8dg8qUJFKVKYKVXmYR6hGdR6lBjV5jMepxRPUpg5P8hR1
qUd9GvA0DWlEY5rwDE1pRnNa0JJWtKYNbWlHezrQkU48S2e60JXn6EZ3etCT
5+lFb/rwAn3Joh/9eZGXeJkBvMJABvEqg3mN1xnCUN7gTYbxFsMZwduM5B3e
5T1G8T4fMJoPGcNYPmIc45nARCYxmSlM5WM+4VOmMZ0ZzGQWs5nDXD5jHvNZ
wOd8wUIWsZglLGUZy1nBSlbxJV+xmjWsZR3r2cDXfMNGNrGZLXzLVraxnR3s
ZBffsZs97GUf37OfAxzkEIf5gSMc5RjHOcFJTvEjp/mJnznDWX7hV87xG+f5
nQtc5BKXucIf/MlVrnGdG9zkL25xm7+5w13+4V/ucZ//yB5/IDnISRDB5CI3
IeQhlDDCiSAvkeQjP1FEU4AYYilIHPEUIoHCFKEoxUgkieKUoCSlSCaF0qRS
hrKkkU4GmZSjfOCDP/Y/7c+GlQ==
          "], "Values" -> None, "DefaultValue" -> -1, "HashFunction" -> 
         Function[{
           MachineLearning`file152SortedHashAssociation`PackagePrivate`keys$}, 
           Switch[
           MachineLearning`file152SortedHashAssociation`PackagePrivate`keys$, {
             BlankSequence[String]}, 
            Data`StringHash[
            MachineLearning`file152SortedHashAssociation`PackagePrivate`keys$,
              "Murmur3-64"], 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 1]& ], 
            MachineLearning`file152SortedHashAssociation`PackagePrivate`keys$, 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 2]& ], 
            
            Block[{MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q}, 
             MachineLearning`file152SortedHashAssociation`PackagePrivate`q = {
                Quotient[
                MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 
                Quotient[
                 Mod[
                 MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 2^32], 
                Quotient[
                 Mod[
                 MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$, 2^32], 2^16], 
                Mod[
                MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$, 2^16]}; 
             MachineLearning`file152SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                MachineLearning`PackageScope`ToPackedArray[
                MachineLearning`file152SortedHashAssociation`PackagePrivate`q]\
, {1, 3, 2}]; 
             MachineLearning`file152SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                Flatten[
                MachineLearning`file152SortedHashAssociation`PackagePrivate`q,
                  1]]; Data`StringHash[
               FromCharacterCode[
                Abs[
                MachineLearning`file152SortedHashAssociation`PackagePrivate`q]\
], "Murmur3-64"]], 
            Blank[List], 
            Map[Switch[#, 
              Blank[String], 
              Data`StringHash[#, "Murmur3-64"], 
              PatternTest[
               Blank[], Developer`MachineIntegerQ], #, {
               PatternTest[
                BlankSequence[], Developer`MachineIntegerQ]}, 
              
              Block[{MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q}, 
               MachineLearning`file152SortedHashAssociation`PackagePrivate`q = {
                  Quotient[#, 2^48], 
                  Quotient[
                   Mod[#, 2^48], 2^32], 
                  Quotient[
                   Mod[#, 2^32], 2^16], 
                  Mod[#, 2^16]}; 
               MachineLearning`file152SortedHashAssociation`PackagePrivate`q = 
                Flatten[
                 MachineLearning`file152SortedHashAssociation`PackagePrivate`\
q]; Data`StringHash[
                 FromCharacterCode[
                  Abs[
                  MachineLearning`file152SortedHashAssociation`PackagePrivate`\
q]], "Murmur3-64"]], 
              Blank[], 
              Data`StringHash[
               StringJoin[
                ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
             MachineLearning`file152SortedHashAssociation`PackagePrivate`keys$\
]]], "Version" -> {12., 0}]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association["KeyHashes" -> CompressedData["
1:eJwl1Gl8CAQYBvCNjdlhbDabOTbHZuwgZxElypEj9y3kCBmVSFEilRK5VW6h
3Ec5y5EzR67cKUpylSuiqP9+Pvyf9/Pz4XmTumQ17RsYEBDwkMi+OchJEMHk
Ijch5CGUMMKJIC+R5CM/UURTgBhiKUgc8RQigcIUoSjFSCSJ4pSgJKVIJoXS
pFKGsqSRTgaZlKN8dg8qUJFKVKYKVXmYR6hGdR6lBjV5jMepxRPUpg5P8hR1
qUd9GvA0DWlEY5rwDE1pRnNa0JJWtKYNbWlHezrQkU48S2e60JXn6EZ3etCT
5+lFb/rwAn3Joh/9eZGXeJkBvMJABvEqg3mN1xnCUN7gTYbxFsMZwduM5B3e
5T1G8T4fMJoPGcNYPmIc45nARCYxmSlM5WM+4VOmMZ0ZzGQWs5nDXD5jHvNZ
wOd8wUIWsZglLGUZy1nBSlbxJV+xmjWsZR3r2cDXfMNGNrGZLXzLVraxnR3s
ZBffsZs97GUf37OfAxzkEIf5gSMc5RjHOcFJTvEjp/mJnznDWX7hV87xG+f5
nQtc5BKXucIf/MlVrnGdG9zkL25xm7+5w13+4V/ucZ//yB5/IDnISRDB5CI3
IeQhlDDCiSAvkeQjP1FEU4AYYilIHPEUIoHCFKEoxUgkieKUoCSlSCaF0qRS
hrKkkU4GmZSjfOCDP/Y/7c+GlQ==
                 "], "Values" -> None, "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file152SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file152SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {12., 0}]], "MissingCode" -> 0, 
             "Version" -> {12., 0}, "ID" -> 6963953490976497681, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NominalSequence", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Imputed"]], "Method" -> "Markov", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "Order" -> Association["Value" -> 0, "Options" -> Association[]], 
        "AdditiveSmoothing" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "MinimumTokenCount" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "ExcludedTokens" -> 
        Association["Value" -> {}, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[66689], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      7.4713831`8.32494599920646, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[0.8941287284349644, 0.13710911608966855`], "Accuracy" -> 
         Around[0.815270758699975, 0.02641353583385893], "EvaluationTime" -> 
         0.0003846498279365144, "TestSize" -> 280, "ModelMemory" -> 
         44418.66666666666, "ModelUtility" -> -0.6114675086815543, 
         "TrainingSize" -> 81, "TrainingTime" -> 0.02190555493828043, 
         "TrainingMemory" -> 186146.66666666666`, "ExperimentCount" -> 14, 
         "MeanCrossEntropyHistory" -> {
           Around[0.4770483185606176, 0.207970271596814], 
           Around[1.2474410979754185`, 0.58579602553463], 
           Around[0.35444607909910386`, 0.13408082006219976`], 
           Around[0.48200668819879355`, 0.1818980611287122], 
           Around[1.9463982522851326`, 0.7370141245257761], 
           Around[0.6508589339242223, 0.34808239395144314`], 
           Around[1.0840577898586918`, 0.6103141311113562], 
           Around[0.3570013683089648, 0.11546122353937333`], 
           Around[1.214572797568873, 0.5121564579147296], 
           Around[1.0661613366906109`, 0.5119671162886844], 
           Around[0.7457948734020047, 0.37629718639277426`], 
           Around[1.0270088340279344`, 0.4762899039367274], 
           Around[1.282934270017801, 0.6317293388641925], 
           Around[0.5820715581713325, 0.2162116041348601]}, "AccuracyHistory" -> {
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.8730938879516756, 0.08201736893281816], 
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.7302367450945326, 0.10250463271450325`], 
           Around[0.7778557927135803, 0.09727816894766442], 
           Around[0.8730938879516756, 0.08201736893281816], 
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.7778557927135803, 0.09727816894766442], 
           Around[0.7778557927135803, 0.09727816894766442], 
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.8254748403326279, 0.09057000154605613], 
           Around[0.8254748403326279, 0.09057000154605613]}, 
         "Configuration" -> {
          "Markov", "Order" -> Automatic, "AdditiveSmoothing" -> 0.1, 
           "MinimumTokenCount" -> Automatic, "ExcludedTokens" -> {}}, 
         "FinalTrainingSize" -> 101], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 14], 
          TypeSystem`Vector[TypeSystem`AnyType, 14], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 4647328140034]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "Markov", "Options" -> 
           Association[
            "Order" -> Association["Value" -> Automatic], "AdditiveSmoothing" -> 
             Association["Value" -> 0.1], "MinimumTokenCount" -> 
             Association["Value" -> Automatic], "ExcludedTokens" -> 
             Association["Value" -> {}]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.0720240170929523`, 0.5286978870475653], "Accuracy" -> 
              Around[0.613045651114772, 0.05651237274024238], 
              "EvaluationTime" -> 0.00023200724592661382`, "TestSize" -> 258, 
              "ModelMemory" -> 36824., "ModelUtility" -> -1.4714617092889322`,
               "TrainingSize" -> 15, "TrainingTime" -> 0.017085858085482596`, 
              "TrainingMemory" -> 94400., "ExperimentCount" -> 3, 
              "MeanCrossEntropyHistory" -> {
                Around[2.9510542726017555`, 0.5412456348170234], 
                Around[1.2267185753857694`, 0.22586727711552998`], 
                Around[2.038299203291333, 0.3376410635003997]}, 
              "AccuracyHistory" -> {
                Around[0.5440801338733928, 0.05378979740177696], 
                Around[0.7049996741032776, 0.049536776330405756`], 
                Around[0.5900571453676458, 0.05318391648901539]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.8941287284349644, 0.13710911608966855`], "Accuracy" -> 
              Around[0.815270758699975, 0.02641353583385893], 
              "EvaluationTime" -> 0.0003846498279365144, "TestSize" -> 280, 
              "ModelMemory" -> 44418.66666666666, 
              "ModelUtility" -> -0.6114675086815543, "TrainingSize" -> 81, 
              "TrainingTime" -> 0.02190555493828043, "TrainingMemory" -> 
              186146.66666666666`, "ExperimentCount" -> 14, 
              "MeanCrossEntropyHistory" -> {
                Around[0.4770483185606176, 0.207970271596814], 
                Around[1.2474410979754185`, 0.58579602553463], 
                Around[0.35444607909910386`, 0.13408082006219976`], 
                Around[0.48200668819879355`, 0.1818980611287122], 
                Around[1.9463982522851326`, 0.7370141245257761], 
                Around[0.6508589339242223, 0.34808239395144314`], 
                Around[1.0840577898586918`, 0.6103141311113562], 
                Around[0.3570013683089648, 0.11546122353937333`], 
                Around[1.214572797568873, 0.5121564579147296], 
                Around[1.0661613366906109`, 0.5119671162886844], 
                Around[0.7457948734020047, 0.37629718639277426`], 
                Around[1.0270088340279344`, 0.4762899039367274], 
                Around[1.282934270017801, 0.6317293388641925], 
                Around[0.5820715581713325, 0.2162116041348601]}, 
              "AccuracyHistory" -> {
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.8730938879516756, 0.08201736893281816], 
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.7302367450945326, 0.10250463271450325`], 
                Around[0.7778557927135803, 0.09727816894766442], 
                Around[0.8730938879516756, 0.08201736893281816], 
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.7778557927135803, 0.09727816894766442], 
                Around[0.7778557927135803, 0.09727816894766442], 
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.8254748403326279, 0.09057000154605613], 
                Around[0.8254748403326279, 0.09057000154605613]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0003846498279365144, "MeanCrossEntropy" -> 
             Around[0.8941287284349644, 0.13710911608966855`], "ModelMemory" -> 
             44418.66666666666, "TrainingMemory" -> 186146.66666666666`, 
             "TrainingTime" -> 0.039210468573145835`], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 4643033172738]], "MaxTrainingSize" -> 101, 
      "PreprocessorEvaluationTime" -> 6.7138395774357`2.*^-6, 
      "PreprocessorMemory" -> 31096, "InputDimension" -> Rational[111, 5], 
      "OutputDimension" -> 1, "BaselineLogProbability" -> -1.093709386603995, 
      "VariableBudget" -> True, "CheckpointingInfo" -> 
      Association["Checkpointing" -> False], "UserStop" -> False, 
      "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.771048961924776`17.329037160323388*^9, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 15, "TimeBudgets" -> 0.16437042820000003`, 
          "ElapsedTimes" -> 0.5523965, "ExperimentCounts" -> 3], 
         Association[
         "TrainingSizes" -> 81, "TimeBudgets" -> 0.8218521409999999, 
          "ElapsedTimes" -> 0.8025682, "ExperimentCounts" -> 14]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[4651623107330]], "ID" -> 4655918074626]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Text", "Weight" -> 1, 
           "Values" -> {"Plot 1.25, 2/3 and 2 on a number line"}, "ID" -> 
           1638824798713428667]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 2.424936013402118, 
      "MaxTrainingMemory" -> 16413624, "DataMemory" -> 10712, 
      "FunctionMemory" -> 147904, "LanguageVersion" -> {12., 0}, "Date" -> 
      DateObject[{2019, 7, 2, 9, 36, 2.2860326`8.111657403070875}, "Instant", 
        "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.77106336236709*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"bc1d0477-afe2-472a-921f-c3c3483bfd6b"]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 315, 7, 28, "Input",ExpressionUUID->"d8080331-3884-41e3-a9b8-483a4eefee11"],
Cell[898, 31, 307, 8, 32, "Output",ExpressionUUID->"21329dcc-e6da-470c-84a8-6a36016e3d22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242, 44, 282, 6, 28, "Input",ExpressionUUID->"379c9f38-0152-4658-9aaa-fb297370a64c"],
Cell[1527, 52, 251, 7, 32, "Output",ExpressionUUID->"7beb424a-8043-4f13-bab3-10cdaa9a1a0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1815, 64, 333, 8, 28, "Input",ExpressionUUID->"57844fb0-228a-49b0-b92d-dc2d3e5913f9"],
Cell[2151, 74, 184, 4, 32, "Output",ExpressionUUID->"2088e1a6-4f92-4e88-bdc3-962f2aeef324"]
}, Open  ]],
Cell[2350, 81, 1092, 23, 48, "Input",ExpressionUUID->"ca103606-2001-4c22-95d6-7f6812162636"],
Cell[3445, 106, 392, 7, 28, "Input",ExpressionUUID->"327492a1-5562-407b-ad9f-9f3d81f65ef7"],
Cell[3840, 115, 180, 4, 28, "Input",ExpressionUUID->"c0d88217-4674-41ff-b96b-6296a8aa3712"],
Cell[CellGroupData[{
Cell[4045, 123, 327, 8, 28, "Input",ExpressionUUID->"fd86d2db-90e5-48aa-be3e-c2a178ae623f"],
Cell[4375, 133, 208, 4, 32, "Output",ExpressionUUID->"cd28df79-b33e-4b1f-b2b7-73206d0cc681"]
}, Open  ]],
Cell[4598, 140, 154, 3, 28, "Input",ExpressionUUID->"be88db5b-6c33-4813-b4ef-96e5eba24bbb"],
Cell[4755, 145, 498, 13, 28, "Input",ExpressionUUID->"290df51f-42d1-453c-8405-7019b78ac303"],
Cell[5256, 160, 154, 3, 28, "Input",ExpressionUUID->"e39348c0-d198-4de1-bacf-0f006e66bab1"],
Cell[CellGroupData[{
Cell[5435, 167, 655, 12, 105, "Input",ExpressionUUID->"d5556197-0257-4b55-ac11-67cf3d84fa35"],
Cell[6093, 181, 8854, 229, 92, "Output",ExpressionUUID->"2ae5ee6f-cd25-4794-8859-b96431d0cb3a"]
}, Open  ]],
Cell[14962, 413, 601, 12, 105, "Input",ExpressionUUID->"36d4ada3-9de4-4fe8-9564-16b385821ace"],
Cell[CellGroupData[{
Cell[15588, 429, 493, 10, 86, "Input",ExpressionUUID->"53b94c62-a924-4c28-8c9a-87e4eb51b9a0"],
Cell[16084, 441, 364, 9, 21, "Message",ExpressionUUID->"dbe2cb6e-facc-4c93-b1c6-e9a3524f9f36"],
Cell[16451, 452, 364, 9, 21, "Message",ExpressionUUID->"5b6f405d-83de-4b28-83e2-f41b86fd00cf"],
Cell[16818, 463, 363, 9, 21, "Message",ExpressionUUID->"e76771e1-18d9-4315-a79d-1d85eb8dd156"],
Cell[17184, 474, 444, 10, 21, "Message",ExpressionUUID->"3e8933cc-3ac4-4ecc-8b2c-0c62f1934297"],
Cell[17631, 486, 157, 2, 32, "Output",ExpressionUUID->"ec94d3f8-6614-4085-9cb8-5c728e2407c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17825, 493, 776, 14, 75, "Input",ExpressionUUID->"2333ef13-77fd-4cdf-b6bd-0173171dc2ca"],
Cell[18604, 509, 605, 11, 59, "Output",ExpressionUUID->"1465c286-3d7d-449d-ac64-1641b5b5a6c9"]
}, Open  ]],
Cell[19224, 523, 585, 12, 86, "Input",ExpressionUUID->"2d263997-c8cc-4cfe-a7ea-3727e1faf43b"],
Cell[CellGroupData[{
Cell[19834, 539, 1599, 39, 190, InheritFromParent,ExpressionUUID->"6c60326b-e42a-4217-9c4b-5a627cce92a1"],
Cell[21436, 580, 512, 10, 71, "Output",ExpressionUUID->"13a45433-da7c-48b3-b716-61b7e0f7a0b0"],
Cell[21951, 592, 528, 11, 59, "Output",ExpressionUUID->"15d20242-de08-421f-8f19-eb8816fdbd45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22516, 608, 514, 10, 55, "Input",ExpressionUUID->"a7ae84c8-e77e-4163-a09b-03f6288de0b4"],
Cell[23033, 620, 451, 9, 59, "Output",ExpressionUUID->"c46b8fac-bc63-49f3-9a12-0c8b86036468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23521, 634, 463, 10, 32, "Input",ExpressionUUID->"965f7365-78f2-4e84-8c81-fb88f95c8219"],
Cell[23987, 646, 350, 8, 36, "Output",ExpressionUUID->"eb1ce775-5664-429a-8237-d494f846fade"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24374, 659, 337, 8, 28, "Input",ExpressionUUID->"e9cacc85-48d6-4d31-ab94-5d755d539cc0"],
Cell[24714, 669, 260, 6, 32, "Output",ExpressionUUID->"fd4a51a0-cb2d-4f9b-95bf-0ecd1af517b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25011, 680, 518, 11, 32, "Input",ExpressionUUID->"7421c56f-d5af-4df6-8034-ece5d5384058"],
Cell[25532, 693, 409, 8, 36, "Output",ExpressionUUID->"6dcd3860-f6a5-4f5b-b636-09856545ebe3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25978, 706, 876, 15, 162, "Input",ExpressionUUID->"e86a1b17-fc00-41b9-8941-ba78eb4e043a"],
Cell[26857, 723, 800, 13, 166, "Output",ExpressionUUID->"6e4264d6-04df-4787-9c89-e51e66f25b13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27694, 741, 570, 12, 67, "Input",ExpressionUUID->"5d0e39cd-11b1-4595-aeb9-0fdbd16ece9d"],
Cell[28267, 755, 2699, 46, 383, "Output",ExpressionUUID->"fb6119d6-ebe5-4971-b9f6-d22179b7c088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31003, 806, 154, 3, 28, "Input",ExpressionUUID->"1760b367-3e57-4f97-81ef-1f5ac4d411d5"],
Cell[31160, 811, 515, 11, 21, "Message",ExpressionUUID->"00f0af5d-2c9a-470a-8c19-82c2f0e27c0c"],
Cell[31678, 824, 8979, 233, 92, "Output",ExpressionUUID->"c6ef9c07-65d2-4d97-8118-c73657de2b6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40694, 1062, 261, 5, 28, "Input",ExpressionUUID->"2a472862-58b0-4b0f-803a-4e77b423fc29"],
Cell[40958, 1069, 9773, 245, 150, "Output",ExpressionUUID->"f0fa8df0-bad5-426d-95fe-576d376f8cc3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50768, 1319, 365, 9, 28, "Input",ExpressionUUID->"3eb571b7-d401-4b9c-b389-6b9984e7cec4"],
Cell[51136, 1330, 9962, 250, 150, "Output",ExpressionUUID->"99cc9495-b2de-4866-8ae2-911cd3c854a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61135, 1585, 344, 6, 28, "Input",ExpressionUUID->"d0dbf12a-c39a-4ca3-a5e6-bad8d5325af4"],
Cell[61482, 1593, 8127, 211, 470, "Output",ExpressionUUID->"a5052fe3-61c5-4c70-b925-e0b3d85b4989"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69646, 1809, 229, 4, 28, "Input",ExpressionUUID->"18ea2485-4bf9-4e7f-b32b-cee37ff6fa97"],
Cell[69878, 1815, 177, 4, 32, "Output",ExpressionUUID->"5235aad1-c553-4a75-bf62-7add5433e184"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70092, 1824, 621, 16, 28, "Input",ExpressionUUID->"9727eebb-e54d-4181-ac82-9062755a35c4"],
Cell[70716, 1842, 743, 13, 52, "Output",ExpressionUUID->"67f6d6bd-4bc4-45ee-b84e-6101f261af05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71496, 1860, 184, 3, 28, "Input",ExpressionUUID->"ccc1bba4-6162-4c1a-9594-9a244047aa85"],
Cell[71683, 1865, 531, 10, 32, "Output",ExpressionUUID->"16a0f908-e7d3-4daf-8259-b406181b3899"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72251, 1880, 326, 7, 28, "Input",ExpressionUUID->"a315aa41-887f-4376-b5a7-9f6614771663"],
Cell[72580, 1889, 362, 7, 32, "Output",ExpressionUUID->"8a987b53-a802-4e6b-8a9c-5f2d5e4cbab6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72979, 1901, 2981, 50, 455, "Input",ExpressionUUID->"82a03de3-0e12-4c59-bb42-528749c4d97e"],
Cell[75963, 1953, 2611, 44, 421, "Output",ExpressionUUID->"5fb90799-a6c9-456e-bfdd-bee4e6020314"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78611, 2002, 3023, 50, 480, "Input",ExpressionUUID->"a376c96d-0f17-43df-a243-6359725f0331"],
Cell[81637, 2054, 2837, 47, 407, "Output",ExpressionUUID->"2e053673-f71a-4e88-ba52-d5e9a638f5cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84511, 2106, 3026, 52, 400, "Input",ExpressionUUID->"222a3863-676a-4a91-8ed5-bf086815e19f"],
Cell[87540, 2160, 2589, 44, 403, "Output",ExpressionUUID->"08412a87-a76c-4c5a-8d57-45fbc18d5e3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90166, 2209, 824, 16, 101, "Input",ExpressionUUID->"82bd9a2c-9f48-402b-90c8-7cb9d90eee9e"],
Cell[90993, 2227, 748, 13, 82, "Output",ExpressionUUID->"d073b457-db9f-4056-a6f8-89c1766dd4bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91778, 2245, 340, 8, 28, "Input",ExpressionUUID->"9c835307-f52b-4c42-8b0e-c58da6c73503"],
Cell[92121, 2255, 3367, 56, 489, "Output",ExpressionUUID->"4587e965-0b95-4170-bc92-b47d08357059"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95525, 2316, 496, 11, 48, "Input",ExpressionUUID->"4a6c27e2-f698-4942-9e0f-b4b815b04b6b"],
Cell[96024, 2329, 48658, 951, 104, "Output",ExpressionUUID->"bc1d0477-afe2-472a-921f-c3c3483bfd6b"]
}, Open  ]]
}
]
*)

