(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29945,        724]
NotebookOptionsPosition[     24995,        631]
NotebookOutlinePosition[     25808,        658]
CellTagsIndexPosition[     25765,        655]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Auto-grader for Open Ended Math Problems", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.7711720965197573`*^9, 
  3.7711721331409063`*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Determining Equivalent Responses and Classifying \
Problems for Proper Evaluation of student response", "Subtitle"]], \
"Subsection",
 CellChangeTimes->{{3.771173899722823*^9, 
  3.771173957890514*^9}},ExpressionUUID->"1d58c7a6-305f-4f13-a0bf-\
079cc50c5197"],

Cell["\<\
Silas Kurt Grossberndt
Robert Nachbar\t\
\>", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.7711721352654243`*^9, 
  3.7711721450218525`*^9}, {3.7711721799526906`*^9, 
  3.771172194762488*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Abstract", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.771173965404864*^9, 
  3.7711739670540276`*^9}},ExpressionUUID->"fb710aff-fd2a-4bf1-b831-\
4e6dc439ea7e"],

Cell["\<\
\tIn order to automatically grade student problems one must identify the \
scope and level of the problem and then define equivalent answers appropriate \
to the context of the question and knowledge of the student. To this end, we \
first train a Neural Network Classifier on a data set of problems in Algebra \
1, Algebra 2 and Calculus. Then, using a combination of rule based checks and \
the theorem prover, we define equivalent answers, then check that particular \
rules were not used in order to maintain equivalence at the level of the \
student to prevent cheating. All of this is then packaged in a GUI for \
understandability.
\
\>", "Text",
 CellChangeTimes->{{3.7711739725879726`*^9, 3.7711739738638678`*^9}, {
  3.771244445794286*^9, 3.7712444735330987`*^9}, {3.771244539605034*^9, 
  3.7712445402464895`*^9}, {3.771244649090232*^9, 3.7712446661133833`*^9}, {
  3.771269184164607*^9, 3.7712692401980762`*^9}, {3.771340769159478*^9, 
  3.7713409267381706`*^9}},ExpressionUUID->"6850a510-9bfe-4287-82fb-\
db29f6231abd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7711741113910217`*^9, 3.7711741207957067`*^9}, {
  3.7712436487683716`*^9, 
  3.7712436495369067`*^9}},ExpressionUUID->"29fe6de1-60da-4abd-95c9-\
87e187494597"],

Cell["\<\
\tWhen providing questions to students online, the teacher is often left with \
a dilemma. Do  you give the student a multiple choice problem that fails to \
properly test their ability by allowing guessing, or do you give them a long \
answer that will only accept one correct answer, when there might be multiple \
equivalent answers? To add in all possible answers would be an onerous task, \
thus it would be preferable to have the system automatically identify all \
possible answers. However, this presents a challenge in its own right. How \
does one limit the possible answers to those that the student would have \
reached based on the level of their knowledge, and how does one deal with \
problems that may limit the scope of the equivalent answers? To this end, we \
define a two part problem: classification of the problem\[CloseCurlyQuote]s \
level and scope and cross checking for equivalent answers. \
\>", "Text",
 CellChangeTimes->{{3.7712436544283943`*^9, 3.7712438403198633`*^9}, {
  3.771243886032352*^9, 3.771243902212438*^9}, {3.7712439551334553`*^9, 
  3.7712440887394133`*^9}, {3.771244328275838*^9, 
  3.771244412236452*^9}},ExpressionUUID->"49e65a25-d76b-4675-9ee7-\
b3dec955efca"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classifying and Identifying Problems", "Section",
 CellChangeTimes->{{3.7711740024964304`*^9, 3.7711740212849846`*^9}, {
  3.7711740909134617`*^9, 3.7711740925086126`*^9}, {3.7711741231543927`*^9, 
  3.771174139326933*^9}, {3.7711741749472485`*^9, 
  3.771174176844597*^9}},ExpressionUUID->"604618ba-ba87-4456-819f-\
37415c3c8c36"],

Cell[CellGroupData[{

Cell["Classifying Questions to determine the level of the problem", \
"Subsection",
 CellChangeTimes->{{3.77117418041912*^9, 
  3.771174203128262*^9}},ExpressionUUID->"b1b516ac-247d-4f4f-b944-\
4938f1218eb3"],

Cell["\<\
\tThe problem of classification is often solved by machine learning \
techniques trained on large data sets. In this case, I retrained a series of \
models in the Wolfram language \[OpenCurlyDoubleQuote]Classify\
\[CloseCurlyDoubleQuote] function on a 1800 question data set in algebra 1, 2 \
 and calculus, grouping all the problems and providing the problems and \
groupings to the network, i.e. training in a supervised manner. Then, the \
accuracy of each model was tested by comparing the probability of \
identification as the proper grouping to the highest probability of the other \
two groups, using: \
\>", "Text",
 CellChangeTimes->{{3.771360614249292*^9, 3.771360853478378*^9}, {
  3.7713609501170626`*^9, 3.77136095740224*^9}, {3.7713609963613443`*^9, 
  3.7713610535770082`*^9}, {3.771531159227545*^9, 3.7715313160370145`*^9}, {
  3.7715848853388605`*^9, 
  3.771584888069783*^9}},ExpressionUUID->"462f756c-54f5-4530-865a-\
bc0d509c817d"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "questionClassifier", "]"}], "\[IndentingNewLine]", 
   RowBox[{"questionClassifier", "=", 
    RowBox[{"Classify", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<algebra 1\>\"", "\[Rule]", "algebra1Questions"}], ",", 
        " ", 
        RowBox[{"\"\<algebra 2\>\"", "\[Rule]", "algebra2Qs"}], ",", 
        RowBox[{"\"\<calc\>\"", "\[Rule]", "calcQs"}]}], "|>"}], " ", ",", 
      " ", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"calcIsCalc", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"calcQs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<calc\>\""}], "}"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"calcIsAlgebra1", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"calcQs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 1\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"calcIsAlgebra2", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"calcQs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 2\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algebra1IsCalc", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"algebra1Questions", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<calc\>\""}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algebra1IsAlgebra1", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"algebra1Questions", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 1\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algebra1IsAlgebra2", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"algebra1Questions", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 2\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algebra2IsCalc", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"algebra2Qs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<calc\>\""}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algebra2IsAlgebra1", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"algebra2Qs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 1\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"algebra2IsAlgebra2", "=", 
     RowBox[{"questionClassifier", "[", 
      RowBox[{"algebra2Qs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Probability\>\"", ",", " ", "\"\<algebra 2\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "calcIsCalc", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
        "/", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
          "calcIsAlgebra1", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "calcIsAlgebra2", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}]}], "]"}]}], "\[IndentingNewLine]", "&"}],
       "/", 
      RowBox[{"Range", "[", "600", "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Training Set\>\"", ",", "\"\<Ratio of Probaility\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Correct Identification as Calculus\>\""}]}], "]"}], "\n", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "algebra1IsAlgebra1", "\[LeftDoubleBracket]", "#", 
         "\[RightDoubleBracket]"}], "/", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
          "algebra1IsCalc", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "algebra1IsAlgebra2", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}]}], "]"}]}], "\n", "&"}], "/", 
      RowBox[{"Range", "[", "600", "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Training Set\>\"", ",", "\"\<Ratio of Probaility\>\""}], 
       "}"}]}], ",", " ", "\n", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Correct Identification as Algebra 1\>\""}]}], "]"}], "\n", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "algebra2IsAlgebra2", "\[LeftDoubleBracket]", "#", 
         "\[RightDoubleBracket]"}], "/", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
          "algebra2IsAlgebra1", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "algebra2IsCalc", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}]}], "]"}]}], "\n", "&"}], "/", 
      RowBox[{"Range", "[", "600", "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Training Set\>\"", ",", "\"\<Ratio of Probaility\>\""}], 
       "}"}]}], ",", " ", "\n", 
     RowBox[{
     "PlotLabel", "\[Rule]", " ", 
      "\"\<Correct Identification as Algebra 2\>\""}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7711580435433702`*^9, 3.7711581045325623`*^9, {3.771158178293239*^9, 
   3.7711582669439397`*^9}, {3.7711583616162257`*^9, 
   3.7711584535961103`*^9}, {3.7711585350279884`*^9, 
   3.7711585464551077`*^9}, {3.7711585872250843`*^9, 
   3.7711585886280823`*^9}, {3.7711725238773365`*^9, 
   3.7711725272497325`*^9}, {3.7711727585554667`*^9, 3.771172776237033*^9}, {
   3.7714257394225016`*^9, 3.771425753421451*^9}, 3.771426588098028*^9, {
   3.7714927024485207`*^9, 3.771492731646558*^9}, {3.7715385045415397`*^9, 
   3.7715385322174683`*^9}, {3.771577831585643*^9, 3.7715778536929884`*^9}, {
   3.771580275496066*^9, 3.7715802930984945`*^9}, {3.7715847314232025`*^9, 
   3.7715847430035048`*^9}, {3.771584823752906*^9, 3.771584826146615*^9}, 
   3.7715848576086855`*^9, 3.7716690929840384`*^9, {3.7716691569470468`*^9, 
   3.7716691631034513`*^9}, 
   3.7716691934700003`*^9},ExpressionUUID->"6375fe16-c12b-4856-85ad-\
d3e811ac366b"],

Cell["\<\

\tAll models were given the \[OpenCurlyDoubleQuote]Quality\
\[CloseCurlyDoubleQuote] goal to improve accuracy at the cost of training \
time, as the training is taking place ahead of time, and the system is not \
retrained live. \
\>", "Text",
 CellChangeTimes->{{3.771360614249292*^9, 3.771360853478378*^9}, {
   3.7713609501170626`*^9, 3.77136095740224*^9}, {3.7713609963613443`*^9, 
   3.7713610535770082`*^9}, {3.771531159227545*^9, 3.7715313082565002`*^9}, {
   3.771531344530723*^9, 3.771531361863578*^9}, {3.7715845787942457`*^9, 
   3.771584593023838*^9}, {3.7715860667123327`*^9, 3.7715860727546263`*^9}, 
   3.771666537913271*^9},ExpressionUUID->"2121fcad-089f-41b2-bcbb-\
f0213cf65723"],

Cell["Automatic", "Subsubsection",
 CellChangeTimes->{{3.771360881674418*^9, 
  3.771360888543313*^9}},ExpressionUUID->"53e17a2e-e812-46d2-a2ae-\
57a8cce8642b"],

Cell["Neural Network", "Subsubsection",
 CellChangeTimes->{{3.7711743222709503`*^9, 
  3.771174325800459*^9}},ExpressionUUID->"e7c1494e-c535-46cd-bc14-\
5791bf096e9b"],

Cell["Naive Bayesian Model", "Subsubsection",
 CellChangeTimes->{{3.7711743360649357`*^9, 
  3.7711743418020124`*^9}},ExpressionUUID->"5ac55906-849b-4d52-b10d-\
d033f55accf5"],

Cell["Random Forrest", "Subsubsection",
 CellChangeTimes->{{3.771174350426152*^9, 3.7711743758712363`*^9}, {
  3.7713608648744774`*^9, 
  3.7713608952050514`*^9}},ExpressionUUID->"7c53b2cf-883f-4172-b7d6-\
cb2708dd7fb3"],

Cell["Support Vector Machine", "Subsubsection",
 CellChangeTimes->{{3.771360899545119*^9, 
  3.771360905842594*^9}},ExpressionUUID->"f153968f-db5c-4c67-bf92-\
1f286a9e7819"],

Cell["Gradient Descent ", "Subsubsection",
 CellChangeTimes->{{3.7713609297966194`*^9, 
  3.771360934490956*^9}},ExpressionUUID->"097eb12d-eea5-4027-b918-\
f4d4ee033ce3"],

Cell["Nearest Neighbor ", "Subsubsection",
 CellChangeTimes->{{3.771360941657049*^9, 
  3.7713609463714*^9}},ExpressionUUID->"0323e150-e97b-4ffb-bd5c-9f27dfd38eb3"],

Cell[CellGroupData[{

Cell["Logistic ", "Subsubsection",
 CellChangeTimes->{{3.771361063135805*^9, 
  3.7713610647479553`*^9}},ExpressionUUID->"cc7d4999-d1a2-42f7-9373-\
9f3f47eea3a9"],

Cell["", "Text",
 CellChangeTimes->{{3.7715313694279537`*^9, 3.7715314092742815`*^9}, {
   3.7715314506467466`*^9, 3.7715314775173893`*^9}, 
   3.771666548069639*^9},ExpressionUUID->"a1ae7a9c-7904-4514-9f7f-\
9af85e0a34a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying the Context of the Problem", "Subsection",
 CellChangeTimes->{{3.771174209064497*^9, 3.7711742243453393`*^9}, {
  3.771666554210363*^9, 
  3.7716665555228634`*^9}},ExpressionUUID->"6b6beba0-b5c4-4022-8b92-\
3a006474990c"],

Cell["\<\
The context of the problem, however, does not get captured by the classifier \
above. The classifier simply finds the level, meanwhile the context, for \
example, would be \[OpenCurlyDoubleQuote]write your answer as a simplified \
fraction\[CloseCurlyDoubleQuote]. These contexts are identified via pattern \
matching. These rules are then used to assign a specific tag: 
\
\>", "Text",
 CellChangeTimes->{{3.7716665572103863`*^9, 3.7716667852078557`*^9}, 
   3.7716668763832955`*^9},ExpressionUUID->"d24fc404-17a4-4bcf-87b9-\
67a5ed820cfe"],

Cell[TextData[Cell[BoxData[GridBox[{
   {"Value", "Meaning"},
   {"0", 
    RowBox[{"No", " ", "Context", " ", "Restrictions"}]},
   {"1", 
    RowBox[{"Simplest", " ", "Form", " ", "Fraction"}]},
   {"2", 
    RowBox[{"Decimal", " ", "Representation"}]},
   {"3", 
    RowBox[{"A", " ", "set", " ", "of", " ", "Points"}]},
   {"4", "Calculus"},
   {"5", 
    RowBox[{
    "A", " ", "set", " ", "of", " ", "Points", " ", "of", " ", "Simplest", 
     " ", "Fractions"}]},
   {"6", 
    RowBox[{
    "A", " ", "set", " ", "of", " ", "Points", " ", "in", " ", "Decimal"}]},
   {"7", 
    RowBox[{"Mixed", " ", "Number"}]},
   {"8", 
    RowBox[{"Improper", " ", "Fraction"}]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, 
    "Rows" -> {{
      True}}}]],ExpressionUUID->"8dbb4e46-09a3-464a-bfea-f21e0488317a"]], \
"Text",
 CellChangeTimes->{
  3.7716672185260887`*^9},ExpressionUUID->"02e5237a-6632-478d-84b0-\
b3694f818789"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying Equivalent Responses ", "Section",
 CellChangeTimes->{{3.7711741480691376`*^9, 3.7711741664782295`*^9}, 
   3.771174230500715*^9},ExpressionUUID->"0c299d7e-52e9-44a4-bfe4-\
741a5a8dfb7a"],

Cell["\<\
In order to provide a more robust and deployable version of the autograder, \
the identification of context and equivalent responses are handled in a new \
package, \[OpenCurlyDoubleQuote]Math Autograder\[CloseCurlyDoubleQuote]. \
\>", "Text",
 CellChangeTimes->{{3.771445318553315*^9, 
  3.7714454350941286`*^9}},ExpressionUUID->"531fa7ce-50d9-4145-8254-\
5fbc6fcb731c"],

Cell[CellGroupData[{

Cell["Rule Based Identification", "Subsection",
 CellChangeTimes->{{3.7711742363498726`*^9, 3.77117424657514*^9}, {
  3.77166725335468*^9, 
  3.771667261089161*^9}},ExpressionUUID->"c45ad82d-dd33-4013-a3c2-\
d0791d4a3802"],

Cell["\<\
In order to perform checks on the context restricted identification, one \
performs the following for tags 1,2,7 and 8:\
\>", "Text",
 CellChangeTimes->{{3.771667264229828*^9, 3.7716672665267267`*^9}, {
  3.771668237650647*^9, 3.771668243260042*^9}, {3.7716682734636173`*^9, 
  3.7716683202332487`*^9}},ExpressionUUID->"9b154555-ec65-4193-88ee-\
c49143418f7e"],

Cell["\<\
And for tags 5 and 6, one does the following to check if the data are \
equivalent except for ordering of the points:\
\>", "Text",
 CellChangeTimes->{{3.771667264229828*^9, 3.7716672665267267`*^9}, {
  3.771668237650647*^9, 3.771668243260042*^9}, {3.7716682734636173`*^9, 
  3.7716683620619793`*^9}, {3.7716684712861056`*^9, 
  3.7716684899270425`*^9}},ExpressionUUID->"416cb0d8-0e07-4d11-bb87-\
ee1d01834797"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theorem Prover Based Identification", "Subsection",
 CellChangeTimes->{{3.7711742502477584`*^9, 
  3.7711742678552694`*^9}},ExpressionUUID->"c273f908-ffe4-4ebb-abba-\
870efb3ad9b2"],

Cell["\<\
In the majority of cases, the first test is still rule based:\
\>", "Text",
 CellChangeTimes->{{3.771667316968639*^9, 
  3.771667366505001*^9}},ExpressionUUID->"92bc0b89-8053-40f4-ae89-\
60fd478f0ad8"],

Cell["\<\
In order to reject answers that would give false positive, or answers that \
would be beyond the level of the student, we also implement the theorem \
prover:\
\>", "Text",
 CellChangeTimes->{{3.771667316968639*^9, 3.771667452275161*^9}, 
   3.7716684988490267`*^9},ExpressionUUID->"76fab179-5cb6-4009-964b-\
8df3886909fc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.77117416970951*^9, 
  3.771174171797*^9}},ExpressionUUID->"75fa8d16-64b2-4512-bd89-c01a81e7bb49"],

Cell["\<\
This project has developed a Classifier and a Package that may be implemented \
in a variety of applications. Below are two exemplars. One has the student \
submits an answer to a randomly selected question from a database that has \
been built using Wolfram|Alpha\[CloseCurlyQuote]s Problem Generator. The \
student may select one of the three levels, receive a question, submit an \
answer and check that it is correct. After the correct answer has been \
submitted, the system automatically pulls a new question from the list in the \
selected type. The second allows for the teacher to create a quiz and store \
it as a new database, which will then be fed to the first exemplar. Thus, we \
see this project as a quiet sever side application, and as a service that \
would be deliverable to a client. Further work could encompass the addition \
of further levels of question, the use of graphical data as a selected answer \
or the inclusion of a retraining function in the neural net to improve \
classification accuracy. \
\>", "Text",
 CellChangeTimes->{{3.771667469119134*^9, 3.7716675108228145`*^9}, {
  3.7716676815134563`*^9, 3.771667743116147*^9}, {3.7716677896480713`*^9, 
  3.771668181556141*^9}},ExpressionUUID->"4d877e24-a992-4e78-93ee-\
cc0668df8a23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exemplar Implementation", "Section",
 CellChangeTimes->{{3.771174403321742*^9, 3.7711744153192635`*^9}, {
  3.771618599104535*^9, 
  3.771618602621016*^9}},ExpressionUUID->"99fc6342-7af7-4fb5-9314-\
c7b2eb191ace"],

Cell[BoxData[""], "Input",
 InitializationCell->
  True,ExpressionUUID->"caaa2a88-020c-446e-8a05-bf143db8d327"],

Cell[BoxData[{
 RowBox[{"studentModule", "=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "question", ",", " ", "type", ",", " ", "answer", ",", " ", 
      "correctanswer", ",", " ", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pnumber", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", "algebra2Qsq", "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FormFunction", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"\"\<Type of Problem\>\"", "\[Rule]", " ", 
          RowBox[{
           RowBox[{"Restricted", "[", 
            RowBox[{"\"\<String\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Algebra 1\>\"", ",", " ", "\"\<Algebra 2 and Trig\>\"", 
               ",", " ", "\"\<Calculus\>\""}], "}"}]}], "]"}], "\[Rule]", 
           " ", "\"\<Algebra 1\>\""}]}], ",", " ", "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{"#level", "&"}], ",", " ", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"problems", "[", 
            RowBox[{"TemplateSlot", "[", "\"\<level\>\"", "]"}], "]"}], 
           "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "120"}], "}"}], "]"}], 
          "\[RightDoubleBracket]"}], " ", ",", "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{"\"\<Answer\>\"", "\[Rule]", " ", "\"\<String\>\""}]}], 
        "}"}], ",", "\[IndentingNewLine]", "\t\t\t  ", 
       RowBox[{"AppearanceRules", "\[Rule]", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{
          "\"\<Title\>\"", "\[Rule]", " ", 
           "\"\<Student Problem Generator\>\""}], ",", " ", 
          RowBox[{
          "\"\<Description\>\"", "\[Rule]", 
           "\"\<Randomly Generated problems in selected topic\>\""}], ",", 
          " ", 
          RowBox[{
          "\"\<SubmitLabel\>\"", "\[Rule]", " ", "\"\<Check Answer\>\""}], 
          ",", " ", 
          RowBox[{"\"\<BackgroundColor\>\"", "\[Rule]", "LightBlue"}]}], 
         "|>"}]}], ",", "\[IndentingNewLine]", "\t\t\t", "f"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"package", " ", "here"}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CloudDeploy", "[", "studentModule", "]"}]}], "Input",
 CellChangeTimes->{{3.7716186060714684`*^9, 3.7716186090956354`*^9}, {
  3.7716186417409687`*^9, 3.7716187031115875`*^9}, {3.771618788725581*^9, 
  3.7716187899764614`*^9}, {3.7716188256887817`*^9, 3.771618904567808*^9}, {
  3.771618990413047*^9, 3.771619035937029*^9}, {3.7716191331259193`*^9, 
  3.7716191397866526`*^9}, {3.771619198501766*^9, 3.771619266447056*^9}, {
  3.7716192986634483`*^9, 3.77161935359449*^9}, {3.771669697714672*^9, 
  3.7716697108886814`*^9}, {3.771669761339993*^9, 3.7716697667762403`*^9}, {
  3.7716698122161894`*^9, 
  3.771669833782019*^9}},ExpressionUUID->"da6afc69-44bc-4440-afe1-\
83107bc1a0f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization Cells", "Section",
 CellChangeTimes->{{3.7711743873343735`*^9, 
  3.771174393953087*^9}},ExpressionUUID->"dae36e4e-4dd3-4781-a156-\
916fecd088b5"],

Cell["", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
  3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
  3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, {
  3.7711721485874033`*^9, 
  3.771172148954647*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 286, 4, 96, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[CellGroupData[{
Cell[891, 30, 283, 5, 59, "Subsection",ExpressionUUID->"1d58c7a6-305f-4f13-a0bf-079cc50c5197"],
Cell[1177, 37, 490, 10, 56, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[CellGroupData[{
Cell[1692, 51, 192, 3, 56, "Subsubsection",ExpressionUUID->"fb710aff-fd2a-4bf1-b831-4e6dc439ea7e"],
Cell[1887, 56, 1042, 17, 100, "Text",ExpressionUUID->"6850a510-9bfe-4287-82fb-db29f6231abd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2978, 79, 214, 4, 67, "Section",ExpressionUUID->"29fe6de1-60da-4abd-95c9-87e187494597"],
Cell[3195, 85, 1218, 18, 100, "Text",ExpressionUUID->"49e65a25-d76b-4675-9ee7-b3dec955efca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4450, 108, 337, 5, 67, "Section",ExpressionUUID->"604618ba-ba87-4456-819f-37415c3c8c36"],
Cell[CellGroupData[{
Cell[4812, 117, 208, 4, 53, "Subsection",ExpressionUUID->"b1b516ac-247d-4f4f-b944-4938f1218eb3"],
Cell[5023, 123, 962, 16, 78, "Text",ExpressionUUID->"462f756c-54f5-4530-865a-bc0d509c817d"],
Cell[5988, 141, 6722, 168, 444, "Input",ExpressionUUID->"6375fe16-c12b-4856-85ad-d3e811ac366b",
 InitializationCell->True],
Cell[12713, 311, 708, 13, 56, "Text",ExpressionUUID->"2121fcad-089f-41b2-bcbb-f0213cf65723"],
Cell[13424, 326, 160, 3, 44, "Subsubsection",ExpressionUUID->"53e17a2e-e812-46d2-a2ae-57a8cce8642b"],
Cell[13587, 331, 167, 3, 36, "Subsubsection",ExpressionUUID->"e7c1494e-c535-46cd-bc14-5791bf096e9b"],
Cell[13757, 336, 175, 3, 36, "Subsubsection",ExpressionUUID->"5ac55906-849b-4d52-b10d-d033f55accf5"],
Cell[13935, 341, 220, 4, 36, "Subsubsection",ExpressionUUID->"7c53b2cf-883f-4172-b7d6-cb2708dd7fb3"],
Cell[14158, 347, 173, 3, 36, "Subsubsection",ExpressionUUID->"f153968f-db5c-4c67-bf92-1f286a9e7819"],
Cell[14334, 352, 170, 3, 36, "Subsubsection",ExpressionUUID->"097eb12d-eea5-4027-b918-f4d4ee033ce3"],
Cell[14507, 357, 164, 2, 36, "Subsubsection",ExpressionUUID->"0323e150-e97b-4ffb-bd5c-9f27dfd38eb3"],
Cell[CellGroupData[{
Cell[14696, 363, 162, 3, 36, "Subsubsection",ExpressionUUID->"cc7d4999-d1a2-42f7-9373-9f3f47eea3a9"],
Cell[14861, 368, 223, 4, 34, "Text",ExpressionUUID->"a1ae7a9c-7904-4514-9f7f-9af85e0a34a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15133, 378, 239, 4, 53, "Subsection",ExpressionUUID->"6b6beba0-b5c4-4022-8b92-3a006474990c"],
Cell[15375, 384, 551, 10, 78, "Text",ExpressionUUID->"d24fc404-17a4-4bcf-87b9-67a5ed820cfe"],
Cell[15929, 396, 930, 30, 219, "Text",ExpressionUUID->"02e5237a-6632-478d-84b0-b3694f818789"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16908, 432, 205, 3, 67, "Section",ExpressionUUID->"0c299d7e-52e9-44a4-bfe4-741a5a8dfb7a"],
Cell[17116, 437, 381, 7, 34, "Text",ExpressionUUID->"531fa7ce-50d9-4145-8254-5fbc6fcb731c"],
Cell[CellGroupData[{
Cell[17522, 448, 222, 4, 53, "Subsection",ExpressionUUID->"c45ad82d-dd33-4013-a3c2-d0791d4a3802"],
Cell[17747, 454, 370, 7, 34, "Text",ExpressionUUID->"9b154555-ec65-4193-88ee-c49143418f7e"],
Cell[18120, 463, 421, 8, 34, "Text",ExpressionUUID->"416cb0d8-0e07-4d11-bb87-ee1d01834797"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18578, 476, 187, 3, 53, "Subsection",ExpressionUUID->"c273f908-ffe4-4ebb-abba-870efb3ad9b2"],
Cell[18768, 481, 211, 5, 34, "Text",ExpressionUUID->"92bc0b89-8053-40f4-ae89-60fd478f0ad8"],
Cell[18982, 488, 333, 7, 34, "Text",ExpressionUUID->"76fab179-5cb6-4009-964b-8df3886909fc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19364, 501, 149, 2, 67, "Section",ExpressionUUID->"75fa8d16-64b2-4512-bd89-c01a81e7bb49"],
Cell[19516, 505, 1278, 19, 122, "Text",ExpressionUUID->"4d877e24-a992-4e78-93ee-cc0668df8a23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20831, 529, 219, 4, 67, "Section",ExpressionUUID->"99fc6342-7af7-4fb5-9314-c7b2eb191ace"],
Cell[21053, 535, 111, 2, 44, "Input",ExpressionUUID->"caaa2a88-020c-446e-8a05-bf143db8d327",
 InitializationCell->True],
Cell[21167, 539, 3249, 72, 257, "Input",ExpressionUUID->"da6afc69-44bc-4440-afe1-83107bc1a0f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24453, 616, 167, 3, 67, "Section",ExpressionUUID->"dae36e4e-4dd3-4781-a156-916fecd088b5"],
Cell[24623, 621, 344, 6, 34, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"]
}, Open  ]]
}, Open  ]]
}
]
*)

